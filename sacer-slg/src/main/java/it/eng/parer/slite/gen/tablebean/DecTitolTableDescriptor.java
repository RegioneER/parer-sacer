package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Dec_Titol
 *
 */
public class DecTitolTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Monday, 1 December 2014 17:05" )
     */

    public static final String SELECT = "Select * from Dec_Titol /**/";
    public static final String TABLE_NAME = "Dec_Titol";
    public static final String COL_ID_TITOL = "id_titol";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_NM_TITOL = "nm_titol";
    public static final String COL_DT_ISTITUZ = "dt_istituz";
    public static final String COL_DT_SOPPRES = "dt_soppres";
    public static final String COL_NI_LIVELLI = "ni_livelli";
    public static final String COL_CD_SEP_FASCICOLO = "cd_sep_fascicolo";
    public static final String COL_DL_NOTE = "dl_note";
    public static final String COL_TI_STATO_TITOL = "ti_stato_titol";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_TITOL, new ColumnDescriptor(COL_ID_TITOL, Types.DECIMAL, 22, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, false));
        map.put(COL_NM_TITOL, new ColumnDescriptor(COL_NM_TITOL, Types.VARCHAR, 100, false));
        map.put(COL_DT_ISTITUZ, new ColumnDescriptor(COL_DT_ISTITUZ, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_SOPPRES, new ColumnDescriptor(COL_DT_SOPPRES, Types.TIMESTAMP, 7, false));
        map.put(COL_NI_LIVELLI, new ColumnDescriptor(COL_NI_LIVELLI, Types.DECIMAL, 22, false));
        map.put(COL_CD_SEP_FASCICOLO, new ColumnDescriptor(COL_CD_SEP_FASCICOLO, Types.VARCHAR, 1, false));
        map.put(COL_DL_NOTE, new ColumnDescriptor(COL_DL_NOTE, Types.VARCHAR, 1024, false));
        map.put(COL_TI_STATO_TITOL, new ColumnDescriptor(COL_TI_STATO_TITOL, Types.VARCHAR, 20, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
