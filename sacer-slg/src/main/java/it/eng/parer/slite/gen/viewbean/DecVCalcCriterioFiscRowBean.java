/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.math.BigDecimal;

import it.eng.parer.viewEntity.DecVCalcCriterioFisc;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Dec_V_Calc_Criterio_Fisc
 *
 */
public class DecVCalcCriterioFiscRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter",
     * comments = "This class was generated by OraTool", date = "Monday, 16 October 2017 14:50" )
     */
    private static final long serialVersionUID = 1L;

    public static DecVCalcCriterioFiscTableDescriptor TABLE_DESCRIPTOR = new DecVCalcCriterioFiscTableDescriptor();

    public DecVCalcCriterioFiscRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    public BigDecimal getIdCriterioRaggr() {
	return getBigDecimal("id_criterio_raggr");
    }

    public void setIdCriterioRaggr(BigDecimal idCriterioRaggr) {
	setObject("id_criterio_raggr", idCriterioRaggr);
    }

    public String getNmCriterioRaggr() {
	return getString("nm_criterio_raggr");
    }

    public void setNmCriterioRaggr(String nmCriterioRaggr) {
	setObject("nm_criterio_raggr", nmCriterioRaggr);
    }

    public String getDsMessaggio() {
	return getString("ds_messaggio");
    }

    public void setDsMessaggio(String dsMessaggio) {
	setObject("ds_messaggio", dsMessaggio);
    }

    @Override
    public void entityToRowBean(Object obj) {
	DecVCalcCriterioFisc entity = (DecVCalcCriterioFisc) obj;
	this.setIdCriterioRaggr(entity.getIdCriterioRaggr());
	this.setNmCriterioRaggr(entity.getNmCriterioRaggr());
	this.setDsMessaggio(entity.getDsMessaggio());
    }

    @Override
    public DecVCalcCriterioFisc rowBeanToEntity() {
	DecVCalcCriterioFisc entity = new DecVCalcCriterioFisc();
	entity.setIdCriterioRaggr(this.getIdCriterioRaggr());
	entity.setNmCriterioRaggr(this.getNmCriterioRaggr());
	entity.setDsMessaggio(this.getDsMessaggio());
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
