package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.FirCrl;
import it.eng.parer.entity.FirCertifCa;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Fir_Crl
 *
 */
public class FirCrlRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static FirCrlTableDescriptor TABLE_DESCRIPTOR = new FirCrlTableDescriptor();

    public FirCrlRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdCrl() {
        return getBigDecimal("id_crl");
    }

    public void setIdCrl(BigDecimal id_crl) {
        setObject("id_crl", id_crl);
    }

    public BigDecimal getIdCertifCa() {
        return getBigDecimal("id_certif_ca");
    }

    public void setIdCertifCa(BigDecimal id_certif_ca) {
        setObject("id_certif_ca", id_certif_ca);
    }

    public BigDecimal getNiSerialCrl() {
        return getBigDecimal("ni_serial_crl");
    }

    public void setNiSerialCrl(BigDecimal ni_serial_crl) {
        setObject("ni_serial_crl", ni_serial_crl);
    }

    public Timestamp getDtScadCrl() {
        return getTimestamp("dt_scad_crl");
    }

    public void setDtScadCrl(Timestamp dt_scad_crl) {
        setObject("dt_scad_crl", dt_scad_crl);
    }

    public Timestamp getDtIniCrl() {
        return getTimestamp("dt_ini_crl");
    }

    public void setDtIniCrl(Timestamp dt_ini_crl) {
        setObject("dt_ini_crl", dt_ini_crl);
    }

    @Override
    public void entityToRowBean(Object obj) {
        FirCrl entity = (FirCrl) obj;
        AbstractRecord ar;
        this.setIdCrl(new BigDecimal(entity.getIdCrl()));
        if (entity._persistence_get_firCertifCa_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_firCertifCa_vh()).getRow()) != null) {
                this.setIdCertifCa(new BigDecimal((Long) ar.get("FIR_CRL.ID_CERTIF_CA")));
            }
        } else {
            if (entity.getFirCertifCa() != null) {
                this.setIdCertifCa(new BigDecimal(entity.getFirCertifCa().getIdCertifCa()));
            }
        }
        this.setNiSerialCrl(entity.getNiSerialCrl());
        if (entity.getDtScadCrl() != null) {
            this.setDtScadCrl(new Timestamp(entity.getDtScadCrl().getTime()));
        }
        if (entity.getDtIniCrl() != null) {
            this.setDtIniCrl(new Timestamp(entity.getDtIniCrl().getTime()));
        }
    }

    @Override
    public FirCrl rowBeanToEntity() {
        FirCrl entity = new FirCrl();
        if (this.getIdCrl() != null) {
            entity.setIdCrl(this.getIdCrl().longValue());
        }
        if (this.getIdCertifCa() != null) {
            if (entity.getFirCertifCa() == null) {
                entity.setFirCertifCa(new FirCertifCa());
            }
            entity.getFirCertifCa().setIdCertifCa(this.getIdCertifCa().longValue());
        }
        entity.setNiSerialCrl(this.getNiSerialCrl());
        entity.setDtScadCrl(this.getDtScadCrl());
        entity.setDtIniCrl(this.getDtIniCrl());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
