/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.OrgStrut;
import it.eng.parer.entity.OrgSubStrut;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Org_Sub_Strut
 *
 */
public class OrgSubStrutRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Tuesday, 28 October 2014 11:16" )
     */
    private static final long serialVersionUID = 1L;

    public static OrgSubStrutTableDescriptor TABLE_DESCRIPTOR = new OrgSubStrutTableDescriptor();

    public OrgSubStrutRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdSubStrut() {
	return getBigDecimal("id_sub_strut");
    }

    public void setIdSubStrut(BigDecimal idSubStrut) {
	setObject("id_sub_strut", idSubStrut);
    }

    public BigDecimal getIdStrut() {
	return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal idStrut) {
	setObject("id_strut", idStrut);
    }

    public String getNmSubStrut() {
	return getString("nm_sub_strut");
    }

    public void setNmSubStrut(String nmSubStrut) {
	setObject("nm_sub_strut", nmSubStrut);
    }

    public String getDsSubStrut() {
	return getString("ds_sub_strut");
    }

    public void setDsSubStrut(String dsSubStrut) {
	setObject("ds_sub_strut", dsSubStrut);
    }

    @Override
    public void entityToRowBean(Object obj) {
	OrgSubStrut entity = (OrgSubStrut) obj;

	this.setIdSubStrut(
		entity.getIdSubStrut() == null ? null : BigDecimal.valueOf(entity.getIdSubStrut()));

	if (entity.getOrgStrut() != null) {
	    this.setIdStrut(new BigDecimal(entity.getOrgStrut().getIdStrut()));
	}

	this.setNmSubStrut(entity.getNmSubStrut());
	this.setDsSubStrut(entity.getDsSubStrut());
    }

    @Override
    public OrgSubStrut rowBeanToEntity() {
	OrgSubStrut entity = new OrgSubStrut();
	if (this.getIdSubStrut() != null) {
	    entity.setIdSubStrut(this.getIdSubStrut().longValue());
	}
	if (this.getIdStrut() != null) {
	    if (entity.getOrgStrut() == null) {
		entity.setOrgStrut(new OrgStrut());
	    }
	    entity.getOrgStrut().setIdStrut(this.getIdStrut().longValue());
	}
	entity.setNmSubStrut(this.getNmSubStrut());
	entity.setDsSubStrut(this.getDsSubStrut());
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
