package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.grantedEntity.SIAplNotaRilascio;
import it.eng.parer.grantedEntity.SIAplApplic;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Apl_Nota_Rilascio
 *
 */
public class SIAplNotaRilascioRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 26 June 2019 11:18" )
     */

    public static SIAplNotaRilascioTableDescriptor TABLE_DESCRIPTOR = new SIAplNotaRilascioTableDescriptor();

    public SIAplNotaRilascioRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdNotaRilascio() {
        return getBigDecimal("id_nota_rilascio");
    }

    public void setIdNotaRilascio(BigDecimal id_nota_rilascio) {
        setObject("id_nota_rilascio", id_nota_rilascio);
    }

    public BigDecimal getIdApplic() {
        return getBigDecimal("id_applic");
    }

    public void setIdApplic(BigDecimal id_applic) {
        setObject("id_applic", id_applic);
    }

    public String getCdVersione() {
        return getString("cd_versione");
    }

    public void setCdVersione(String cd_versione) {
        setObject("cd_versione", cd_versione);
    }

    public Timestamp getDtVersione() {
        return getTimestamp("dt_versione");
    }

    public void setDtVersione(Timestamp dt_versione) {
        setObject("dt_versione", dt_versione);
    }

    public Timestamp getDtIniVal() {
        return getTimestamp("dt_ini_val");
    }

    public void setDtIniVal(Timestamp dt_ini_val) {
        setObject("dt_ini_val", dt_ini_val);
    }

    public Timestamp getDtFineVal() {
        return getTimestamp("dt_fine_val");
    }

    public void setDtFineVal(Timestamp dt_fine_val) {
        setObject("dt_fine_val", dt_fine_val);
    }

    public String getDsEvidenza() {
        return getString("ds_evidenza");
    }

    public void setDsEvidenza(String ds_evidenza) {
        setObject("ds_evidenza", ds_evidenza);
    }

    public String getBlNota() {
        return getString("bl_nota");
    }

    public void setBlNota(String bl_nota) {
        setObject("bl_nota", bl_nota);
    }

    @Override
    public void entityToRowBean(Object obj) {
        SIAplNotaRilascio entity = (SIAplNotaRilascio) obj;
        AbstractRecord ar;
        this.setIdNotaRilascio(new BigDecimal(entity.getIdNotaRilascio()));
        if (entity._persistence_get_siAplApplic_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_siAplApplic_vh()).getRow()) != null) {
                this.setIdApplic(new BigDecimal((Long) ar.get("APL_NOTA_RILASCIO.ID_APPLIC")));
            }
        } else {
            if (entity.getSiAplApplic() != null) {
                this.setIdApplic(new BigDecimal(entity.getSiAplApplic().getIdApplic()));
            }
        }
        this.setCdVersione(entity.getCdVersione());
        if (entity.getDtVersione() != null) {
            this.setDtVersione(new Timestamp(entity.getDtVersione().getTime()));
        }
        if (entity.getDtIniVal() != null) {
            this.setDtIniVal(new Timestamp(entity.getDtIniVal().getTime()));
        }
        if (entity.getDtFineVal() != null) {
            this.setDtFineVal(new Timestamp(entity.getDtFineVal().getTime()));
        }
        this.setDsEvidenza(entity.getDsEvidenza());
        this.setBlNota(entity.getBlNota());
    }

    @Override
    public SIAplNotaRilascio rowBeanToEntity() {
        SIAplNotaRilascio entity = new SIAplNotaRilascio();
        if (this.getIdNotaRilascio() != null) {
            entity.setIdNotaRilascio(this.getIdNotaRilascio().longValue());
        }
        if (this.getIdApplic() != null) {
            if (entity.getSiAplApplic() == null) {
                entity.setSiAplApplic(new SIAplApplic());
            }
            entity.getSiAplApplic().setIdApplic(this.getIdApplic().longValue());
        }
        entity.setCdVersione(this.getCdVersione());
        entity.setDtVersione(this.getDtVersione());
        entity.setDtIniVal(this.getDtIniVal());
        entity.setDtFineVal(this.getDtFineVal());
        entity.setDsEvidenza(this.getDsEvidenza());
        entity.setBlNota(this.getBlNota());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
