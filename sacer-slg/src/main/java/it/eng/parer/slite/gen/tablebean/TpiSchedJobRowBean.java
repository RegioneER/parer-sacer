package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.TpiSchedJob;
import it.eng.parer.entity.TpiDtSched;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Tpi_Sched_Job
 *
 */
public class TpiSchedJobRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 7 May 2014 11:54" )
     */

    public static TpiSchedJobTableDescriptor TABLE_DESCRIPTOR = new TpiSchedJobTableDescriptor();

    public TpiSchedJobRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdSchedJob() {
        return getBigDecimal("id_sched_job");
    }

    public void setIdSchedJob(BigDecimal id_sched_job) {
        setObject("id_sched_job", id_sched_job);
    }

    public BigDecimal getIdDtSched() {
        return getBigDecimal("id_dt_sched");
    }

    public void setIdDtSched(BigDecimal id_dt_sched) {
        setObject("id_dt_sched", id_dt_sched);
    }

    public String getTiTpiSchedJob() {
        return getString("ti_tpi_sched_job");
    }

    public void setTiTpiSchedJob(String ti_tpi_sched_job) {
        setObject("ti_tpi_sched_job", ti_tpi_sched_job);
    }

    public String getNmJob() {
        return getString("nm_job");
    }

    public void setNmJob(String nm_job) {
        setObject("nm_job", nm_job);
    }

    public String getFlMigraz() {
        return getString("fl_migraz");
    }

    public void setFlMigraz(String fl_migraz) {
        setObject("fl_migraz", fl_migraz);
    }

    public Timestamp getDtSchedJob() {
        return getTimestamp("dt_sched_job");
    }

    public void setDtSchedJob(Timestamp dt_sched_job) {
        setObject("dt_sched_job", dt_sched_job);
    }

    public String getFlJobOk() {
        return getString("fl_job_ok");
    }

    public void setFlJobOk(String fl_job_ok) {
        setObject("fl_job_ok", fl_job_ok);
    }

    public String getDsDurataJob() {
        return getString("ds_durata_job");
    }

    public void setDsDurataJob(String ds_durata_job) {
        setObject("ds_durata_job", ds_durata_job);
    }

    public String getDlErrJob() {
        return getString("dl_err_job");
    }

    public void setDlErrJob(String dl_err_job) {
        setObject("dl_err_job", dl_err_job);
    }

    public BigDecimal getNiOrdSchedJob() {
        return getBigDecimal("ni_ord_sched_job");
    }

    public void setNiOrdSchedJob(BigDecimal ni_ord_sched_job) {
        setObject("ni_ord_sched_job", ni_ord_sched_job);
    }

    public String getFlFineSched() {
        return getString("fl_fine_sched");
    }

    public void setFlFineSched(String fl_fine_sched) {
        setObject("fl_fine_sched", fl_fine_sched);
    }

    @Override
    public void entityToRowBean(Object obj) {
        TpiSchedJob entity = (TpiSchedJob) obj;
        AbstractRecord ar;
        this.setIdSchedJob(new BigDecimal(entity.getIdSchedJob()));
        if (entity._persistence_get_tpiDtSched_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_tpiDtSched_vh()).getRow()) != null) {
                this.setIdDtSched(new BigDecimal((Long) ar.get("TPI_SCHED_JOB.ID_DT_SCHED")));
            }
        } else {
            if (entity.getTpiDtSched() != null) {
                this.setIdDtSched(new BigDecimal(entity.getTpiDtSched().getIdDtSched()));
            }
        }
        this.setTiTpiSchedJob(entity.getTiTpiSchedJob());
        this.setNmJob(entity.getNmJob());
        this.setFlMigraz(entity.getFlMigraz());
        if (entity.getDtSchedJob() != null) {
            this.setDtSchedJob(new Timestamp(entity.getDtSchedJob().getTime()));
        }
        this.setFlJobOk(entity.getFlJobOk());
        this.setDsDurataJob(entity.getDsDurataJob());
        this.setDlErrJob(entity.getDlErrJob());
        this.setNiOrdSchedJob(entity.getNiOrdSchedJob());
        this.setFlFineSched(entity.getFlFineSched());
    }

    @Override
    public TpiSchedJob rowBeanToEntity() {
        TpiSchedJob entity = new TpiSchedJob();
        if (this.getIdSchedJob() != null) {
            entity.setIdSchedJob(this.getIdSchedJob().longValue());
        }
        if (this.getIdDtSched() != null) {
            if (entity.getTpiDtSched() == null) {
                entity.setTpiDtSched(new TpiDtSched());
            }
            entity.getTpiDtSched().setIdDtSched(this.getIdDtSched().longValue());
        }
        entity.setTiTpiSchedJob(this.getTiTpiSchedJob());
        entity.setNmJob(this.getNmJob());
        entity.setFlMigraz(this.getFlMigraz());
        entity.setDtSchedJob(this.getDtSchedJob());
        entity.setFlJobOk(this.getFlJobOk());
        entity.setDsDurataJob(this.getDsDurataJob());
        entity.setDlErrJob(this.getDlErrJob());
        entity.setNiOrdSchedJob(this.getNiOrdSchedJob());
        entity.setFlFineSched(this.getFlFineSched());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
