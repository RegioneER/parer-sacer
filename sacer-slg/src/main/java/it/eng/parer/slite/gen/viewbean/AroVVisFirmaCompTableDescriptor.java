/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_V_Vis_Firma_Comp
 *
 */
public class AroVVisFirmaCompTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 8 July 2015 10:44" )
     */

    public static final String SELECT = "Select * from Aro_V_Vis_Firma_Comp /**/";
    public static final String TABLE_NAME = "Aro_V_Vis_Firma_Comp";
    public static final String COL_NM_AMBIENTE = "nm_ambiente";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_NM_STRUT = "nm_strut";
    public static final String COL_ID_UNITA_DOC = "id_unita_doc";
    public static final String COL_CD_REGISTRO_KEY_UNITA_DOC = "cd_registro_key_unita_doc";
    public static final String COL_AA_KEY_UNITA_DOC = "aa_key_unita_doc";
    public static final String COL_CD_KEY_UNITA_DOC = "cd_key_unita_doc";
    public static final String COL_NM_TIPO_UNITA_DOC = "nm_tipo_unita_doc";
    public static final String COL_DT_ANNUL_UNITA_DOC = "dt_annul_unita_doc";
    public static final String COL_TI_ANNUL_UNITA_DOC = "ti_annul_unita_doc";
    public static final String COL_NT_ANNUL_UNITA_DOC = "nt_annul_unita_doc";
    public static final String COL_ID_DOC = "id_doc";
    public static final String COL_CD_KEY_DOC_VERS = "cd_key_doc_vers";
    public static final String COL_TI_DOC = "ti_doc";
    public static final String COL_PG_DOC = "pg_doc";
    public static final String COL_NM_TIPO_DOC = "nm_tipo_doc";
    public static final String COL_DT_ANNUL_DOC = "dt_annul_doc";
    public static final String COL_TI_ANNUL_DOC = "ti_annul_doc";
    public static final String COL_NT_ANNUL_DOC = "nt_annul_doc";
    public static final String COL_ID_COMP_DOC = "id_comp_doc";
    public static final String COL_NI_ORD_COMP_DOC = "ni_ord_comp_doc";
    public static final String COL_NM_TIPO_COMP_DOC = "nm_tipo_comp_doc";
    public static final String COL_DS_URN_COMP_CALC = "ds_urn_comp_calc";
    public static final String COL_NM_FORMATO_CALC = "nm_formato_calc";
    public static final String COL_ID_FIRMA_COMP = "id_firma_comp";
    public static final String COL_PG_FIRMA = "pg_firma";
    public static final String COL_CD_FIRMATARIO = "cd_firmatario";
    public static final String COL_NM_COGNOME_FIRMATARIO = "nm_cognome_firmatario";
    public static final String COL_NM_FIRMATARIO = "nm_firmatario";
    public static final String COL_TI_FIRMA = "ti_firma";
    public static final String COL_TI_ESITO_CONTR_CONFORME = "ti_esito_contr_conforme";
    public static final String COL_DS_MSG_ESITO_CONTR_CONFORME = "ds_msg_esito_contr_conforme";
    public static final String COL_DS_ALGO_FIRMA = "ds_algo_firma";
    public static final String COL_TI_FORMATO_FIRMA = "ti_formato_firma";
    public static final String COL_PG_BUSTA = "pg_busta";
    public static final String COL_ISSUER_CERTIF_FIRMATARIO = "issuer_certif_firmatario";
    public static final String COL_DS_SERIAL_CERTIF_CA = "ds_serial_certif_ca";
    public static final String COL_DS_SERIAL_CERTIF_FIRMATARIO = "ds_serial_certif_firmatario";
    public static final String COL_DT_INI_VAL_CERTIF_FIRMATARIO = "dt_ini_val_certif_firmatario";
    public static final String COL_DT_FIN_VAL_CERTIF_FIRMATARIO = "dt_fin_val_certif_firmatario";
    public static final String COL_DT_FIRMA = "dt_firma";
    public static final String COL_TM_MARCA_TEMP_RIFERITA = "tm_marca_temp_riferita";
    public static final String COL_TM_RIF_TEMP_USATO = "tm_rif_temp_usato";
    public static final String COL_TI_RIF_TEMP_USATO = "ti_rif_temp_usato";
    public static final String COL_TI_ESITO_VERIF_FIRMA = "ti_esito_verif_firma";
    public static final String COL_DS_MSG_ESITO_VERIF_FIRMA = "ds_msg_esito_verif_firma";
    public static final String COL_TI_ESITO_VERIF_FIRMA_CHIUS = "ti_esito_verif_firma_chius";
    public static final String COL_DS_MSG_ESITO_VERIF_FIRMA_CHIUS = "ds_msg_esito_verif_firma_chius";
    public static final String COL_NM_COGNOME_FIRMATARIO_PADRE = "nm_cognome_firmatario_padre";
    public static final String COL_NM_FIRMATARIO_PADRE = "nm_firmatario_padre";
    public static final String COL_ESITO_CRITTOGRAFICO = "esito_crittografico";
    public static final String COL_MSG_ESITO_CRITTOGRAFICO = "msg_esito_crittografico";
    public static final String COL_ID_CONTR_FIRMA_CATENA = "id_contr_firma_catena";
    public static final String COL_ESITO_CATENA = "esito_catena";
    public static final String COL_MSG_ESITO_CATENA = "msg_esito_catena";
    public static final String COL_ESITO_CERTIFICATO = "esito_certificato";
    public static final String COL_MSG_ESITO_CERTIFICATO = "msg_esito_certificato";
    public static final String COL_ESITO_CRL = "esito_crl";
    public static final String COL_MSG_ESITO_CRL = "msg_esito_crl";
    public static final String COL_ISSUER_CRL = "issuer_crl";
    public static final String COL_SERIAL_CA_CRL = "serial_ca_crl";
    public static final String COL_SERIAL_CRL = "serial_crl";
    public static final String COL_DT_SCAD_CRL = "dt_scad_crl";
    public static final String COL_NM_VOLUME_CONSERV = "nm_volume_conserv";
    public static final String COL_DS_VOLUME_CONSERV = "ds_volume_conserv";
    public static final String COL_TI_STATO_VOLUME_CONSERV = "ti_stato_volume_conserv";
    public static final String COL_DT_CREAZIONE = "dt_creazione";
    public static final String COL_DT_CHIUS_VOLUME = "dt_chius_volume";
    public static final String COL_ESITO_CRITTOGRAFICO_VOL = "esito_crittografico_vol";
    public static final String COL_MSG_ESITO_CRITTOGRAFICO_VOL = "msg_esito_crittografico_vol";
    public static final String COL_ESITO_CATENA_VOL = "esito_catena_vol";
    public static final String COL_MSG_ESITO_CATENA_VOL = "msg_esito_catena_vol";
    public static final String COL_ESITO_CERTIFICATO_VOL = "esito_certificato_vol";
    public static final String COL_MSG_ESITO_CERTIFICATO_VOL = "msg_esito_certificato_vol";
    public static final String COL_ESITO_CRL_VOL = "esito_crl_vol";
    public static final String COL_MSG_ESITO_CRL_VOL = "msg_esito_crl_vol";
    public static final String COL_SERIAL_CRL_VOL = "serial_crl_vol";
    public static final String COL_DT_SCAD_CRL_VOL = "dt_scad_crl_vol";
    public static final String COL_TI_ESITO_VERIF_FIRMA_DT_VERS = "ti_esito_verif_firma_dt_vers";
    public static final String COL_DS_MSG_VERIF_FIRMA_DT_VERS = "ds_msg_verif_firma_dt_vers";
    public static final String COL_ESITO_CRITTOG_DT_VERS = "esito_crittog_dt_vers";
    public static final String COL_MSG_ESITO_CRITTOG_DT_VERS = "msg_esito_crittog_dt_vers";
    public static final String COL_ESITO_CATENA_DT_VERS = "esito_catena_dt_vers";
    public static final String COL_MSG_ESITO_CATENA_DT_VERS = "msg_esito_catena_dt_vers";
    public static final String COL_ESITO_CERTIFICATO_DT_VERS = "esito_certificato_dt_vers";
    public static final String COL_MSG_ESITO_CERTIFICATO_DT_VERS = "msg_esito_certificato_dt_vers";
    public static final String COL_ESITO_CRL_DT_VERS = "esito_crl_dt_vers";
    public static final String COL_MSG_ESITO_CRL_DT_VERS = "msg_esito_crl_dt_vers";
    public static final String COL_SERIAL_CRL_DT_VERS = "serial_crl_dt_vers";
    public static final String COL_DT_SCAD_CRL_DT_VERS = "dt_scad_crl_dt_vers";
    public static final String COL_BL_FIRMA_BASE64 = "bl_firma_base64";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_NM_AMBIENTE, new ColumnDescriptor(COL_NM_AMBIENTE, Types.VARCHAR, 100, true));
        map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, true));
        map.put(COL_NM_STRUT, new ColumnDescriptor(COL_NM_STRUT, Types.VARCHAR, 100, true));
        map.put(COL_ID_UNITA_DOC, new ColumnDescriptor(COL_ID_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_CD_REGISTRO_KEY_UNITA_DOC,
                new ColumnDescriptor(COL_CD_REGISTRO_KEY_UNITA_DOC, Types.VARCHAR, 100, true));
        map.put(COL_AA_KEY_UNITA_DOC, new ColumnDescriptor(COL_AA_KEY_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_UNITA_DOC, new ColumnDescriptor(COL_CD_KEY_UNITA_DOC, Types.VARCHAR, 100, true));
        map.put(COL_NM_TIPO_UNITA_DOC, new ColumnDescriptor(COL_NM_TIPO_UNITA_DOC, Types.VARCHAR, 100, true));
        map.put(COL_DT_ANNUL_UNITA_DOC, new ColumnDescriptor(COL_DT_ANNUL_UNITA_DOC, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_ANNUL_UNITA_DOC, new ColumnDescriptor(COL_TI_ANNUL_UNITA_DOC, Types.VARCHAR, 20, true));
        map.put(COL_NT_ANNUL_UNITA_DOC, new ColumnDescriptor(COL_NT_ANNUL_UNITA_DOC, Types.VARCHAR, 2000, true));
        map.put(COL_ID_DOC, new ColumnDescriptor(COL_ID_DOC, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_DOC_VERS, new ColumnDescriptor(COL_CD_KEY_DOC_VERS, Types.VARCHAR, 100, true));
        map.put(COL_TI_DOC, new ColumnDescriptor(COL_TI_DOC, Types.VARCHAR, 20, true));
        map.put(COL_PG_DOC, new ColumnDescriptor(COL_PG_DOC, Types.DECIMAL, 22, true));
        map.put(COL_NM_TIPO_DOC, new ColumnDescriptor(COL_NM_TIPO_DOC, Types.VARCHAR, 100, true));
        map.put(COL_DT_ANNUL_DOC, new ColumnDescriptor(COL_DT_ANNUL_DOC, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_ANNUL_DOC, new ColumnDescriptor(COL_TI_ANNUL_DOC, Types.VARCHAR, 20, true));
        map.put(COL_NT_ANNUL_DOC, new ColumnDescriptor(COL_NT_ANNUL_DOC, Types.VARCHAR, 2000, true));
        map.put(COL_ID_COMP_DOC, new ColumnDescriptor(COL_ID_COMP_DOC, Types.DECIMAL, 22, true));
        map.put(COL_NI_ORD_COMP_DOC, new ColumnDescriptor(COL_NI_ORD_COMP_DOC, Types.DECIMAL, 22, true));
        map.put(COL_NM_TIPO_COMP_DOC, new ColumnDescriptor(COL_NM_TIPO_COMP_DOC, Types.VARCHAR, 100, true));
        map.put(COL_DS_URN_COMP_CALC, new ColumnDescriptor(COL_DS_URN_COMP_CALC, Types.VARCHAR, 254, true));
        map.put(COL_NM_FORMATO_CALC, new ColumnDescriptor(COL_NM_FORMATO_CALC, Types.VARCHAR, 100, true));
        map.put(COL_ID_FIRMA_COMP, new ColumnDescriptor(COL_ID_FIRMA_COMP, Types.DECIMAL, 22, true));
        map.put(COL_PG_FIRMA, new ColumnDescriptor(COL_PG_FIRMA, Types.DECIMAL, 22, true));
        map.put(COL_CD_FIRMATARIO, new ColumnDescriptor(COL_CD_FIRMATARIO, Types.VARCHAR, 100, true));
        map.put(COL_NM_COGNOME_FIRMATARIO, new ColumnDescriptor(COL_NM_COGNOME_FIRMATARIO, Types.VARCHAR, 1024, true));
        map.put(COL_NM_FIRMATARIO, new ColumnDescriptor(COL_NM_FIRMATARIO, Types.VARCHAR, 100, true));
        map.put(COL_TI_FIRMA, new ColumnDescriptor(COL_TI_FIRMA, Types.VARCHAR, 20, true));
        map.put(COL_TI_ESITO_CONTR_CONFORME,
                new ColumnDescriptor(COL_TI_ESITO_CONTR_CONFORME, Types.VARCHAR, 30, true));
        map.put(COL_DS_MSG_ESITO_CONTR_CONFORME,
                new ColumnDescriptor(COL_DS_MSG_ESITO_CONTR_CONFORME, Types.VARCHAR, 1024, true));
        map.put(COL_DS_ALGO_FIRMA, new ColumnDescriptor(COL_DS_ALGO_FIRMA, Types.VARCHAR, 254, true));
        map.put(COL_TI_FORMATO_FIRMA, new ColumnDescriptor(COL_TI_FORMATO_FIRMA, Types.VARCHAR, 20, true));
        map.put(COL_PG_BUSTA, new ColumnDescriptor(COL_PG_BUSTA, Types.DECIMAL, 22, true));
        map.put(COL_ISSUER_CERTIF_FIRMATARIO,
                new ColumnDescriptor(COL_ISSUER_CERTIF_FIRMATARIO, Types.VARCHAR, 1024, true));
        map.put(COL_DS_SERIAL_CERTIF_CA, new ColumnDescriptor(COL_DS_SERIAL_CERTIF_CA, Types.VARCHAR, 100, true));
        map.put(COL_DS_SERIAL_CERTIF_FIRMATARIO,
                new ColumnDescriptor(COL_DS_SERIAL_CERTIF_FIRMATARIO, Types.VARCHAR, 100, true));
        map.put(COL_DT_INI_VAL_CERTIF_FIRMATARIO,
                new ColumnDescriptor(COL_DT_INI_VAL_CERTIF_FIRMATARIO, Types.TIMESTAMP, 7, true));
        map.put(COL_DT_FIN_VAL_CERTIF_FIRMATARIO,
                new ColumnDescriptor(COL_DT_FIN_VAL_CERTIF_FIRMATARIO, Types.TIMESTAMP, 7, true));
        map.put(COL_DT_FIRMA, new ColumnDescriptor(COL_DT_FIRMA, Types.TIMESTAMP, 7, true));
        map.put(COL_TM_MARCA_TEMP_RIFERITA, new ColumnDescriptor(COL_TM_MARCA_TEMP_RIFERITA, Types.TIMESTAMP, 7, true));
        map.put(COL_TM_RIF_TEMP_USATO, new ColumnDescriptor(COL_TM_RIF_TEMP_USATO, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_RIF_TEMP_USATO, new ColumnDescriptor(COL_TI_RIF_TEMP_USATO, Types.VARCHAR, 20, true));
        map.put(COL_TI_ESITO_VERIF_FIRMA, new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRMA, Types.VARCHAR, 20, true));
        map.put(COL_DS_MSG_ESITO_VERIF_FIRMA,
                new ColumnDescriptor(COL_DS_MSG_ESITO_VERIF_FIRMA, Types.VARCHAR, 254, true));
        map.put(COL_TI_ESITO_VERIF_FIRMA_CHIUS,
                new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRMA_CHIUS, Types.VARCHAR, 20, true));
        map.put(COL_DS_MSG_ESITO_VERIF_FIRMA_CHIUS,
                new ColumnDescriptor(COL_DS_MSG_ESITO_VERIF_FIRMA_CHIUS, Types.VARCHAR, 254, true));
        map.put(COL_NM_COGNOME_FIRMATARIO_PADRE,
                new ColumnDescriptor(COL_NM_COGNOME_FIRMATARIO_PADRE, Types.VARCHAR, 100, true));
        map.put(COL_NM_FIRMATARIO_PADRE, new ColumnDescriptor(COL_NM_FIRMATARIO_PADRE, Types.VARCHAR, 100, true));
        map.put(COL_ESITO_CRITTOGRAFICO, new ColumnDescriptor(COL_ESITO_CRITTOGRAFICO, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CRITTOGRAFICO,
                new ColumnDescriptor(COL_MSG_ESITO_CRITTOGRAFICO, Types.VARCHAR, 1024, true));
        map.put(COL_ID_CONTR_FIRMA_CATENA, new ColumnDescriptor(COL_ID_CONTR_FIRMA_CATENA, Types.DECIMAL, 22, true));
        map.put(COL_ESITO_CATENA, new ColumnDescriptor(COL_ESITO_CATENA, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CATENA, new ColumnDescriptor(COL_MSG_ESITO_CATENA, Types.VARCHAR, 1024, true));
        map.put(COL_ESITO_CERTIFICATO, new ColumnDescriptor(COL_ESITO_CERTIFICATO, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CERTIFICATO, new ColumnDescriptor(COL_MSG_ESITO_CERTIFICATO, Types.VARCHAR, 1024, true));
        map.put(COL_ESITO_CRL, new ColumnDescriptor(COL_ESITO_CRL, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CRL, new ColumnDescriptor(COL_MSG_ESITO_CRL, Types.VARCHAR, 1024, true));
        map.put(COL_ISSUER_CRL, new ColumnDescriptor(COL_ISSUER_CRL, Types.VARCHAR, 1024, true));
        map.put(COL_SERIAL_CA_CRL, new ColumnDescriptor(COL_SERIAL_CA_CRL, Types.VARCHAR, 100, true));
        map.put(COL_SERIAL_CRL, new ColumnDescriptor(COL_SERIAL_CRL, Types.VARCHAR, 100, true));
        map.put(COL_DT_SCAD_CRL, new ColumnDescriptor(COL_DT_SCAD_CRL, Types.TIMESTAMP, 7, true));
        map.put(COL_NM_VOLUME_CONSERV, new ColumnDescriptor(COL_NM_VOLUME_CONSERV, Types.VARCHAR, 100, true));
        map.put(COL_DS_VOLUME_CONSERV, new ColumnDescriptor(COL_DS_VOLUME_CONSERV, Types.VARCHAR, 254, true));
        map.put(COL_TI_STATO_VOLUME_CONSERV,
                new ColumnDescriptor(COL_TI_STATO_VOLUME_CONSERV, Types.VARCHAR, 20, true));
        map.put(COL_DT_CREAZIONE, new ColumnDescriptor(COL_DT_CREAZIONE, Types.TIMESTAMP, 7, true));
        map.put(COL_DT_CHIUS_VOLUME, new ColumnDescriptor(COL_DT_CHIUS_VOLUME, Types.TIMESTAMP, 7, true));
        map.put(COL_ESITO_CRITTOGRAFICO_VOL,
                new ColumnDescriptor(COL_ESITO_CRITTOGRAFICO_VOL, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CRITTOGRAFICO_VOL,
                new ColumnDescriptor(COL_MSG_ESITO_CRITTOGRAFICO_VOL, Types.VARCHAR, 1024, true));
        map.put(COL_ESITO_CATENA_VOL, new ColumnDescriptor(COL_ESITO_CATENA_VOL, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CATENA_VOL, new ColumnDescriptor(COL_MSG_ESITO_CATENA_VOL, Types.VARCHAR, 1024, true));
        map.put(COL_ESITO_CERTIFICATO_VOL, new ColumnDescriptor(COL_ESITO_CERTIFICATO_VOL, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CERTIFICATO_VOL,
                new ColumnDescriptor(COL_MSG_ESITO_CERTIFICATO_VOL, Types.VARCHAR, 1024, true));
        map.put(COL_ESITO_CRL_VOL, new ColumnDescriptor(COL_ESITO_CRL_VOL, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CRL_VOL, new ColumnDescriptor(COL_MSG_ESITO_CRL_VOL, Types.VARCHAR, 1024, true));
        map.put(COL_SERIAL_CRL_VOL, new ColumnDescriptor(COL_SERIAL_CRL_VOL, Types.VARCHAR, 100, true));
        map.put(COL_DT_SCAD_CRL_VOL, new ColumnDescriptor(COL_DT_SCAD_CRL_VOL, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_ESITO_VERIF_FIRMA_DT_VERS,
                new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRMA_DT_VERS, Types.VARCHAR, 20, true));
        map.put(COL_DS_MSG_VERIF_FIRMA_DT_VERS,
                new ColumnDescriptor(COL_DS_MSG_VERIF_FIRMA_DT_VERS, Types.VARCHAR, 254, true));
        map.put(COL_ESITO_CRITTOG_DT_VERS, new ColumnDescriptor(COL_ESITO_CRITTOG_DT_VERS, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CRITTOG_DT_VERS,
                new ColumnDescriptor(COL_MSG_ESITO_CRITTOG_DT_VERS, Types.VARCHAR, 1024, true));
        map.put(COL_ESITO_CATENA_DT_VERS, new ColumnDescriptor(COL_ESITO_CATENA_DT_VERS, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CATENA_DT_VERS,
                new ColumnDescriptor(COL_MSG_ESITO_CATENA_DT_VERS, Types.VARCHAR, 1024, true));
        map.put(COL_ESITO_CERTIFICATO_DT_VERS,
                new ColumnDescriptor(COL_ESITO_CERTIFICATO_DT_VERS, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CERTIFICATO_DT_VERS,
                new ColumnDescriptor(COL_MSG_ESITO_CERTIFICATO_DT_VERS, Types.VARCHAR, 1024, true));
        map.put(COL_ESITO_CRL_DT_VERS, new ColumnDescriptor(COL_ESITO_CRL_DT_VERS, Types.VARCHAR, 30, true));
        map.put(COL_MSG_ESITO_CRL_DT_VERS, new ColumnDescriptor(COL_MSG_ESITO_CRL_DT_VERS, Types.VARCHAR, 1024, true));
        map.put(COL_SERIAL_CRL_DT_VERS, new ColumnDescriptor(COL_SERIAL_CRL_DT_VERS, Types.VARCHAR, 100, true));
        map.put(COL_DT_SCAD_CRL_DT_VERS, new ColumnDescriptor(COL_DT_SCAD_CRL_DT_VERS, Types.TIMESTAMP, 7, true));
        map.put(COL_BL_FIRMA_BASE64, new ColumnDescriptor(COL_BL_FIRMA_BASE64, Types.CLOB, 4000, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
