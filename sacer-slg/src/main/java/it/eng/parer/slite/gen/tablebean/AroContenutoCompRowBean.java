package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.AroContenutoComp;
import it.eng.parer.entity.AroCompDoc;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Aro_Contenuto_Comp
 *
 */
public class AroContenutoCompRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static AroContenutoCompTableDescriptor TABLE_DESCRIPTOR = new AroContenutoCompTableDescriptor();

    public AroContenutoCompRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdContenComp() {
        return getBigDecimal("id_conten_comp");
    }

    public void setIdContenComp(BigDecimal id_conten_comp) {
        setObject("id_conten_comp", id_conten_comp);
    }

    public BigDecimal getIdCompStrutDoc() {
        return getBigDecimal("id_comp_strut_doc");
    }

    public void setIdCompStrutDoc(BigDecimal id_comp_strut_doc) {
        setObject("id_comp_strut_doc", id_comp_strut_doc);
    }

    // FIXME: in pratica gestisce i Blob come stringhe, per i blob veri e' da implementare
    public String getBlContenComp() {
        return getString("bl_conten_comp");
    }

    public void setBlContenComp(String bl_conten_comp) {
        setObject("bl_conten_comp", bl_conten_comp);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal id_strut) {
        setObject("id_strut", id_strut);
    }

    public BigDecimal getAaKeyUnitaDoc() {
        return getBigDecimal("aa_key_unita_doc");
    }

    public void setAaKeyUnitaDoc(BigDecimal aa_key_unita_doc) {
        setObject("aa_key_unita_doc", aa_key_unita_doc);
    }

    @Override
    public void entityToRowBean(Object obj) {
        AroContenutoComp entity = (AroContenutoComp) obj;
        AbstractRecord ar;
        this.setIdContenComp(new BigDecimal(entity.getIdContenComp()));
        if (entity._persistence_get_aroCompDoc_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_aroCompDoc_vh()).getRow()) != null) {
                this.setIdCompStrutDoc(new BigDecimal((Long) ar.get("ARO_CONTENUTO_COMP.ID_COMP_STRUT_DOC")));
            }
        } else {
            if (entity.getAroCompDoc() != null) {
                this.setIdCompStrutDoc(new BigDecimal(entity.getAroCompDoc().getIdCompDoc()));
            }
        }
        this.setBlContenComp(new String(entity.getBlContenComp()));
        this.setIdStrut(entity.getIdStrut());
        this.setAaKeyUnitaDoc(entity.getAaKeyUnitaDoc());
    }

    @Override
    public AroContenutoComp rowBeanToEntity() {
        AroContenutoComp entity = new AroContenutoComp();
        if (this.getIdContenComp() != null) {
            entity.setIdContenComp(this.getIdContenComp().longValue());
        }
        if (this.getIdCompStrutDoc() != null) {
            if (entity.getAroCompDoc() == null) {
                entity.setAroCompDoc(new AroCompDoc());
            }
            entity.getAroCompDoc().setIdCompDoc(this.getIdCompStrutDoc().longValue());
        }
        entity.setBlContenComp(this.getBlContenComp().getBytes());
        entity.setIdStrut(this.getIdStrut());
        entity.setAaKeyUnitaDoc(this.getAaKeyUnitaDoc());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
