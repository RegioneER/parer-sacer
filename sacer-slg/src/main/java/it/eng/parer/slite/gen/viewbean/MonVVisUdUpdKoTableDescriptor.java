package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Mon_V_Vis_Ud_Upd_Ko
 *
 */
public class MonVVisUdUpdKoTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Friday, 8 November 2019 14:15" )
     */

    public static final String SELECT = "Select * from Mon_V_Vis_Ud_Upd_Ko /**/";
    public static final String TABLE_NAME = "Mon_V_Vis_Ud_Upd_Ko";
    public static final String COL_ID_ENTE = "id_ente";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_ID_TIPO_UNITA_DOC_LAST = "id_tipo_unita_doc_last";
    public static final String COL_NM_TIPO_UNITA_DOC_LAST = "nm_tipo_unita_doc_last";
    public static final String COL_ID_REGISTRO_UNITA_DOC_LAST = "id_registro_unita_doc_last";
    public static final String COL_ID_TIPO_DOC_PRINC_LAST = "id_tipo_doc_princ_last";
    public static final String COL_NM_TIPO_DOC_PRINC_LAST = "nm_tipo_doc_princ_last";
    public static final String COL_TI_STATO_UPD_UD_KO = "ti_stato_upd_ud_ko";
    public static final String COL_ID_SES_UPD_UD_KO_LAST = "id_ses_upd_ud_ko_last";
    public static final String COL_ID_UPD_UNITA_DOC_KO = "id_upd_unita_doc_ko";
    public static final String COL_DS_TS_INI_LAST_SES = "ds_ts_ini_last_ses";
    public static final String COL_DS_TS_FINE_LAST_SES = "ds_ts_fine_last_ses";
    public static final String COL_CD_VERSIONE_WS = "cd_versione_ws";
    public static final String COL_DS_ENTE_STRUT = "ds_ente_strut";
    public static final String COL_DS_UNITA_DOC = "ds_unita_doc";
    public static final String COL_ID_CONTROLLO_WS_PRINC = "id_controllo_ws_princ";
    public static final String COL_CD_CONTROLLO_WS_PRINC = "cd_controllo_ws_princ";
    public static final String COL_ID_ERR_SACER_PRINC = "id_err_sacer_princ";
    public static final String COL_CD_ERR_PRINC = "cd_err_princ";
    public static final String COL_DS_ERR_PRINC = "ds_err_princ";
    public static final String COL_ID_USER_IAM = "id_user_iam";
    public static final String COL_NM_USERID = "nm_userid";
    public static final String COL_ID_XML_SES_UPD_KO_RICH_LAST = "id_xml_ses_upd_ko_rich_last";
    public static final String COL_BL_XML_RICH_LAST = "bl_xml_rich_last";
    public static final String COL_ID_XML_SES_UPD_KO_RISP_LAST = "id_xml_ses_upd_ko_risp_last";
    public static final String COL_BL_XML_RISP_LAST = "bl_xml_risp_last";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_ENTE, new ColumnDescriptor(COL_ID_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
        map.put(COL_ID_TIPO_UNITA_DOC_LAST, new ColumnDescriptor(COL_ID_TIPO_UNITA_DOC_LAST, Types.DECIMAL, 22, true));
        map.put(COL_NM_TIPO_UNITA_DOC_LAST, new ColumnDescriptor(COL_NM_TIPO_UNITA_DOC_LAST, Types.VARCHAR, 100, true));
        map.put(COL_ID_REGISTRO_UNITA_DOC_LAST,
                new ColumnDescriptor(COL_ID_REGISTRO_UNITA_DOC_LAST, Types.DECIMAL, 22, true));
        map.put(COL_ID_TIPO_DOC_PRINC_LAST, new ColumnDescriptor(COL_ID_TIPO_DOC_PRINC_LAST, Types.DECIMAL, 22, true));
        map.put(COL_NM_TIPO_DOC_PRINC_LAST, new ColumnDescriptor(COL_NM_TIPO_DOC_PRINC_LAST, Types.VARCHAR, 100, true));
        map.put(COL_TI_STATO_UPD_UD_KO, new ColumnDescriptor(COL_TI_STATO_UPD_UD_KO, Types.VARCHAR, 20, true));
        map.put(COL_ID_SES_UPD_UD_KO_LAST, new ColumnDescriptor(COL_ID_SES_UPD_UD_KO_LAST, Types.DECIMAL, 22, true));
        map.put(COL_ID_UPD_UNITA_DOC_KO, new ColumnDescriptor(COL_ID_UPD_UNITA_DOC_KO, Types.DECIMAL, 22, true));
        map.put(COL_DS_TS_INI_LAST_SES, new ColumnDescriptor(COL_DS_TS_INI_LAST_SES, Types.VARCHAR, 29, true));
        map.put(COL_DS_TS_FINE_LAST_SES, new ColumnDescriptor(COL_DS_TS_FINE_LAST_SES, Types.VARCHAR, 29, true));
        map.put(COL_CD_VERSIONE_WS, new ColumnDescriptor(COL_CD_VERSIONE_WS, Types.VARCHAR, 100, true));
        map.put(COL_DS_ENTE_STRUT, new ColumnDescriptor(COL_DS_ENTE_STRUT, Types.VARCHAR, 201, true));
        map.put(COL_DS_UNITA_DOC, new ColumnDescriptor(COL_DS_UNITA_DOC, Types.VARCHAR, 242, true));
        map.put(COL_ID_CONTROLLO_WS_PRINC, new ColumnDescriptor(COL_ID_CONTROLLO_WS_PRINC, Types.DECIMAL, 22, true));
        map.put(COL_CD_CONTROLLO_WS_PRINC, new ColumnDescriptor(COL_CD_CONTROLLO_WS_PRINC, Types.VARCHAR, 100, true));
        map.put(COL_ID_ERR_SACER_PRINC, new ColumnDescriptor(COL_ID_ERR_SACER_PRINC, Types.DECIMAL, 22, true));
        map.put(COL_CD_ERR_PRINC, new ColumnDescriptor(COL_CD_ERR_PRINC, Types.VARCHAR, 100, true));
        map.put(COL_DS_ERR_PRINC, new ColumnDescriptor(COL_DS_ERR_PRINC, Types.VARCHAR, 1024, true));
        map.put(COL_ID_USER_IAM, new ColumnDescriptor(COL_ID_USER_IAM, Types.DECIMAL, 22, true));
        map.put(COL_NM_USERID, new ColumnDescriptor(COL_NM_USERID, Types.VARCHAR, 100, true));
        map.put(COL_ID_XML_SES_UPD_KO_RICH_LAST,
                new ColumnDescriptor(COL_ID_XML_SES_UPD_KO_RICH_LAST, Types.DECIMAL, 22, true));
        map.put(COL_BL_XML_RICH_LAST, new ColumnDescriptor(COL_BL_XML_RICH_LAST, Types.CLOB, 4000, true));
        map.put(COL_ID_XML_SES_UPD_KO_RISP_LAST,
                new ColumnDescriptor(COL_ID_XML_SES_UPD_KO_RISP_LAST, Types.DECIMAL, 22, true));
        map.put(COL_BL_XML_RISP_LAST, new ColumnDescriptor(COL_BL_XML_RISP_LAST, Types.CLOB, 4000, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
