/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.AroControfirmaFirma;
import it.eng.parer.entity.AroFirmaComp;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Aro_Controfirma_Firma
 *
 */
public class AroControfirmaFirmaRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */
    private static final long serialVersionUID = 1L;

    public static AroControfirmaFirmaTableDescriptor TABLE_DESCRIPTOR = new AroControfirmaFirmaTableDescriptor();

    public AroControfirmaFirmaRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdControfirmaFirma() {
        return getBigDecimal("id_controfirma_firma");
    }

    public void setIdControfirmaFirma(BigDecimal idControfirmaFirma) {
        setObject("id_controfirma_firma", idControfirmaFirma);
    }

    public BigDecimal getIdFirmaFiglio() {
        return getBigDecimal("id_firma_figlio");
    }

    public void setIdFirmaFiglio(BigDecimal idFirmaFiglio) {
        setObject("id_firma_figlio", idFirmaFiglio);
    }

    public BigDecimal getIdFirmaPadre() {
        return getBigDecimal("id_firma_padre");
    }

    public void setIdFirmaPadre(BigDecimal idFirmaPadre) {
        setObject("id_firma_padre", idFirmaPadre);
    }

    @Override
    public void entityToRowBean(Object obj) {
        AroControfirmaFirma entity = (AroControfirmaFirma) obj;
        this.setIdControfirmaFirma(
                entity.getIdControfirmaFirma() == null ? null : BigDecimal.valueOf(entity.getIdControfirmaFirma()));

        if (entity.getAroFirmaFiglio() != null) {
            this.setIdFirmaFiglio(new BigDecimal(entity.getAroFirmaFiglio().getIdFirmaComp()));
        }

        if (entity.getAroFirmaPadre() != null) {
            this.setIdFirmaPadre(new BigDecimal(entity.getAroFirmaPadre().getIdFirmaComp()));
        }

    }

    @Override
    public AroControfirmaFirma rowBeanToEntity() {
        AroControfirmaFirma entity = new AroControfirmaFirma();
        if (this.getIdControfirmaFirma() != null) {
            entity.setIdControfirmaFirma(this.getIdControfirmaFirma().longValue());
        }
        if (this.getIdFirmaFiglio() != null) {
            if (entity.getAroFirmaFiglio() == null) {
                entity.setAroFirmaFiglio(new AroFirmaComp());
            }
            entity.getAroFirmaFiglio().setIdFirmaComp(this.getIdFirmaFiglio().longValue());
        }
        if (this.getIdFirmaPadre() != null) {
            if (entity.getAroFirmaPadre() == null) {
                entity.setAroFirmaPadre(new AroFirmaComp());
            }
            entity.getAroFirmaPadre().setIdFirmaComp(this.getIdFirmaPadre().longValue());
        }
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
