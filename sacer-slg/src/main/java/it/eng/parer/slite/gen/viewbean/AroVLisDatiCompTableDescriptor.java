package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_V_Lis_Dati_Comp
 *
 */
public class AroVLisDatiCompTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 14 September 2011 11:38" )
     */

    public static final String SELECT = "Select * from Aro_V_Lis_Dati_Comp /**/";
    public static final String TABLE_NAME = "Aro_V_Lis_Dati_Comp";
    public static final String COL_ID_COMP_DOC = "id_comp_doc";
    public static final String COL_ID_DATI_COMP = "id_dati_comp";
    public static final String COL_NM_ATTRIB_TIPO_COMP = "nm_attrib_tipo_comp";
    public static final String COL_DS_ATTRIB_TIPO_COMP = "ds_attrib_tipo_comp";
    public static final String COL_DL_VALORE = "dl_valore";
    public static final String COL_NI_ORD_ATTRIB = "ni_ord_attrib";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_COMP_DOC, new ColumnDescriptor(COL_ID_COMP_DOC, Types.DECIMAL, 22, true));
        map.put(COL_ID_DATI_COMP, new ColumnDescriptor(COL_ID_DATI_COMP, Types.DECIMAL, 22, true));
        map.put(COL_NM_ATTRIB_TIPO_COMP, new ColumnDescriptor(COL_NM_ATTRIB_TIPO_COMP, Types.VARCHAR, 100, true));
        map.put(COL_DS_ATTRIB_TIPO_COMP, new ColumnDescriptor(COL_DS_ATTRIB_TIPO_COMP, Types.VARCHAR, 254, true));
        map.put(COL_DL_VALORE, new ColumnDescriptor(COL_DL_VALORE, Types.VARCHAR, 1024, true));
        map.put(COL_NI_ORD_ATTRIB, new ColumnDescriptor(COL_NI_ORD_ATTRIB, Types.DECIMAL, 22, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
