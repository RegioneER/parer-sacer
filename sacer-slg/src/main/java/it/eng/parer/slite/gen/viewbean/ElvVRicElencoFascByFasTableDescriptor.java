/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Elv_V_Ric_Elenco_Fasc_By_Fas
 *
 */
public class ElvVRicElencoFascByFasTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 29 March 2018 15:12" )
     */

    public static final String SELECT = "Select * from Elv_V_Ric_Elenco_Fasc_By_Fas /**/";
    public static final String TABLE_NAME = "Elv_V_Ric_Elenco_Fasc_By_Fas";
    public static final String COL_ID_ELENCO_VERS_FASC = "id_elenco_vers_fasc";
    public static final String COL_ID_AMBIENTE = "id_ambiente";
    public static final String COL_NM_AMBIENTE = "nm_ambiente";
    public static final String COL_ID_ENTE = "id_ente";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_NM_STRUT = "nm_strut";
    public static final String COL_ID_USER_IAM = "id_user_iam";
    public static final String COL_AA_FASCICOLO_ELENCO = "aa_fascicolo_elenco";
    public static final String COL_TI_STATO = "ti_stato";
    public static final String COL_TS_CREAZIONE_ELENCO = "ts_creazione_elenco";
    public static final String COL_DT_CHIUSURA = "dt_chiusura";
    public static final String COL_DL_MOTIVO_CHIUS = "dl_motivo_chius";
    public static final String COL_DT_FIRMA = "dt_firma";
    public static final String COL_NI_FASC_VERS_ELENCO = "ni_fasc_vers_elenco";
    public static final String COL_NT_INDICE_ELENCO = "nt_indice_elenco";
    public static final String COL_NT_ELENCO_CHIUSO = "nt_elenco_chiuso";
    public static final String COL_ID_CRITERIO_RAGGR_FASC = "id_criterio_raggr_fasc";
    public static final String COL_NM_CRITERIO_RAGGR = "nm_criterio_raggr";
    public static final String COL_FL_ELENCO_STANDARD = "fl_elenco_standard";
    public static final String COL_ID_FASCICOLO = "id_fascicolo";
    public static final String COL_AA_FASCICOLO = "aa_fascicolo";
    public static final String COL_CD_KEY_FASCICOLO = "cd_key_fascicolo";
    public static final String COL_CD_VOCE_TITOL = "cd_voce_titol";
    public static final String COL_NM_TIPO_FASCICOLO = "nm_tipo_fascicolo";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_ELENCO_VERS_FASC, new ColumnDescriptor(COL_ID_ELENCO_VERS_FASC, Types.DECIMAL, 22, true));
        map.put(COL_ID_AMBIENTE, new ColumnDescriptor(COL_ID_AMBIENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_AMBIENTE, new ColumnDescriptor(COL_NM_AMBIENTE, Types.VARCHAR, 100, true));
        map.put(COL_ID_ENTE, new ColumnDescriptor(COL_ID_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
        map.put(COL_NM_STRUT, new ColumnDescriptor(COL_NM_STRUT, Types.VARCHAR, 100, true));
        map.put(COL_ID_USER_IAM, new ColumnDescriptor(COL_ID_USER_IAM, Types.DECIMAL, 22, true));
        map.put(COL_AA_FASCICOLO_ELENCO, new ColumnDescriptor(COL_AA_FASCICOLO_ELENCO, Types.DECIMAL, 22, true));
        map.put(COL_TI_STATO, new ColumnDescriptor(COL_TI_STATO, Types.VARCHAR, 40, true));
        map.put(COL_TS_CREAZIONE_ELENCO, new ColumnDescriptor(COL_TS_CREAZIONE_ELENCO, Types.TIMESTAMP, 11, true));
        map.put(COL_DT_CHIUSURA, new ColumnDescriptor(COL_DT_CHIUSURA, Types.TIMESTAMP, 11, true));
        map.put(COL_DL_MOTIVO_CHIUS, new ColumnDescriptor(COL_DL_MOTIVO_CHIUS, Types.VARCHAR, 1024, true));
        map.put(COL_DT_FIRMA, new ColumnDescriptor(COL_DT_FIRMA, Types.TIMESTAMP, 11, true));
        map.put(COL_NI_FASC_VERS_ELENCO, new ColumnDescriptor(COL_NI_FASC_VERS_ELENCO, Types.DECIMAL, 22, true));
        map.put(COL_NT_INDICE_ELENCO, new ColumnDescriptor(COL_NT_INDICE_ELENCO, Types.VARCHAR, 2000, true));
        map.put(COL_NT_ELENCO_CHIUSO, new ColumnDescriptor(COL_NT_ELENCO_CHIUSO, Types.VARCHAR, 2000, true));
        map.put(COL_ID_CRITERIO_RAGGR_FASC, new ColumnDescriptor(COL_ID_CRITERIO_RAGGR_FASC, Types.DECIMAL, 22, true));
        map.put(COL_NM_CRITERIO_RAGGR, new ColumnDescriptor(COL_NM_CRITERIO_RAGGR, Types.VARCHAR, 100, true));
        map.put(COL_FL_ELENCO_STANDARD, new ColumnDescriptor(COL_FL_ELENCO_STANDARD, Types.VARCHAR, 1, true));
        map.put(COL_ID_FASCICOLO, new ColumnDescriptor(COL_ID_FASCICOLO, Types.DECIMAL, 22, true));
        map.put(COL_AA_FASCICOLO, new ColumnDescriptor(COL_AA_FASCICOLO, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_FASCICOLO, new ColumnDescriptor(COL_CD_KEY_FASCICOLO, Types.VARCHAR, 100, true));
        map.put(COL_CD_VOCE_TITOL, new ColumnDescriptor(COL_CD_VOCE_TITOL, Types.VARCHAR, 100, true));
        map.put(COL_NM_TIPO_FASCICOLO, new ColumnDescriptor(COL_NM_TIPO_FASCICOLO, Types.VARCHAR, 100, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
