/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.AroContrFirmaComp;
import it.eng.parer.entity.AroUsoCertifCaContrComp;
import it.eng.parer.entity.FirCertifCa;
import it.eng.parer.entity.FirCrl;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Aro_Uso_Certif_Ca_Contr_Comp
 *
 */
public class AroUsoCertifCaContrCompRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */
    private static final long serialVersionUID = 1L;

    public static AroUsoCertifCaContrCompTableDescriptor TABLE_DESCRIPTOR = new AroUsoCertifCaContrCompTableDescriptor();

    public AroUsoCertifCaContrCompRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdUsoCertifCaContrComp() {
	return getBigDecimal("id_uso_certif_ca_contr_comp");
    }

    public void setIdUsoCertifCaContrComp(BigDecimal idUsoCertifCaContrComp) {
	setObject("id_uso_certif_ca_contr_comp", idUsoCertifCaContrComp);
    }

    public BigDecimal getIdContrFirmaComp() {
	return getBigDecimal("id_contr_firma_comp");
    }

    public void setIdContrFirmaComp(BigDecimal idContrFirmaComp) {
	setObject("id_contr_firma_comp", idContrFirmaComp);
    }

    public BigDecimal getIdCertifCa() {
	return getBigDecimal("id_certif_ca");
    }

    public void setIdCertifCa(BigDecimal idCertifCa) {
	setObject("id_certif_ca", idCertifCa);
    }

    public BigDecimal getPgCertifCa() {
	return getBigDecimal("pg_certif_ca");
    }

    public void setPgCertifCa(BigDecimal pgCertifCa) {
	setObject("pg_certif_ca", pgCertifCa);
    }

    public BigDecimal getIdCrlUsata() {
	return getBigDecimal("id_crl_usata");
    }

    public void setIdCrlUsata(BigDecimal idCrlUsata) {
	setObject("id_crl_usata", idCrlUsata);
    }

    @Override
    public void entityToRowBean(Object obj) {
	AroUsoCertifCaContrComp entity = (AroUsoCertifCaContrComp) obj;
	this.setIdUsoCertifCaContrComp(entity.getIdUsoCertifCaContrComp() == null ? null
		: BigDecimal.valueOf(entity.getIdUsoCertifCaContrComp()));

	if (entity.getAroContrFirmaComp() != null) {
	    this.setIdContrFirmaComp(
		    new BigDecimal(entity.getAroContrFirmaComp().getIdContrFirmaComp()));
	}

	if (entity.getFirCertifCa() != null) {
	    this.setIdCertifCa(new BigDecimal(entity.getFirCertifCa().getIdCertifCa()));
	}

	this.setPgCertifCa(entity.getPgCertifCa());

	if (entity.getFirCrl() != null) {
	    this.setIdCrlUsata(new BigDecimal(entity.getFirCrl().getIdCrl()));
	}

    }

    @Override
    public AroUsoCertifCaContrComp rowBeanToEntity() {
	AroUsoCertifCaContrComp entity = new AroUsoCertifCaContrComp();
	if (this.getIdUsoCertifCaContrComp() != null) {
	    entity.setIdUsoCertifCaContrComp(this.getIdUsoCertifCaContrComp().longValue());
	}
	if (this.getIdContrFirmaComp() != null) {
	    if (entity.getAroContrFirmaComp() == null) {
		entity.setAroContrFirmaComp(new AroContrFirmaComp());
	    }
	    entity.getAroContrFirmaComp()
		    .setIdContrFirmaComp(this.getIdContrFirmaComp().longValue());
	}
	if (this.getIdCertifCa() != null) {
	    if (entity.getFirCertifCa() == null) {
		entity.setFirCertifCa(new FirCertifCa());
	    }
	    entity.getFirCertifCa().setIdCertifCa(this.getIdCertifCa().longValue());
	}
	entity.setPgCertifCa(this.getPgCertifCa());
	if (this.getIdCrlUsata() != null) {
	    if (entity.getFirCrl() == null) {
		entity.setFirCrl(new FirCrl());
	    }
	    entity.getFirCrl().setIdCrl(this.getIdCrlUsata().longValue());
	}
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
