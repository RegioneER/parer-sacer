/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.AroContrMarcaComp;
import it.eng.parer.entity.AroUsoCertifCaContrMarca;
import it.eng.parer.entity.FirCertifCa;
import it.eng.parer.entity.FirCrl;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Aro_Uso_Certif_Ca_Contr_Marca
 *
 */
public class AroUsoCertifCaContrMarcaRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */
    private static final long serialVersionUID = 1L;

    public static AroUsoCertifCaContrMarcaTableDescriptor TABLE_DESCRIPTOR = new AroUsoCertifCaContrMarcaTableDescriptor();

    public AroUsoCertifCaContrMarcaRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdUsoCertifCaContrMarca() {
        return getBigDecimal("id_uso_certif_ca_contr_marca");
    }

    public void setIdUsoCertifCaContrMarca(BigDecimal idUsoCertifCaContrMarca) {
        setObject("id_uso_certif_ca_contr_marca", idUsoCertifCaContrMarca);
    }

    public BigDecimal getIdContrMarcaComp() {
        return getBigDecimal("id_contr_marca_comp");
    }

    public void setIdContrMarcaComp(BigDecimal idContrMarcaComp) {
        setObject("id_contr_marca_comp", idContrMarcaComp);
    }

    public BigDecimal getIdCertifCa() {
        return getBigDecimal("id_certif_ca");
    }

    public void setIdCertifCa(BigDecimal idCertifCa) {
        setObject("id_certif_ca", idCertifCa);
    }

    public BigDecimal getPgCertifCa() {
        return getBigDecimal("pg_certif_ca");
    }

    public void setPgCertifCa(BigDecimal pgCertifCa) {
        setObject("pg_certif_ca", pgCertifCa);
    }

    public BigDecimal getIdCrlUsata() {
        return getBigDecimal("id_crl_usata");
    }

    public void setIdCrlUsata(BigDecimal idCrlUsata) {
        setObject("id_crl_usata", idCrlUsata);
    }

    @Override
    public void entityToRowBean(Object obj) {
        AroUsoCertifCaContrMarca entity = (AroUsoCertifCaContrMarca) obj;
        this.setIdUsoCertifCaContrMarca(entity.getIdUsoCertifCaContrMarca() == null ? null
                : BigDecimal.valueOf(entity.getIdUsoCertifCaContrMarca()));

        if (entity.getAroContrMarcaComp() != null) {
            this.setIdContrMarcaComp(new BigDecimal(entity.getAroContrMarcaComp().getIdContrMarcaComp()));
        }

        if (entity.getFirCertifCa() != null) {
            this.setIdCertifCa(new BigDecimal(entity.getFirCertifCa().getIdCertifCa()));
        }

        this.setPgCertifCa(entity.getPgCertifCa());

        if (entity.getFirCrl() != null) {
            this.setIdCrlUsata(new BigDecimal(entity.getFirCrl().getIdCrl()));
        }

    }

    @Override
    public AroUsoCertifCaContrMarca rowBeanToEntity() {
        AroUsoCertifCaContrMarca entity = new AroUsoCertifCaContrMarca();
        if (this.getIdUsoCertifCaContrMarca() != null) {
            entity.setIdUsoCertifCaContrMarca(this.getIdUsoCertifCaContrMarca().longValue());
        }
        if (this.getIdContrMarcaComp() != null) {
            if (entity.getAroContrMarcaComp() == null) {
                entity.setAroContrMarcaComp(new AroContrMarcaComp());
            }
            entity.getAroContrMarcaComp().setIdContrMarcaComp(this.getIdContrMarcaComp().longValue());
        }
        if (this.getIdCertifCa() != null) {
            if (entity.getFirCertifCa() == null) {
                entity.setFirCertifCa(new FirCertifCa());
            }
            entity.getFirCertifCa().setIdCertifCa(this.getIdCertifCa().longValue());
        }
        entity.setPgCertifCa(this.getPgCertifCa());
        if (this.getIdCrlUsata() != null) {
            if (entity.getFirCrl() == null) {
                entity.setFirCrl(new FirCrl());
            }
            entity.getFirCrl().setIdCrl(this.getIdCrlUsata().longValue());
        }
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
