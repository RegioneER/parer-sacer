package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_Upd_Unita_Doc
 *
 */
public class AroUpdUnitaDocTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Friday, 19 October 2018 12:06" )
     */

    public static final String SELECT = "Select * from Aro_Upd_Unita_Doc /**/";
    public static final String TABLE_NAME = "Aro_Upd_Unita_Doc";
    public static final String COL_ID_UPD_UNITA_DOC = "id_upd_unita_doc";
    public static final String COL_ID_UNITA_DOC = "id_unita_doc";
    public static final String COL_PG_UPD_UNITA_DOC = "pg_upd_unita_doc";
    public static final String COL_DT_ANNUL = "dt_annul";
    public static final String COL_TS_INI_SES = "ts_ini_ses";
    public static final String COL_TS_FINE_SES = "ts_fine_ses";
    public static final String COL_CD_IND_IP_CLIENT = "cd_ind_ip_client";
    public static final String COL_CD_IND_SERVER = "cd_ind_server";
    public static final String COL_ID_USER_IAM_VERS = "id_user_iam_vers";
    public static final String COL_FL_FORZA_UPD = "fl_forza_upd";
    public static final String COL_NT_UPD = "nt_upd";
    public static final String COL_DS_CLASSIF_PRINC = "ds_classif_princ";
    public static final String COL_CD_FASCIC_PRINC = "cd_fascic_princ";
    public static final String COL_DS_OGGETTO_FASCIC_PRINC = "ds_oggetto_fascic_princ";
    public static final String COL_CD_SOTTOFASCIC_PRINC = "cd_sottofascic_princ";
    public static final String COL_DS_OGGETTO_SOTTOFASCIC_PRINC = "ds_oggetto_sottofascic_princ";
    public static final String COL_DL_OGGETTO_UNITA_DOC = "dl_oggetto_unita_doc";
    public static final String COL_DT_REG_UNITA_DOC = "dt_reg_unita_doc";
    public static final String COL_TI_STATO_UPD_ELENCO_VERS = "ti_stato_upd_elenco_vers";
    public static final String COL_TS_STATO_ELENCO_VERS = "ts_stato_elenco_vers";
    public static final String COL_ID_ELENCO_VERS = "id_elenco_vers";
    public static final String COL_NT_ANNUL = "nt_annul";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_AA_KEY_UNITA_DOC = "aa_key_unita_doc";
    public static final String COL_ID_REGISTRO_UNITA_DOC = "id_registro_unita_doc";
    public static final String COL_ID_TIPO_UNITA_DOC = "id_tipo_unita_doc";
    public static final String COL_ID_TIPO_DOC_PRINC = "id_tipo_doc_princ";
    public static final String COL_FL_SES_UPD_KO_RISOLTI = "fl_ses_upd_ko_risolti";
    public static final String COL_FL_UPD_PROFILO_ARCHIV = "fl_upd_profilo_archiv";
    public static final String COL_FL_UPD_FASCICOLO_PRINC = "fl_upd_fascicolo_princ";
    public static final String COL_FL_UPD_FASCICOLI_SEC = "fl_upd_fascicoli_sec";
    public static final String COL_FL_UPD_PROFILO_UNITA_DOC = "fl_upd_profilo_unita_doc";
    public static final String COL_FL_UPD_LINK_UNITA_DOC = "fl_upd_link_unita_doc";
    public static final String COL_FL_UPD_DATI_SPEC = "fl_upd_dati_spec";
    public static final String COL_FL_UPD_DATI_SPEC_MIGRAZ = "fl_upd_dati_spec_migraz";
    public static final String COL_TIPO_UPD_UNITA_DOC = "tipo_upd_unita_doc";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_UPD_UNITA_DOC, new ColumnDescriptor(COL_ID_UPD_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_ID_UNITA_DOC, new ColumnDescriptor(COL_ID_UNITA_DOC, Types.DECIMAL, 22, false));
        map.put(COL_PG_UPD_UNITA_DOC, new ColumnDescriptor(COL_PG_UPD_UNITA_DOC, Types.DECIMAL, 22, false));
        map.put(COL_DT_ANNUL, new ColumnDescriptor(COL_DT_ANNUL, Types.TIMESTAMP, 7, false));
        map.put(COL_TS_INI_SES, new ColumnDescriptor(COL_TS_INI_SES, Types.TIMESTAMP, 11, false));
        map.put(COL_TS_FINE_SES, new ColumnDescriptor(COL_TS_FINE_SES, Types.TIMESTAMP, 11, false));
        map.put(COL_CD_IND_IP_CLIENT, new ColumnDescriptor(COL_CD_IND_IP_CLIENT, Types.VARCHAR, 100, false));
        map.put(COL_CD_IND_SERVER, new ColumnDescriptor(COL_CD_IND_SERVER, Types.VARCHAR, 100, false));
        map.put(COL_ID_USER_IAM_VERS, new ColumnDescriptor(COL_ID_USER_IAM_VERS, Types.DECIMAL, 22, false));
        map.put(COL_FL_FORZA_UPD, new ColumnDescriptor(COL_FL_FORZA_UPD, Types.VARCHAR, 1, false));
        map.put(COL_NT_UPD, new ColumnDescriptor(COL_NT_UPD, Types.VARCHAR, 4000, false));
        map.put(COL_DS_CLASSIF_PRINC, new ColumnDescriptor(COL_DS_CLASSIF_PRINC, Types.VARCHAR, 254, false));
        map.put(COL_CD_FASCIC_PRINC, new ColumnDescriptor(COL_CD_FASCIC_PRINC, Types.VARCHAR, 4000, false));
        map.put(COL_DS_OGGETTO_FASCIC_PRINC,
                new ColumnDescriptor(COL_DS_OGGETTO_FASCIC_PRINC, Types.VARCHAR, 4000, false));
        map.put(COL_CD_SOTTOFASCIC_PRINC, new ColumnDescriptor(COL_CD_SOTTOFASCIC_PRINC, Types.VARCHAR, 4000, false));
        map.put(COL_DS_OGGETTO_SOTTOFASCIC_PRINC,
                new ColumnDescriptor(COL_DS_OGGETTO_SOTTOFASCIC_PRINC, Types.VARCHAR, 4000, false));
        map.put(COL_DL_OGGETTO_UNITA_DOC, new ColumnDescriptor(COL_DL_OGGETTO_UNITA_DOC, Types.VARCHAR, 4000, false));
        map.put(COL_DT_REG_UNITA_DOC, new ColumnDescriptor(COL_DT_REG_UNITA_DOC, Types.TIMESTAMP, 7, false));
        map.put(COL_TI_STATO_UPD_ELENCO_VERS,
                new ColumnDescriptor(COL_TI_STATO_UPD_ELENCO_VERS, Types.VARCHAR, 50, false));
        map.put(COL_TS_STATO_ELENCO_VERS, new ColumnDescriptor(COL_TS_STATO_ELENCO_VERS, Types.TIMESTAMP, 7, false));
        map.put(COL_ID_ELENCO_VERS, new ColumnDescriptor(COL_ID_ELENCO_VERS, Types.DECIMAL, 22, false));
        map.put(COL_NT_ANNUL, new ColumnDescriptor(COL_NT_ANNUL, Types.VARCHAR, 2000, false));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, false));
        map.put(COL_AA_KEY_UNITA_DOC, new ColumnDescriptor(COL_AA_KEY_UNITA_DOC, Types.DECIMAL, 22, false));
        map.put(COL_ID_REGISTRO_UNITA_DOC, new ColumnDescriptor(COL_ID_REGISTRO_UNITA_DOC, Types.DECIMAL, 22, false));
        map.put(COL_ID_TIPO_UNITA_DOC, new ColumnDescriptor(COL_ID_TIPO_UNITA_DOC, Types.DECIMAL, 22, false));
        map.put(COL_ID_TIPO_DOC_PRINC, new ColumnDescriptor(COL_ID_TIPO_DOC_PRINC, Types.DECIMAL, 22, false));
        map.put(COL_FL_SES_UPD_KO_RISOLTI, new ColumnDescriptor(COL_FL_SES_UPD_KO_RISOLTI, Types.VARCHAR, 1, false));
        map.put(COL_FL_UPD_PROFILO_ARCHIV, new ColumnDescriptor(COL_FL_UPD_PROFILO_ARCHIV, Types.VARCHAR, 1, false));
        map.put(COL_FL_UPD_FASCICOLO_PRINC, new ColumnDescriptor(COL_FL_UPD_FASCICOLO_PRINC, Types.VARCHAR, 1, false));
        map.put(COL_FL_UPD_FASCICOLI_SEC, new ColumnDescriptor(COL_FL_UPD_FASCICOLI_SEC, Types.VARCHAR, 1, false));
        map.put(COL_FL_UPD_PROFILO_UNITA_DOC,
                new ColumnDescriptor(COL_FL_UPD_PROFILO_UNITA_DOC, Types.VARCHAR, 1, false));
        map.put(COL_FL_UPD_LINK_UNITA_DOC, new ColumnDescriptor(COL_FL_UPD_LINK_UNITA_DOC, Types.VARCHAR, 1, false));
        map.put(COL_FL_UPD_DATI_SPEC, new ColumnDescriptor(COL_FL_UPD_DATI_SPEC, Types.VARCHAR, 1, false));
        map.put(COL_FL_UPD_DATI_SPEC_MIGRAZ,
                new ColumnDescriptor(COL_FL_UPD_DATI_SPEC_MIGRAZ, Types.VARCHAR, 1, false));
        map.put(COL_TIPO_UPD_UNITA_DOC, new ColumnDescriptor(COL_TIPO_UPD_UNITA_DOC, Types.VARCHAR, 30, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
