/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.AroContrMarcaComp;
import it.eng.parer.entity.AroMarcaComp;
import it.eng.parer.entity.FirCrl;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Aro_Contr_Marca_Comp
 *
 */
public class AroContrMarcaCompRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */
    private static final long serialVersionUID = 1L;

    public static AroContrMarcaCompTableDescriptor TABLE_DESCRIPTOR = new AroContrMarcaCompTableDescriptor();

    public AroContrMarcaCompRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdContrMarcaComp() {
	return getBigDecimal("id_contr_marca_comp");
    }

    public void setIdContrMarcaComp(BigDecimal idContrMarcaComp) {
	setObject("id_contr_marca_comp", idContrMarcaComp);
    }

    public BigDecimal getIdMarcaComp() {
	return getBigDecimal("id_marca_comp");
    }

    public void setIdMarcaComp(BigDecimal idMarcaComp) {
	setObject("id_marca_comp", idMarcaComp);
    }

    public String getTiContr() {
	return getString("ti_contr");
    }

    public void setTiContr(String tiContr) {
	setObject("ti_contr", tiContr);
    }

    public String getTiEsitoContrMarca() {
	return getString("ti_esito_contr_marca");
    }

    public void setTiEsitoContrMarca(String tiEsitoContrMarca) {
	setObject("ti_esito_contr_marca", tiEsitoContrMarca);
    }

    public String getDsMsgEsitoContrMarca() {
	return getString("ds_msg_esito_contr_marca");
    }

    public void setDsMsgEsitoContrMarca(String dsMsgEsitoContrMarca) {
	setObject("ds_msg_esito_contr_marca", dsMsgEsitoContrMarca);
    }

    public BigDecimal getIdCrlUsata() {
	return getBigDecimal("id_crl_usata");
    }

    public void setIdCrlUsata(BigDecimal idCrlUsata) {
	setObject("id_crl_usata", idCrlUsata);
    }

    @Override
    public void entityToRowBean(Object obj) {
	AroContrMarcaComp entity = (AroContrMarcaComp) obj;
	this.setIdContrMarcaComp(entity.getIdContrMarcaComp() == null ? null
		: BigDecimal.valueOf(entity.getIdContrMarcaComp()));
	if (entity.getAroMarcaComp() != null) {
	    this.setIdMarcaComp(new BigDecimal(entity.getAroMarcaComp().getIdMarcaComp()));
	}
	this.setTiContr(entity.getTiContr());
	this.setTiEsitoContrMarca(entity.getTiEsitoContrMarca());
	this.setDsMsgEsitoContrMarca(entity.getDsMsgEsitoContrMarca());
	if (entity.getFirCrl() != null) {
	    this.setIdCrlUsata(new BigDecimal(entity.getFirCrl().getIdCrl()));
	}

    }

    @Override
    public AroContrMarcaComp rowBeanToEntity() {
	AroContrMarcaComp entity = new AroContrMarcaComp();
	if (this.getIdContrMarcaComp() != null) {
	    entity.setIdContrMarcaComp(this.getIdContrMarcaComp().longValue());
	}
	if (this.getIdMarcaComp() != null) {
	    if (entity.getAroMarcaComp() == null) {
		entity.setAroMarcaComp(new AroMarcaComp());
	    }
	    entity.getAroMarcaComp().setIdMarcaComp(this.getIdMarcaComp().longValue());
	}
	entity.setTiContr(this.getTiContr());
	entity.setTiEsitoContrMarca(this.getTiEsitoContrMarca());
	entity.setDsMsgEsitoContrMarca(this.getDsMsgEsitoContrMarca());
	if (this.getIdCrlUsata() != null) {
	    if (entity.getFirCrl() == null) {
		entity.setFirCrl(new FirCrl());
	    }
	    entity.getFirCrl().setIdCrl(this.getIdCrlUsata().longValue());
	}
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
