/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Mon_V_Riep_Strut_Iam
 *
 */
public class MonVRiepStrutIamTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 12 April 2016 10:53" )
     */

    public static final String SELECT = "Select * from Mon_V_Riep_Strut_Iam /**/";
    public static final String TABLE_NAME = "Mon_V_Riep_Strut_Iam";
    public static final String COL_ID_USER_IAM = "id_user_iam";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_ID_AMBIENTE = "id_ambiente";
    public static final String COL_NM_AMBIENTE = "nm_ambiente";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_NM_STRUT = "nm_strut";
    public static final String COL_FL_SESSIONI_FALLITE_NO_RIS = "fl_sessioni_fallite_no_ris";
    public static final String COL_FL_DOC_SENZA_ELENCO = "fl_doc_senza_elenco";
    public static final String COL_FL_ELENCO_CHIUSO = "fl_elenco_chiuso";
    public static final String COL_FL_ERR_FMT_NUMERO = "fl_err_fmt_numero";
    public static final String COL_FL_RICH_ANNUL_VERS_APERTA = "fl_rich_annul_vers_aperta";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_USER_IAM, new ColumnDescriptor(COL_ID_USER_IAM, Types.DECIMAL, 22, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
        map.put(COL_ID_AMBIENTE, new ColumnDescriptor(COL_ID_AMBIENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_AMBIENTE, new ColumnDescriptor(COL_NM_AMBIENTE, Types.VARCHAR, 100, true));
        map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, true));
        map.put(COL_NM_STRUT, new ColumnDescriptor(COL_NM_STRUT, Types.VARCHAR, 100, true));
        map.put(COL_FL_SESSIONI_FALLITE_NO_RIS,
                new ColumnDescriptor(COL_FL_SESSIONI_FALLITE_NO_RIS, Types.VARCHAR, 1, true));
        map.put(COL_FL_DOC_SENZA_ELENCO, new ColumnDescriptor(COL_FL_DOC_SENZA_ELENCO, Types.VARCHAR, 1, true));
        map.put(COL_FL_ELENCO_CHIUSO, new ColumnDescriptor(COL_FL_ELENCO_CHIUSO, Types.VARCHAR, 1, true));
        map.put(COL_FL_ERR_FMT_NUMERO, new ColumnDescriptor(COL_FL_ERR_FMT_NUMERO, Types.VARCHAR, 1, true));
        map.put(COL_FL_RICH_ANNUL_VERS_APERTA,
                new ColumnDescriptor(COL_FL_RICH_ANNUL_VERS_APERTA, Types.VARCHAR, 1, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
