/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.math.BigDecimal;

import it.eng.parer.viewEntity.DecVTreeCategTipoUd;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Dec_V_Tree_Categ_Tipo_Ud
 *
 */
public class DecVTreeCategTipoUdRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter",
     * comments = "This class was generated by OraTool", date = "Friday, 19 December 2014 16:58" )
     */
    private static final long serialVersionUID = 1L;

    public static DecVTreeCategTipoUdTableDescriptor TABLE_DESCRIPTOR = new DecVTreeCategTipoUdTableDescriptor();

    public DecVTreeCategTipoUdRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    public BigDecimal getIdCategTipoUnitaDoc() {
	return getBigDecimal("id_categ_tipo_unita_doc");
    }

    public void setIdCategTipoUnitaDoc(BigDecimal idCategTipoUnitaDoc) {
	setObject("id_categ_tipo_unita_doc", idCategTipoUnitaDoc);
    }

    public String getCdCategTipoUnitaDoc() {
	return getString("cd_categ_tipo_unita_doc");
    }

    public void setCdCategTipoUnitaDoc(String cdCategTipoUnitaDoc) {
	setObject("cd_categ_tipo_unita_doc", cdCategTipoUnitaDoc);
    }

    public String getDlPathCategTipoUnitaDoc() {
	return getString("dl_path_categ_tipo_unita_doc");
    }

    public void setDlPathCategTipoUnitaDoc(String dlPathCategTipoUnitaDoc) {
	setObject("dl_path_categ_tipo_unita_doc", dlPathCategTipoUnitaDoc);
    }

    public String getDlIdCategTipoUnitaDoc() {
	return getString("dl_id_categ_tipo_unita_doc");
    }

    public void setDlIdCategTipoUnitaDoc(String dlIdCategTipoUnitaDoc) {
	setObject("dl_id_categ_tipo_unita_doc", dlIdCategTipoUnitaDoc);
    }

    @Override
    public void entityToRowBean(Object obj) {
	DecVTreeCategTipoUd entity = (DecVTreeCategTipoUd) obj;
	this.setIdCategTipoUnitaDoc(entity.getIdCategTipoUnitaDoc());
	this.setCdCategTipoUnitaDoc(entity.getCdCategTipoUnitaDoc());
	this.setDlPathCategTipoUnitaDoc(entity.getDlPathCategTipoUnitaDoc());
	this.setDlIdCategTipoUnitaDoc(entity.getDlIdCategTipoUnitaDoc());
    }

    @Override
    public DecVTreeCategTipoUd rowBeanToEntity() {
	DecVTreeCategTipoUd entity = new DecVTreeCategTipoUd();
	entity.setIdCategTipoUnitaDoc(this.getIdCategTipoUnitaDoc());
	entity.setCdCategTipoUnitaDoc(this.getCdCategTipoUnitaDoc());
	entity.setDlPathCategTipoUnitaDoc(this.getDlPathCategTipoUnitaDoc());
	entity.setDlIdCategTipoUnitaDoc(this.getDlIdCategTipoUnitaDoc());
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
