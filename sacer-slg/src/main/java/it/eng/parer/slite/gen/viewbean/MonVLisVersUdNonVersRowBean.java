package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import it.eng.parer.viewEntity.MonVLisVersUdNonVers;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Types;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Mon_V_Lis_Vers_Ud_Non_Vers
 *
 */
public class MonVLisVersUdNonVersRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 22 October 2014 10:55" )
     */

    public static MonVLisVersUdNonVersTableDescriptor TABLE_DESCRIPTOR = new MonVLisVersUdNonVersTableDescriptor();

    public MonVLisVersUdNonVersRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    public BigDecimal getIdSessioneVers() {
        return getBigDecimal("id_sessione_vers");
    }

    public void setIdSessioneVers(BigDecimal id_sessione_vers) {
        setObject("id_sessione_vers", id_sessione_vers);
    }

    public Timestamp getDtApertura() {
        return getTimestamp("dt_apertura");
    }

    public void setDtApertura(Timestamp dt_apertura) {
        setObject("dt_apertura", dt_apertura);
    }

    public Timestamp getDtChiusura() {
        return getTimestamp("dt_chiusura");
    }

    public void setDtChiusura(Timestamp dt_chiusura) {
        setObject("dt_chiusura", dt_chiusura);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal id_strut) {
        setObject("id_strut", id_strut);
    }

    public String getCdRegistroKeyUnitaDoc() {
        return getString("cd_registro_key_unita_doc");
    }

    public void setCdRegistroKeyUnitaDoc(String cd_registro_key_unita_doc) {
        setObject("cd_registro_key_unita_doc", cd_registro_key_unita_doc);
    }

    public BigDecimal getAaKeyUnitaDoc() {
        return getBigDecimal("aa_key_unita_doc");
    }

    public void setAaKeyUnitaDoc(BigDecimal aa_key_unita_doc) {
        setObject("aa_key_unita_doc", aa_key_unita_doc);
    }

    public String getCdKeyUnitaDoc() {
        return getString("cd_key_unita_doc");
    }

    public void setCdKeyUnitaDoc(String cd_key_unita_doc) {
        setObject("cd_key_unita_doc", cd_key_unita_doc);
    }

    public String getTiSessioneVers() {
        return getString("ti_sessione_vers");
    }

    public void setTiSessioneVers(String ti_sessione_vers) {
        setObject("ti_sessione_vers", ti_sessione_vers);
    }

    public String getFlSessioneErrVerif() {
        return getString("fl_sessione_err_verif");
    }

    public void setFlSessioneErrVerif(String fl_sessione_err_verif) {
        setObject("fl_sessione_err_verif", fl_sessione_err_verif);
    }

    public String getFlSessioneErrNonRisolub() {
        return getString("fl_sessione_err_non_risolub");
    }

    public void setFlSessioneErrNonRisolub(String fl_sessione_err_non_risolub) {
        setObject("fl_sessione_err_non_risolub", fl_sessione_err_non_risolub);
    }

    public String getCdErr() {
        return getString("cd_err");
    }

    public void setCdErr(String cd_err) {
        setObject("cd_err", cd_err);
    }

    public String getDsErr() {
        return getString("ds_err");
    }

    public void setDsErr(String ds_err) {
        setObject("ds_err", ds_err);
    }

    @Override
    public void entityToRowBean(Object obj) {
        MonVLisVersUdNonVers entity = (MonVLisVersUdNonVers) obj;
        this.setIdSessioneVers(entity.getIdSessioneVers());
        if (entity.getDtApertura() != null) {
            this.setDtApertura(new Timestamp(entity.getDtApertura().getTime()));
        }
        if (entity.getDtChiusura() != null) {
            this.setDtChiusura(new Timestamp(entity.getDtChiusura().getTime()));
        }
        this.setIdStrut(entity.getIdStrut());
        this.setCdRegistroKeyUnitaDoc(entity.getCdRegistroKeyUnitaDoc());
        this.setAaKeyUnitaDoc(entity.getAaKeyUnitaDoc());
        this.setCdKeyUnitaDoc(entity.getCdKeyUnitaDoc());
        this.setTiSessioneVers(entity.getTiSessioneVers());
        this.setFlSessioneErrVerif(entity.getFlSessioneErrVerif());
        this.setFlSessioneErrNonRisolub(entity.getFlSessioneErrNonRisolub());
        this.setCdErr(entity.getCdErr());
        this.setDsErr(entity.getDsErr());
    }

    @Override
    public MonVLisVersUdNonVers rowBeanToEntity() {
        MonVLisVersUdNonVers entity = new MonVLisVersUdNonVers();
        entity.setIdSessioneVers(this.getIdSessioneVers());
        entity.setDtApertura(this.getDtApertura());
        entity.setDtChiusura(this.getDtChiusura());
        entity.setIdStrut(this.getIdStrut());
        entity.setCdRegistroKeyUnitaDoc(this.getCdRegistroKeyUnitaDoc());
        entity.setAaKeyUnitaDoc(this.getAaKeyUnitaDoc());
        entity.setCdKeyUnitaDoc(this.getCdKeyUnitaDoc());
        entity.setTiSessioneVers(this.getTiSessioneVers());
        entity.setFlSessioneErrVerif(this.getFlSessioneErrVerif());
        entity.setFlSessioneErrNonRisolub(this.getFlSessioneErrNonRisolub());
        entity.setCdErr(this.getCdErr());
        entity.setDsErr(this.getDsErr());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
