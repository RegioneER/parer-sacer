package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_V_Vis_Nota_Unita_Doc
 *
 */
public class AroVVisNotaUnitaDocTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 19 January 2016 12:05" )
     */

    public static final String SELECT = "Select * from Aro_V_Vis_Nota_Unita_Doc /**/";
    public static final String TABLE_NAME = "Aro_V_Vis_Nota_Unita_Doc";
    public static final String COL_ID_UNITA_DOC = "id_unita_doc";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_CD_REGISTRO_KEY_UNITA_DOC = "cd_registro_key_unita_doc";
    public static final String COL_AA_KEY_UNITA_DOC = "aa_key_unita_doc";
    public static final String COL_CD_KEY_UNITA_DOC = "cd_key_unita_doc";
    public static final String COL_DS_REGISTRO_UNITA_DOC = "ds_registro_unita_doc";
    public static final String COL_ID_TIPO_UNITA_DOC = "id_tipo_unita_doc";
    public static final String COL_NM_STRUT = "nm_strut";
    public static final String COL_ID_ENTE = "id_ente";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_ID_AMBIENTE = "id_ambiente";
    public static final String COL_NM_AMBIENTE = "nm_ambiente";
    public static final String COL_NM_TIPO_UNITA_DOC = "nm_tipo_unita_doc";
    public static final String COL_ID_VER_INDICE_AIP = "id_ver_indice_aip";
    public static final String COL_CD_VER_INDICE_AIP = "cd_ver_indice_aip";
    public static final String COL_DT_CREAZIONE = "dt_creazione";
    public static final String COL_ID_NOTA_UNITA_DOC = "id_nota_unita_doc";
    public static final String COL_ID_TIPO_NOTA_UNITA_DOC = "id_tipo_nota_unita_doc";
    public static final String COL_DS_TIPO_NOTA_UNITA_DOC = "ds_tipo_nota_unita_doc";
    public static final String COL_NI_ORD = "ni_ord";
    public static final String COL_PG_NOTA_UNITA_DOC = "pg_nota_unita_doc";
    public static final String COL_DT_NOTA_UNITA_DOC = "dt_nota_unita_doc";
    public static final String COL_DS_NOTA_UNITA_DOC = "ds_nota_unita_doc";
    public static final String COL_ID_USER_IAM_NOTA = "id_user_iam_nota";
    public static final String COL_NM_USERID_NOTA = "nm_userid_nota";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_UNITA_DOC, new ColumnDescriptor(COL_ID_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
        map.put(COL_CD_REGISTRO_KEY_UNITA_DOC,
                new ColumnDescriptor(COL_CD_REGISTRO_KEY_UNITA_DOC, Types.VARCHAR, 100, true));
        map.put(COL_AA_KEY_UNITA_DOC, new ColumnDescriptor(COL_AA_KEY_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_UNITA_DOC, new ColumnDescriptor(COL_CD_KEY_UNITA_DOC, Types.VARCHAR, 100, true));
        map.put(COL_DS_REGISTRO_UNITA_DOC, new ColumnDescriptor(COL_DS_REGISTRO_UNITA_DOC, Types.VARCHAR, 1024, true));
        map.put(COL_ID_TIPO_UNITA_DOC, new ColumnDescriptor(COL_ID_TIPO_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_NM_STRUT, new ColumnDescriptor(COL_NM_STRUT, Types.VARCHAR, 100, true));
        map.put(COL_ID_ENTE, new ColumnDescriptor(COL_ID_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, true));
        map.put(COL_ID_AMBIENTE, new ColumnDescriptor(COL_ID_AMBIENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_AMBIENTE, new ColumnDescriptor(COL_NM_AMBIENTE, Types.VARCHAR, 100, true));
        map.put(COL_NM_TIPO_UNITA_DOC, new ColumnDescriptor(COL_NM_TIPO_UNITA_DOC, Types.VARCHAR, 100, true));
        map.put(COL_ID_VER_INDICE_AIP, new ColumnDescriptor(COL_ID_VER_INDICE_AIP, Types.DECIMAL, 22, true));
        map.put(COL_CD_VER_INDICE_AIP, new ColumnDescriptor(COL_CD_VER_INDICE_AIP, Types.VARCHAR, 100, true));
        map.put(COL_DT_CREAZIONE, new ColumnDescriptor(COL_DT_CREAZIONE, Types.TIMESTAMP, 7, true));
        map.put(COL_ID_NOTA_UNITA_DOC, new ColumnDescriptor(COL_ID_NOTA_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_ID_TIPO_NOTA_UNITA_DOC, new ColumnDescriptor(COL_ID_TIPO_NOTA_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_DS_TIPO_NOTA_UNITA_DOC, new ColumnDescriptor(COL_DS_TIPO_NOTA_UNITA_DOC, Types.VARCHAR, 269, true));
        map.put(COL_NI_ORD, new ColumnDescriptor(COL_NI_ORD, Types.DECIMAL, 22, true));
        map.put(COL_PG_NOTA_UNITA_DOC, new ColumnDescriptor(COL_PG_NOTA_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_DT_NOTA_UNITA_DOC, new ColumnDescriptor(COL_DT_NOTA_UNITA_DOC, Types.TIMESTAMP, 7, true));
        map.put(COL_DS_NOTA_UNITA_DOC, new ColumnDescriptor(COL_DS_NOTA_UNITA_DOC, Types.VARCHAR, 1024, true));
        map.put(COL_ID_USER_IAM_NOTA, new ColumnDescriptor(COL_ID_USER_IAM_NOTA, Types.DECIMAL, 22, true));
        map.put(COL_NM_USERID_NOTA, new ColumnDescriptor(COL_NM_USERID_NOTA, Types.VARCHAR, 100, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
