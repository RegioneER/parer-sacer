/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.FasFascicolo;
import it.eng.parer.entity.FasLinkFascicolo;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Fas_Link_Fascicolo
 *
 */
public class FasLinkFascicoloRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Thursday, 14 December 2017 15:26" )
     */
    private static final long serialVersionUID = 1L;

    public static FasLinkFascicoloTableDescriptor TABLE_DESCRIPTOR = new FasLinkFascicoloTableDescriptor();

    public FasLinkFascicoloRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdLinkFascicolo() {
	return getBigDecimal("id_link_fascicolo");
    }

    public void setIdLinkFascicolo(BigDecimal idLinkFascicolo) {
	setObject("id_link_fascicolo", idLinkFascicolo);
    }

    public BigDecimal getIdFascicolo() {
	return getBigDecimal("id_fascicolo");
    }

    public void setIdFascicolo(BigDecimal idFascicolo) {
	setObject("id_fascicolo", idFascicolo);
    }

    public BigDecimal getAaFascicoloLink() {
	return getBigDecimal("aa_fascicolo_link");
    }

    public void setAaFascicoloLink(BigDecimal aaFascicoloLink) {
	setObject("aa_fascicolo_link", aaFascicoloLink);
    }

    public String getCdKeyFascicoloLink() {
	return getString("cd_key_fascicolo_link");
    }

    public void setCdKeyFascicoloLink(String cdKeyFascicoloLink) {
	setObject("cd_key_fascicolo_link", cdKeyFascicoloLink);
    }

    public String getDsLink() {
	return getString("ds_link");
    }

    public void setDsLink(String dsLink) {
	setObject("ds_link", dsLink);
    }

    public BigDecimal getIdFascicoloLink() {
	return getBigDecimal("id_fascicolo_link");
    }

    public void setIdFascicoloLink(BigDecimal idFascicoloLink) {
	setObject("id_fascicolo_link", idFascicoloLink);
    }

    @Override
    public void entityToRowBean(Object obj) {
	FasLinkFascicolo entity = (FasLinkFascicolo) obj;

	this.setIdLinkFascicolo(entity.getIdLinkFascicolo() == null ? null
		: BigDecimal.valueOf(entity.getIdLinkFascicolo()));

	if (entity.getFasFascicolo() != null) {
	    this.setIdFascicolo(new BigDecimal(entity.getFasFascicolo().getIdFascicolo()));
	}

	this.setAaFascicoloLink(entity.getAaFascicoloLink());
	this.setCdKeyFascicoloLink(entity.getCdKeyFascicoloLink());
	this.setDsLink(entity.getDsLink());

	if (entity.getFasFascicolo() != null) {
	    this.setIdFascicoloLink(new BigDecimal(entity.getFasFascicolo().getIdFascicolo()));
	}

    }

    @Override
    public FasLinkFascicolo rowBeanToEntity() {
	FasLinkFascicolo entity = new FasLinkFascicolo();
	if (this.getIdLinkFascicolo() != null) {
	    entity.setIdLinkFascicolo(this.getIdLinkFascicolo().longValue());
	}
	if (this.getIdFascicolo() != null) {
	    if (entity.getFasFascicolo() == null) {
		entity.setFasFascicolo(new FasFascicolo());
	    }
	    entity.getFasFascicolo().setIdFascicolo(this.getIdFascicolo().longValue());
	}
	entity.setAaFascicoloLink(this.getAaFascicoloLink());
	entity.setCdKeyFascicoloLink(this.getCdKeyFascicoloLink());
	entity.setDsLink(this.getDsLink());
	if (this.getIdFascicoloLink() != null) {
	    if (entity.getFasFascicolo() == null) {
		entity.setFasFascicolo(new FasFascicolo());
	    }
	    entity.getFasFascicolo().setIdFascicolo(this.getIdFascicoloLink().longValue());
	}
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
