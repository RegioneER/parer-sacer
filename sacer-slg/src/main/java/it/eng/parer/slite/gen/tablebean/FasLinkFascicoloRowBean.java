package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.FasFascicolo;
import it.eng.parer.entity.FasLinkFascicolo;

import java.math.BigDecimal;

/**
 * RowBean per la tabella Fas_Link_Fascicolo
 *
 */
public class FasLinkFascicoloRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 14 December 2017 15:26" )
     */

    public static FasLinkFascicoloTableDescriptor TABLE_DESCRIPTOR = new FasLinkFascicoloTableDescriptor();

    public FasLinkFascicoloRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdLinkFascicolo() {
        return getBigDecimal("id_link_fascicolo");
    }

    public void setIdLinkFascicolo(BigDecimal id_link_fascicolo) {
        setObject("id_link_fascicolo", id_link_fascicolo);
    }

    public BigDecimal getIdFascicolo() {
        return getBigDecimal("id_fascicolo");
    }

    public void setIdFascicolo(BigDecimal id_fascicolo) {
        setObject("id_fascicolo", id_fascicolo);
    }

    public BigDecimal getAaFascicoloLink() {
        return getBigDecimal("aa_fascicolo_link");
    }

    public void setAaFascicoloLink(BigDecimal aa_fascicolo_link) {
        setObject("aa_fascicolo_link", aa_fascicolo_link);
    }

    public String getCdKeyFascicoloLink() {
        return getString("cd_key_fascicolo_link");
    }

    public void setCdKeyFascicoloLink(String cd_key_fascicolo_link) {
        setObject("cd_key_fascicolo_link", cd_key_fascicolo_link);
    }

    public String getDsLink() {
        return getString("ds_link");
    }

    public void setDsLink(String ds_link) {
        setObject("ds_link", ds_link);
    }

    public BigDecimal getIdFascicoloLink() {
        return getBigDecimal("id_fascicolo_link");
    }

    public void setIdFascicoloLink(BigDecimal id_fascicolo_link) {
        setObject("id_fascicolo_link", id_fascicolo_link);
    }

    @Override
    public void entityToRowBean(Object obj) {
        FasLinkFascicolo entity = (FasLinkFascicolo) obj;
        AbstractRecord ar;
        this.setIdLinkFascicolo(new BigDecimal(entity.getIdLinkFascicolo()));
        if (entity._persistence_get_fasFascicolo_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_fasFascicolo_vh()).getRow()) != null) {
                this.setIdFascicolo(new BigDecimal((Long) ar.get("FAS_LINK_FASCICOLO.ID_FASCICOLO")));
            }
        } else {
            if (entity.getFasFascicolo() != null) {
                this.setIdFascicolo(new BigDecimal(entity.getFasFascicolo().getIdFascicolo()));
            }
        }
        this.setAaFascicoloLink(entity.getAaFascicoloLink());
        this.setCdKeyFascicoloLink(entity.getCdKeyFascicoloLink());
        this.setDsLink(entity.getDsLink());
        if (entity._persistence_get_fasFascicoloLink_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_fasFascicoloLink_vh()).getRow()) != null) {
                this.setIdFascicoloLink(new BigDecimal((Long) ar.get("FAS_LINK_FASCICOLO.ID_FASCICOLO_LINK")));
            }
        } else {
            if (entity.getFasFascicolo() != null) {
                this.setIdFascicoloLink(new BigDecimal(entity.getFasFascicolo().getIdFascicolo()));
            }
        }
    }

    @Override
    public FasLinkFascicolo rowBeanToEntity() {
        FasLinkFascicolo entity = new FasLinkFascicolo();
        if (this.getIdLinkFascicolo() != null) {
            entity.setIdLinkFascicolo(this.getIdLinkFascicolo().longValue());
        }
        if (this.getIdFascicolo() != null) {
            if (entity.getFasFascicolo() == null) {
                entity.setFasFascicolo(new FasFascicolo());
            }
            entity.getFasFascicolo().setIdFascicolo(this.getIdFascicolo().longValue());
        }
        entity.setAaFascicoloLink(this.getAaFascicoloLink());
        entity.setCdKeyFascicoloLink(this.getCdKeyFascicoloLink());
        entity.setDsLink(this.getDsLink());
        if (this.getIdFascicoloLink() != null) {
            if (entity.getFasFascicolo() == null) {
                entity.setFasFascicolo(new FasFascicolo());
            }
            entity.getFasFascicolo().setIdFascicolo(this.getIdFascicoloLink().longValue());
        }
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
