/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Dec_Modello_Tipo_Serie
 *
 */
public class DecModelloTipoSerieTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Friday, 20 May 2016 13:02" )
     */
    public static final String SELECT = "Select * from Dec_Modello_Tipo_Serie /**/";
    public static final String TABLE_NAME = "Dec_Modello_Tipo_Serie";
    public static final String COL_ID_MODELLO_TIPO_SERIE = "id_modello_tipo_serie";
    public static final String COL_ID_AMBIENTE = "id_ambiente";
    public static final String COL_NM_MODELLO_TIPO_SERIE = "nm_modello_tipo_serie";
    public static final String COL_DS_MODELLO_TIPO_SERIE = "ds_modello_tipo_serie";
    public static final String COL_TI_RGL_NM_TIPO_SERIE = "ti_rgl_nm_tipo_serie";
    public static final String COL_NM_TIPO_SERIE_DA_CREARE = "nm_tipo_serie_da_creare";
    public static final String COL_TI_RGL_DS_TIPO_SERIE = "ti_rgl_ds_tipo_serie";
    public static final String COL_DS_TIPO_SERIE_DA_CREARE = "ds_tipo_serie_da_creare";
    public static final String COL_TI_RGL_CD_SERIE = "ti_rgl_cd_serie";
    public static final String COL_CD_SERIE_DA_CREARE = "cd_serie_da_creare";
    public static final String COL_TI_RGL_DS_SERIE = "ti_rgl_ds_serie";
    public static final String COL_DS_SERIE_DA_CREARE = "ds_serie_da_creare";
    public static final String COL_TI_RGL_ANNI_CONSERV = "ti_rgl_anni_conserv";
    public static final String COL_NI_ANNI_CONSERV = "ni_anni_conserv";
    public static final String COL_FL_CONTROLLO_CONSIST_OBBLIG = "fl_controllo_consist_obblig";
    public static final String COL_NI_UNITA_DOC_VOLUME = "ni_unita_doc_volume";
    public static final String COL_TI_SEL_UD = "ti_sel_ud";
    public static final String COL_NI_AA_SEL_UD = "ni_aa_sel_ud";
    public static final String COL_NI_AA_SEL_UD_SUC = "ni_aa_sel_ud_suc";
    public static final String COL_FL_CREA_AUTOM = "fl_crea_autom";
    public static final String COL_GG_CREA_AUTOM = "gg_crea_autom";
    public static final String COL_TI_RGL_RANGE_ANNI_CREA_AUTOM = "ti_rgl_range_anni_crea_autom";
    public static final String COL_AA_INI_CREA_AUTOM = "aa_ini_crea_autom";
    public static final String COL_AA_FIN_CREA_AUTOM = "aa_fin_crea_autom";
    public static final String COL_NI_MM_CREA_AUTOM = "ni_mm_crea_autom";
    public static final String COL_TI_RGL_FILTRO_TI_DOC = "ti_rgl_filtro_ti_doc";
    public static final String COL_TI_RGL_CONSERVAZIONE_SERIE = "ti_rgl_conservazione_serie";
    public static final String COL_TI_CONSERVAZIONE_SERIE = "ti_conservazione_serie";
    public static final String COL_DT_ISTITUZ = "dt_istituz";
    public static final String COL_DT_SOPPRES = "dt_soppres";
    public static final String COL_ID_TIPO_UNITA_DOC_DATI_SPEC = "id_tipo_unita_doc_dati_spec";
    public static final String COL_ID_TIPO_DOC_DATI_SPEC = "id_tipo_doc_dati_spec";
    public static final String COL_TI_STATO_VER_SERIE_AUTOM = "ti_stato_ver_serie_autom";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_MODELLO_TIPO_SERIE, new ColumnDescriptor(COL_ID_MODELLO_TIPO_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_ID_AMBIENTE, new ColumnDescriptor(COL_ID_AMBIENTE, Types.DECIMAL, 22, false));
        map.put(COL_NM_MODELLO_TIPO_SERIE, new ColumnDescriptor(COL_NM_MODELLO_TIPO_SERIE, Types.VARCHAR, 100, false));
        map.put(COL_DS_MODELLO_TIPO_SERIE, new ColumnDescriptor(COL_DS_MODELLO_TIPO_SERIE, Types.VARCHAR, 254, false));
        map.put(COL_TI_RGL_NM_TIPO_SERIE, new ColumnDescriptor(COL_TI_RGL_NM_TIPO_SERIE, Types.VARCHAR, 30, false));
        map.put(COL_NM_TIPO_SERIE_DA_CREARE,
                new ColumnDescriptor(COL_NM_TIPO_SERIE_DA_CREARE, Types.VARCHAR, 100, false));
        map.put(COL_TI_RGL_DS_TIPO_SERIE, new ColumnDescriptor(COL_TI_RGL_DS_TIPO_SERIE, Types.VARCHAR, 30, false));
        map.put(COL_DS_TIPO_SERIE_DA_CREARE,
                new ColumnDescriptor(COL_DS_TIPO_SERIE_DA_CREARE, Types.VARCHAR, 100, false));
        map.put(COL_TI_RGL_CD_SERIE, new ColumnDescriptor(COL_TI_RGL_CD_SERIE, Types.VARCHAR, 30, false));
        map.put(COL_CD_SERIE_DA_CREARE, new ColumnDescriptor(COL_CD_SERIE_DA_CREARE, Types.VARCHAR, 100, false));
        map.put(COL_TI_RGL_DS_SERIE, new ColumnDescriptor(COL_TI_RGL_DS_SERIE, Types.VARCHAR, 30, false));
        map.put(COL_DS_SERIE_DA_CREARE, new ColumnDescriptor(COL_DS_SERIE_DA_CREARE, Types.VARCHAR, 100, false));
        map.put(COL_TI_RGL_ANNI_CONSERV, new ColumnDescriptor(COL_TI_RGL_ANNI_CONSERV, Types.VARCHAR, 30, false));
        map.put(COL_NI_ANNI_CONSERV, new ColumnDescriptor(COL_NI_ANNI_CONSERV, Types.DECIMAL, 22, false));
        map.put(COL_FL_CONTROLLO_CONSIST_OBBLIG,
                new ColumnDescriptor(COL_FL_CONTROLLO_CONSIST_OBBLIG, Types.VARCHAR, 1, false));
        map.put(COL_NI_UNITA_DOC_VOLUME, new ColumnDescriptor(COL_NI_UNITA_DOC_VOLUME, Types.DECIMAL, 22, false));
        map.put(COL_TI_SEL_UD, new ColumnDescriptor(COL_TI_SEL_UD, Types.VARCHAR, 20, false));
        map.put(COL_NI_AA_SEL_UD, new ColumnDescriptor(COL_NI_AA_SEL_UD, Types.DECIMAL, 22, false));
        map.put(COL_NI_AA_SEL_UD_SUC, new ColumnDescriptor(COL_NI_AA_SEL_UD_SUC, Types.DECIMAL, 22, false));
        map.put(COL_FL_CREA_AUTOM, new ColumnDescriptor(COL_FL_CREA_AUTOM, Types.VARCHAR, 1, false));
        map.put(COL_GG_CREA_AUTOM, new ColumnDescriptor(COL_GG_CREA_AUTOM, Types.VARCHAR, 5, false));
        map.put(COL_TI_RGL_RANGE_ANNI_CREA_AUTOM,
                new ColumnDescriptor(COL_TI_RGL_RANGE_ANNI_CREA_AUTOM, Types.VARCHAR, 30, false));
        map.put(COL_AA_INI_CREA_AUTOM, new ColumnDescriptor(COL_AA_INI_CREA_AUTOM, Types.DECIMAL, 22, false));
        map.put(COL_AA_FIN_CREA_AUTOM, new ColumnDescriptor(COL_AA_FIN_CREA_AUTOM, Types.DECIMAL, 22, false));
        map.put(COL_NI_MM_CREA_AUTOM, new ColumnDescriptor(COL_NI_MM_CREA_AUTOM, Types.DECIMAL, 22, false));
        map.put(COL_TI_RGL_FILTRO_TI_DOC, new ColumnDescriptor(COL_TI_RGL_FILTRO_TI_DOC, Types.VARCHAR, 30, false));
        map.put(COL_TI_RGL_CONSERVAZIONE_SERIE,
                new ColumnDescriptor(COL_TI_RGL_CONSERVAZIONE_SERIE, Types.VARCHAR, 30, false));
        map.put(COL_TI_CONSERVAZIONE_SERIE, new ColumnDescriptor(COL_TI_CONSERVAZIONE_SERIE, Types.VARCHAR, 30, false));
        map.put(COL_DT_ISTITUZ, new ColumnDescriptor(COL_DT_ISTITUZ, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_SOPPRES, new ColumnDescriptor(COL_DT_SOPPRES, Types.TIMESTAMP, 7, false));
        map.put(COL_ID_TIPO_UNITA_DOC_DATI_SPEC,
                new ColumnDescriptor(COL_ID_TIPO_UNITA_DOC_DATI_SPEC, Types.DECIMAL, 22, false));
        map.put(COL_ID_TIPO_DOC_DATI_SPEC, new ColumnDescriptor(COL_ID_TIPO_DOC_DATI_SPEC, Types.DECIMAL, 22, false));
        map.put(COL_TI_STATO_VER_SERIE_AUTOM,
                new ColumnDescriptor(COL_TI_STATO_VER_SERIE_AUTOM, Types.VARCHAR, 30, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
