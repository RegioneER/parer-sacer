package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Ser_V_Lis_Ud_Appart_Vol_Serie
 *
 */
public class SerVLisUdAppartVolSerieTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 10 November 2015 11:43" )
     */

    public static final String SELECT = "Select * from Ser_V_Lis_Ud_Appart_Vol_Serie /**/";
    public static final String TABLE_NAME = "Ser_V_Lis_Ud_Appart_Vol_Serie";
    public static final String COL_ID_UD_APPART_VER_SERIE = "id_ud_appart_ver_serie";
    public static final String COL_ID_CONTENUTO_VER_SERIE = "id_contenuto_ver_serie";
    public static final String COL_ID_UNITA_DOC = "id_unita_doc";
    public static final String COL_CD_UD_SERIE = "cd_ud_serie";
    public static final String COL_DT_UD_SERIE = "dt_ud_serie";
    public static final String COL_INFO_UD_SERIE = "info_ud_serie";
    public static final String COL_DS_KEY_ORD_UD_SERIE = "ds_key_ord_ud_serie";
    public static final String COL_PG_UD_SERIE = "pg_ud_serie";
    public static final String COL_ID_VOL_VER_SERIE = "id_vol_ver_serie";
    public static final String COL_CD_KEY_UNITA_DOC = "cd_key_unita_doc";
    public static final String COL_FL_UNITA_DOC_ANNUL = "fl_unita_doc_annul";
    public static final String COL_FL_PRESENTE_ALTRA_SERIE = "fl_presente_altra_serie";
    public static final String COL_DS_URN = "ds_urn";
    public static final String COL_DS_HASH = "ds_hash";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_UD_APPART_VER_SERIE, new ColumnDescriptor(COL_ID_UD_APPART_VER_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_ID_CONTENUTO_VER_SERIE, new ColumnDescriptor(COL_ID_CONTENUTO_VER_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_ID_UNITA_DOC, new ColumnDescriptor(COL_ID_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_CD_UD_SERIE, new ColumnDescriptor(COL_CD_UD_SERIE, Types.VARCHAR, 254, true));
        map.put(COL_DT_UD_SERIE, new ColumnDescriptor(COL_DT_UD_SERIE, Types.TIMESTAMP, 7, true));
        map.put(COL_INFO_UD_SERIE, new ColumnDescriptor(COL_INFO_UD_SERIE, Types.VARCHAR, 4000, true));
        map.put(COL_DS_KEY_ORD_UD_SERIE, new ColumnDescriptor(COL_DS_KEY_ORD_UD_SERIE, Types.VARCHAR, 254, true));
        map.put(COL_PG_UD_SERIE, new ColumnDescriptor(COL_PG_UD_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_ID_VOL_VER_SERIE, new ColumnDescriptor(COL_ID_VOL_VER_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_UNITA_DOC, new ColumnDescriptor(COL_CD_KEY_UNITA_DOC, Types.VARCHAR, 242, true));
        map.put(COL_FL_UNITA_DOC_ANNUL, new ColumnDescriptor(COL_FL_UNITA_DOC_ANNUL, Types.VARCHAR, 1, true));
        map.put(COL_FL_PRESENTE_ALTRA_SERIE, new ColumnDescriptor(COL_FL_PRESENTE_ALTRA_SERIE, Types.VARCHAR, 1, true));
        map.put(COL_DS_URN, new ColumnDescriptor(COL_DS_URN, Types.VARCHAR, 254, true));
        map.put(COL_DS_HASH, new ColumnDescriptor(COL_DS_HASH, Types.VARCHAR, 50, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
