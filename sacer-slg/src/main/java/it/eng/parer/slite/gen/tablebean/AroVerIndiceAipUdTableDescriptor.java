package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_Ver_Indice_Aip_Ud
 *
 */
public class AroVerIndiceAipUdTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 13 March 2018 10:50" )
     */

    public static final String SELECT = "Select * from Aro_Ver_Indice_Aip_Ud /**/";
    public static final String TABLE_NAME = "Aro_Ver_Indice_Aip_Ud";
    public static final String COL_ID_VER_INDICE_AIP = "id_ver_indice_aip";
    public static final String COL_ID_INDICE_AIP = "id_indice_aip";
    public static final String COL_PG_VER_INDICE_AIP = "pg_ver_indice_aip";
    public static final String COL_DT_CREAZIONE = "dt_creazione";
    public static final String COL_DS_HASH_INDICE_AIP = "ds_hash_indice_aip";
    public static final String COL_DS_URN = "ds_urn";
    public static final String COL_DS_CAUSALE = "ds_causale";
    public static final String COL_CD_VER_INDICE_AIP = "cd_ver_indice_aip";
    public static final String COL_CD_VER_XSD_INDICE_AIP = "cd_ver_xsd_indice_aip";
    public static final String COL_ID_ELENCO_VERS = "id_elenco_vers";
    public static final String COL_DS_HASH_AIP = "ds_hash_aip";
    public static final String COL_DS_ALGO_HASH_AIP = "ds_algo_hash_aip";
    public static final String COL_CD_ENCODING_HASH_AIP = "cd_encoding_hash_aip";
    public static final String COL_ID_ENTE_CONSERV = "id_ente_conserv";
    public static final String COL_DS_ALGO_HASH_INDICE_AIP = "ds_algo_hash_indice_aip";
    public static final String COL_CD_ENCODING_HASH_INDICE_AIP = "cd_encoding_hash_indice_aip";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_VER_INDICE_AIP, new ColumnDescriptor(COL_ID_VER_INDICE_AIP, Types.DECIMAL, 22, true));
        map.put(COL_ID_INDICE_AIP, new ColumnDescriptor(COL_ID_INDICE_AIP, Types.DECIMAL, 22, false));
        map.put(COL_PG_VER_INDICE_AIP, new ColumnDescriptor(COL_PG_VER_INDICE_AIP, Types.DECIMAL, 22, false));
        map.put(COL_DT_CREAZIONE, new ColumnDescriptor(COL_DT_CREAZIONE, Types.TIMESTAMP, 7, false));
        map.put(COL_DS_HASH_INDICE_AIP, new ColumnDescriptor(COL_DS_HASH_INDICE_AIP, Types.VARCHAR, 254, false));
        map.put(COL_DS_URN, new ColumnDescriptor(COL_DS_URN, Types.VARCHAR, 254, false));
        map.put(COL_DS_CAUSALE, new ColumnDescriptor(COL_DS_CAUSALE, Types.VARCHAR, 254, false));
        map.put(COL_CD_VER_INDICE_AIP, new ColumnDescriptor(COL_CD_VER_INDICE_AIP, Types.VARCHAR, 100, false));
        map.put(COL_CD_VER_XSD_INDICE_AIP, new ColumnDescriptor(COL_CD_VER_XSD_INDICE_AIP, Types.VARCHAR, 100, false));
        map.put(COL_ID_ELENCO_VERS, new ColumnDescriptor(COL_ID_ELENCO_VERS, Types.DECIMAL, 22, false));
        map.put(COL_DS_HASH_AIP, new ColumnDescriptor(COL_DS_HASH_AIP, Types.VARCHAR, 254, false));
        map.put(COL_DS_ALGO_HASH_AIP, new ColumnDescriptor(COL_DS_ALGO_HASH_AIP, Types.VARCHAR, 254, false));
        map.put(COL_CD_ENCODING_HASH_AIP, new ColumnDescriptor(COL_CD_ENCODING_HASH_AIP, Types.VARCHAR, 20, false));
        map.put(COL_ID_ENTE_CONSERV, new ColumnDescriptor(COL_ID_ENTE_CONSERV, Types.DECIMAL, 22, false));
        map.put(COL_DS_ALGO_HASH_INDICE_AIP,
                new ColumnDescriptor(COL_DS_ALGO_HASH_INDICE_AIP, Types.VARCHAR, 254, false));
        map.put(COL_CD_ENCODING_HASH_INDICE_AIP,
                new ColumnDescriptor(COL_CD_ENCODING_HASH_INDICE_AIP, Types.VARCHAR, 20, false));

    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
