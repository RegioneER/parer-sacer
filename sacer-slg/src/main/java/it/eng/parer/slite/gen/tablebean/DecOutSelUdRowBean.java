package it.eng.parer.slite.gen.tablebean;

import it.eng.parer.entity.DecOutSelUd;
import it.eng.parer.entity.DecTipoSerieUd;
import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Dec_Out_Sel_Ud
 *
 */
public class DecOutSelUdRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 19 February 2015 11:53" )
     */

    public static DecOutSelUdTableDescriptor TABLE_DESCRIPTOR = new DecOutSelUdTableDescriptor();

    public DecOutSelUdRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdOutSelUd() {
        return getBigDecimal("id_out_sel_ud");
    }

    public void setIdOutSelUd(BigDecimal id_out_sel_ud) {
        setObject("id_out_sel_ud", id_out_sel_ud);
    }

    public BigDecimal getIdTipoSerieUd() {
        return getBigDecimal("id_tipo_serie_ud");
    }

    public void setIdTipoSerieUd(BigDecimal id_tipo_serie_ud) {
        setObject("id_tipo_serie_ud", id_tipo_serie_ud);
    }

    public String getTiOut() {
        return getString("ti_out");
    }

    public void setTiOut(String ti_out) {
        setObject("ti_out", ti_out);
    }

    public String getDlFormatoOut() {
        return getString("dl_formato_out");
    }

    public void setDlFormatoOut(String dl_formato_out) {
        setObject("dl_formato_out", dl_formato_out);
    }

    @Override
    public void entityToRowBean(Object obj) {
        DecOutSelUd entity = (DecOutSelUd) obj;
        AbstractRecord ar;
        this.setIdOutSelUd(new BigDecimal(entity.getIdOutSelUd()));
        if (entity._persistence_get_decTipoSerieUd_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_decTipoSerieUd_vh()).getRow()) != null) {
                this.setIdTipoSerieUd(new BigDecimal((Long) ar.get("DEC_OUT_SEL_UD.ID_TIPO_SERIE_UD")));
            }
        } else {
            if (entity.getDecTipoSerieUd() != null) {
                this.setIdTipoSerieUd(new BigDecimal(entity.getDecTipoSerieUd().getIdTipoSerieUd()));
            }
        }
        this.setTiOut(entity.getTiOut());
        this.setDlFormatoOut(entity.getDlFormatoOut());
    }

    @Override
    public DecOutSelUd rowBeanToEntity() {
        DecOutSelUd entity = new DecOutSelUd();
        if (this.getIdOutSelUd() != null) {
            entity.setIdOutSelUd(this.getIdOutSelUd().longValue());
        }
        if (this.getIdTipoSerieUd() != null) {
            if (entity.getDecTipoSerieUd() == null) {
                entity.setDecTipoSerieUd(new DecTipoSerieUd());
            }
            entity.getDecTipoSerieUd().setIdTipoSerieUd(this.getIdTipoSerieUd().longValue());
        }
        entity.setTiOut(this.getTiOut());
        entity.setDlFormatoOut(this.getDlFormatoOut());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
