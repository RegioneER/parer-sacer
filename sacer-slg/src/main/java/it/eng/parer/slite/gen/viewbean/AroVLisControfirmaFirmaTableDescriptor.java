package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_V_Lis_Controfirma_Firma
 *
 */
public class AroVLisControfirmaFirmaTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 20 December 2012 16:14" )
     */

    public static final String SELECT = "Select * from Aro_V_Lis_Controfirma_Firma /**/";
    public static final String TABLE_NAME = "Aro_V_Lis_Controfirma_Firma";
    public static final String COL_ID_FIRMA_COMP = "id_firma_comp";
    public static final String COL_ID_CONTROFIRMA_FIRMA = "id_controfirma_firma";
    public static final String COL_NM_COGNOME_FIRMATARIO = "nm_cognome_firmatario";
    public static final String COL_NM_FIRMATARIO = "nm_firmatario";
    public static final String COL_CD_FIRMATARIO = "cd_firmatario";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_FIRMA_COMP, new ColumnDescriptor(COL_ID_FIRMA_COMP, Types.DECIMAL, 22, true));
        map.put(COL_ID_CONTROFIRMA_FIRMA, new ColumnDescriptor(COL_ID_CONTROFIRMA_FIRMA, Types.DECIMAL, 22, true));
        map.put(COL_NM_COGNOME_FIRMATARIO, new ColumnDescriptor(COL_NM_COGNOME_FIRMATARIO, Types.VARCHAR, 1024, true));
        map.put(COL_NM_FIRMATARIO, new ColumnDescriptor(COL_NM_FIRMATARIO, Types.VARCHAR, 100, true));
        map.put(COL_CD_FIRMATARIO, new ColumnDescriptor(COL_CD_FIRMATARIO, Types.VARCHAR, 100, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
