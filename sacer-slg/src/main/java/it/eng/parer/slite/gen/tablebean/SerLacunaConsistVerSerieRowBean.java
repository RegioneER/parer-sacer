package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.SerLacunaConsistVerSerie;
import it.eng.parer.entity.SerConsistVerSerie;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Ser_Lacuna_Consist_Ver_Serie
 *
 */
public class SerLacunaConsistVerSerieRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 27 August 2015 10:33" )
     */

    public static SerLacunaConsistVerSerieTableDescriptor TABLE_DESCRIPTOR = new SerLacunaConsistVerSerieTableDescriptor();

    public SerLacunaConsistVerSerieRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdLacunaConsistVerSerie() {
        return getBigDecimal("id_lacuna_consist_ver_serie");
    }

    public void setIdLacunaConsistVerSerie(BigDecimal id_lacuna_consist_ver_serie) {
        setObject("id_lacuna_consist_ver_serie", id_lacuna_consist_ver_serie);
    }

    public BigDecimal getIdConsistVerSerie() {
        return getBigDecimal("id_consist_ver_serie");
    }

    public void setIdConsistVerSerie(BigDecimal id_consist_ver_serie) {
        setObject("id_consist_ver_serie", id_consist_ver_serie);
    }

    public BigDecimal getPgLacuna() {
        return getBigDecimal("pg_lacuna");
    }

    public void setPgLacuna(BigDecimal pg_lacuna) {
        setObject("pg_lacuna", pg_lacuna);
    }

    public BigDecimal getNiIniLacuna() {
        return getBigDecimal("ni_ini_lacuna");
    }

    public void setNiIniLacuna(BigDecimal ni_ini_lacuna) {
        setObject("ni_ini_lacuna", ni_ini_lacuna);
    }

    public BigDecimal getNiFinLacuna() {
        return getBigDecimal("ni_fin_lacuna");
    }

    public void setNiFinLacuna(BigDecimal ni_fin_lacuna) {
        setObject("ni_fin_lacuna", ni_fin_lacuna);
    }

    public String getDlLacuna() {
        return getString("dl_lacuna");
    }

    public void setDlLacuna(String dl_lacuna) {
        setObject("dl_lacuna", dl_lacuna);
    }

    public String getTiLacuna() {
        return getString("ti_lacuna");
    }

    public void setTiLacuna(String ti_lacuna) {
        setObject("ti_lacuna", ti_lacuna);
    }

    public String getTiModLacuna() {
        return getString("ti_mod_lacuna");
    }

    public void setTiModLacuna(String ti_mod_lacuna) {
        setObject("ti_mod_lacuna", ti_mod_lacuna);
    }

    public String getDlNotaLacuna() {
        return getString("dl_nota_lacuna");
    }

    public void setDlNotaLacuna(String dl_nota_lacuna) {
        setObject("dl_nota_lacuna", dl_nota_lacuna);
    }

    @Override
    public void entityToRowBean(Object obj) {
        SerLacunaConsistVerSerie entity = (SerLacunaConsistVerSerie) obj;
        AbstractRecord ar;
        this.setIdLacunaConsistVerSerie(new BigDecimal(entity.getIdLacunaConsistVerSerie()));
        if (entity._persistence_get_serConsistVerSerie_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_serConsistVerSerie_vh()).getRow()) != null) {
                this.setIdConsistVerSerie(
                        new BigDecimal((Long) ar.get("SER_LACUNA_CONSIST_VER_SERIE.ID_CONSIST_VER_SERIE")));
            }
        } else {
            if (entity.getSerConsistVerSerie() != null) {
                this.setIdConsistVerSerie(new BigDecimal(entity.getSerConsistVerSerie().getIdConsistVerSerie()));
            }
        }
        this.setPgLacuna(entity.getPgLacuna());
        this.setNiIniLacuna(entity.getNiIniLacuna());
        this.setNiFinLacuna(entity.getNiFinLacuna());
        this.setDlLacuna(entity.getDlLacuna());
        this.setTiLacuna(entity.getTiLacuna());
        this.setTiModLacuna(entity.getTiModLacuna());
        this.setDlNotaLacuna(entity.getDlNotaLacuna());
    }

    @Override
    public SerLacunaConsistVerSerie rowBeanToEntity() {
        SerLacunaConsistVerSerie entity = new SerLacunaConsistVerSerie();
        if (this.getIdLacunaConsistVerSerie() != null) {
            entity.setIdLacunaConsistVerSerie(this.getIdLacunaConsistVerSerie().longValue());
        }
        if (this.getIdConsistVerSerie() != null) {
            if (entity.getSerConsistVerSerie() == null) {
                entity.setSerConsistVerSerie(new SerConsistVerSerie());
            }
            entity.getSerConsistVerSerie().setIdConsistVerSerie(this.getIdConsistVerSerie().longValue());
        }
        entity.setPgLacuna(this.getPgLacuna());
        entity.setNiIniLacuna(this.getNiIniLacuna());
        entity.setNiFinLacuna(this.getNiFinLacuna());
        entity.setDlLacuna(this.getDlLacuna());
        entity.setTiLacuna(this.getTiLacuna());
        entity.setTiModLacuna(this.getTiModLacuna());
        entity.setDlNotaLacuna(this.getDlNotaLacuna());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
