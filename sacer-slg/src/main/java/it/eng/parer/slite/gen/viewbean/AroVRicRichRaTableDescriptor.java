package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_V_Ric_Rich_Ra
 *
 */
public class AroVRicRichRaTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 18 June 2019 17:09" )
     */

    public static final String SELECT = "Select * from Aro_V_Ric_Rich_Ra /**/";
    public static final String TABLE_NAME = "Aro_V_Ric_Rich_Ra";
    public static final String COL_NM_ENTE_CONVENZ = "nm_ente_convenz";
    public static final String COL_NM_ENTE_STRUT = "nm_ente_strut";
    public static final String COL_TI_STATO = "ti_stato";
    public static final String COL_ID_RICHIESTA_RA = "id_richiesta_ra";
    public static final String COL_ID_AMBIENTE = "id_ambiente";
    public static final String COL_ID_ENTE = "id_ente";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_TOTALI = "totali";
    public static final String COL_ESTRATTI = "estratti";
    public static final String COL_ERRORI = "errori";
    public static final String COL_SUM_DIM = "sum_dim";
    public static final String COL_MAX_DT_ESTRAZIONE = "max_dt_estrazione";
    public static final String COL_ESTRATTI_TOTALI = "estratti_totali";
    public static final String COL_PRIORITA = "priorita";
    public static final String COL_CD_ERRORE = "cd_errore";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_NM_ENTE_CONVENZ, new ColumnDescriptor(COL_NM_ENTE_CONVENZ, Types.VARCHAR, 254, true));
        map.put(COL_NM_ENTE_STRUT, new ColumnDescriptor(COL_NM_ENTE_STRUT, Types.VARCHAR, 203, true));
        map.put(COL_TI_STATO, new ColumnDescriptor(COL_TI_STATO, Types.VARCHAR, 30, true));
        map.put(COL_ID_RICHIESTA_RA, new ColumnDescriptor(COL_ID_RICHIESTA_RA, Types.DECIMAL, 22, true));
        map.put(COL_ID_AMBIENTE, new ColumnDescriptor(COL_ID_AMBIENTE, Types.DECIMAL, 22, true));
        map.put(COL_ID_ENTE, new ColumnDescriptor(COL_ID_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
        map.put(COL_TOTALI, new ColumnDescriptor(COL_TOTALI, Types.DECIMAL, 22, true));
        map.put(COL_ESTRATTI, new ColumnDescriptor(COL_ESTRATTI, Types.DECIMAL, 22, true));
        map.put(COL_ERRORI, new ColumnDescriptor(COL_ERRORI, Types.DECIMAL, 22, true));
        map.put(COL_SUM_DIM, new ColumnDescriptor(COL_SUM_DIM, Types.DECIMAL, 22, true));
        map.put(COL_MAX_DT_ESTRAZIONE, new ColumnDescriptor(COL_MAX_DT_ESTRAZIONE, Types.TIMESTAMP, 7, true));
        map.put(COL_ESTRATTI_TOTALI, new ColumnDescriptor(COL_ESTRATTI_TOTALI, Types.DECIMAL, 22, true));
        map.put(COL_PRIORITA, new ColumnDescriptor(COL_PRIORITA, Types.DECIMAL, 22, true));
        map.put(COL_CD_ERRORE, new ColumnDescriptor(COL_CD_ERRORE, Types.VARCHAR, 300, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
