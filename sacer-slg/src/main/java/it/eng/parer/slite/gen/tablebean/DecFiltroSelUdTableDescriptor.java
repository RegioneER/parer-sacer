/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Dec_Filtro_Sel_Ud
 *
 */
public class DecFiltroSelUdTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 13 January 2015 09:49" )
     */

    public static final String SELECT = "Select * from Dec_Filtro_Sel_Ud /**/";
    public static final String TABLE_NAME = "Dec_Filtro_Sel_Ud";
    public static final String COL_ID_FILTRO_SEL_UD = "id_filtro_sel_ud";
    public static final String COL_ID_TIPO_SERIE_UD = "id_tipo_serie_ud";
    public static final String COL_TI_FILTRO = "ti_filtro";
    public static final String COL_PG_FILTRO = "pg_filtro";
    public static final String COL_DT_CREAZIONE_UNITA_DOC_DA = "dt_creazione_unita_doc_da";
    public static final String COL_DT_CREAZIONE_UNITA_DOC_A = "dt_creazione_unita_doc_a";
    public static final String COL_ID_TIPO_DOC_PRINC = "id_tipo_doc_princ";
    public static final String COL_DT_REG_UNITA_DOC_DA = "dt_reg_unita_doc_da";
    public static final String COL_DT_REG_UNITA_DOC_A = "dt_reg_unita_doc_a";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_FILTRO_SEL_UD, new ColumnDescriptor(COL_ID_FILTRO_SEL_UD, Types.DECIMAL, 22, true));
        map.put(COL_ID_TIPO_SERIE_UD, new ColumnDescriptor(COL_ID_TIPO_SERIE_UD, Types.DECIMAL, 22, false));
        map.put(COL_TI_FILTRO, new ColumnDescriptor(COL_TI_FILTRO, Types.VARCHAR, 30, false));
        map.put(COL_PG_FILTRO, new ColumnDescriptor(COL_PG_FILTRO, Types.DECIMAL, 22, false));
        map.put(COL_DT_CREAZIONE_UNITA_DOC_DA,
                new ColumnDescriptor(COL_DT_CREAZIONE_UNITA_DOC_DA, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_CREAZIONE_UNITA_DOC_A,
                new ColumnDescriptor(COL_DT_CREAZIONE_UNITA_DOC_A, Types.TIMESTAMP, 7, false));
        map.put(COL_ID_TIPO_DOC_PRINC, new ColumnDescriptor(COL_ID_TIPO_DOC_PRINC, Types.DECIMAL, 22, false));
        map.put(COL_DT_REG_UNITA_DOC_DA, new ColumnDescriptor(COL_DT_REG_UNITA_DOC_DA, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_REG_UNITA_DOC_A, new ColumnDescriptor(COL_DT_REG_UNITA_DOC_A, Types.TIMESTAMP, 7, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
