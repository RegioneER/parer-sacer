package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import it.eng.parer.viewEntity.AroVLisVolNoValDoc;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Types;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Aro_V_Lis_Vol_No_Val_Doc
 *
 */
public class AroVLisVolNoValDocRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 20 December 2012 16:14" )
     */

    public static AroVLisVolNoValDocTableDescriptor TABLE_DESCRIPTOR = new AroVLisVolNoValDocTableDescriptor();

    public AroVLisVolNoValDocRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    public BigDecimal getIdDoc() {
        return getBigDecimal("id_doc");
    }

    public void setIdDoc(BigDecimal id_doc) {
        setObject("id_doc", id_doc);
    }

    public BigDecimal getIdVolumeConserv() {
        return getBigDecimal("id_volume_conserv");
    }

    public void setIdVolumeConserv(BigDecimal id_volume_conserv) {
        setObject("id_volume_conserv", id_volume_conserv);
    }

    public String getNmVolumeConserv() {
        return getString("nm_volume_conserv");
    }

    public void setNmVolumeConserv(String nm_volume_conserv) {
        setObject("nm_volume_conserv", nm_volume_conserv);
    }

    public String getDsVolumeConserv() {
        return getString("ds_volume_conserv");
    }

    public void setDsVolumeConserv(String ds_volume_conserv) {
        setObject("ds_volume_conserv", ds_volume_conserv);
    }

    public Timestamp getDtCreazione() {
        return getTimestamp("dt_creazione");
    }

    public void setDtCreazione(Timestamp dt_creazione) {
        setObject("dt_creazione", dt_creazione);
    }

    public String getTiStatoVolumeConserv() {
        return getString("ti_stato_volume_conserv");
    }

    public void setTiStatoVolumeConserv(String ti_stato_volume_conserv) {
        setObject("ti_stato_volume_conserv", ti_stato_volume_conserv);
    }

    @Override
    public void entityToRowBean(Object obj) {
        AroVLisVolNoValDoc entity = (AroVLisVolNoValDoc) obj;
        this.setIdDoc(entity.getIdDoc());
        this.setIdVolumeConserv(entity.getIdVolumeConserv());
        this.setNmVolumeConserv(entity.getNmVolumeConserv());
        this.setDsVolumeConserv(entity.getDsVolumeConserv());
        if (entity.getDtCreazione() != null) {
            this.setDtCreazione(new Timestamp(entity.getDtCreazione().getTime()));
        }
        this.setTiStatoVolumeConserv(entity.getTiStatoVolumeConserv());
    }

    @Override
    public AroVLisVolNoValDoc rowBeanToEntity() {
        AroVLisVolNoValDoc entity = new AroVLisVolNoValDoc();
        entity.setIdDoc(this.getIdDoc());
        entity.setIdVolumeConserv(this.getIdVolumeConserv());
        entity.setNmVolumeConserv(this.getNmVolumeConserv());
        entity.setDsVolumeConserv(this.getDsVolumeConserv());
        entity.setDtCreazione(this.getDtCreazione());
        entity.setTiStatoVolumeConserv(this.getTiStatoVolumeConserv());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
