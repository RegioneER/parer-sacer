package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_V_Vis_Comp
 *
 */
public class AroVVisCompTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 6 November 2018 15:18" )
     */

    public static final String SELECT = "Select * from Aro_V_Vis_Comp /**/";
    public static final String TABLE_NAME = "Aro_V_Vis_Comp";
    public static final String COL_NM_AMBIENTE = "nm_ambiente";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_NM_STRUT = "nm_strut";
    public static final String COL_ID_UNITA_DOC = "id_unita_doc";
    public static final String COL_ID_STRUT_UNITA_DOC = "id_strut_unita_doc";
    public static final String COL_CD_REGISTRO_KEY_UNITA_DOC = "cd_registro_key_unita_doc";
    public static final String COL_AA_KEY_UNITA_DOC = "aa_key_unita_doc";
    public static final String COL_CD_KEY_UNITA_DOC = "cd_key_unita_doc";
    public static final String COL_ID_TIPO_UNITA_DOC = "id_tipo_unita_doc";
    public static final String COL_NM_TIPO_UNITA_DOC = "nm_tipo_unita_doc";
    public static final String COL_DT_ANNUL_UNITA_DOC = "dt_annul_unita_doc";
    public static final String COL_TI_ANNUL_UNITA_DOC = "ti_annul_unita_doc";
    public static final String COL_DL_OGGETTO_UNITA_DOC = "dl_oggetto_unita_doc";
    public static final String COL_DT_REG_UNITA_DOC = "dt_reg_unita_doc";
    public static final String COL_DT_CREAZIONE_UD = "dt_creazione_ud";
    public static final String COL_NT_ANNUL_UNITA_DOC = "nt_annul_unita_doc";
    public static final String COL_ID_DOC = "id_doc";
    public static final String COL_CD_KEY_DOC_VERS = "cd_key_doc_vers";
    public static final String COL_TI_DOC = "ti_doc";
    public static final String COL_PG_DOC = "pg_doc";
    public static final String COL_NM_TIPO_DOC = "nm_tipo_doc";
    public static final String COL_DL_DOC = "dl_doc";
    public static final String COL_DS_AUTORE_DOC = "ds_autore_doc";
    public static final String COL_DT_ANNUL_DOC = "dt_annul_doc";
    public static final String COL_TI_ANNUL_DOC = "ti_annul_doc";
    public static final String COL_DT_CREAZIONE_DOC = "dt_creazione_doc";
    public static final String COL_TI_STATO_DOC = "ti_stato_doc";
    public static final String COL_NM_TIPO_STRUT_DOC = "nm_tipo_strut_doc";
    public static final String COL_NT_ANNUL_DOC = "nt_annul_doc";
    public static final String COL_NI_ORD_DOC = "ni_ord_doc";
    public static final String COL_ID_COMP_DOC = "id_comp_doc";
    public static final String COL_NI_ORD_COMP_DOC = "ni_ord_comp_doc";
    public static final String COL_NM_TIPO_COMP_DOC = "nm_tipo_comp_doc";
    public static final String COL_TI_SUPPORTO_COMP = "ti_supporto_comp";
    public static final String COL_DS_NOME_COMP_VERS = "ds_nome_comp_vers";
    public static final String COL_DS_HASH_FILE_VERS = "ds_hash_file_vers";
    public static final String COL_DL_URN_COMP_VERS = "dl_urn_comp_vers";
    public static final String COL_DS_ID_COMP_VERS = "ds_id_comp_vers";
    public static final String COL_NM_FORMATO_VERS = "nm_formato_vers";
    public static final String COL_NM_TIPO_RAPPR_COMP = "nm_tipo_rappr_comp";
    public static final String COL_TM_RIF_TEMP_VERS = "tm_rif_temp_vers";
    public static final String COL_DS_RIF_TEMP_VERS = "ds_rif_temp_vers";
    public static final String COL_FL_RIF_TEMP_DATA_FIRMA_VERS = "fl_rif_temp_data_firma_vers";
    public static final String COL_NI_ORD_COMP_PADRE = "ni_ord_comp_padre";
    public static final String COL_FL_NO_CALC_FMT_VERIF_FIRME = "fl_no_calc_fmt_verif_firme";
    public static final String COL_FL_NO_CALC_HASH_FILE = "fl_no_calc_hash_file";
    public static final String COL_DS_URN_COMP_CALC = "ds_urn_comp_calc";
    public static final String COL_NM_FORMATO_CALC = "nm_formato_calc";
    public static final String COL_NI_SIZE_FILE_CALC = "ni_size_file_calc";
    public static final String COL_DS_HASH_FILE_CALC = "ds_hash_file_calc";
    public static final String COL_DS_ALGO_HASH_FILE_CALC = "ds_algo_hash_file_calc";
    public static final String COL_CD_ENCODING_HASH_FILE_CALC = "cd_encoding_hash_file_calc";
    public static final String COL_DS_HASH_FILE_256 = "ds_hash_file_256";
    public static final String COL_DS_ALGO_HASH_FILE_256 = "ds_algo_hash_file_256";
    public static final String COL_CD_ENCODING_HASH_FILE_256 = "cd_encoding_hash_file_256";
    public static final String COL_TI_ESITO_CONTR_FORMATO_FILE = "ti_esito_contr_formato_file";
    public static final String COL_DS_MSG_ESITO_CONTR_FORMATO = "ds_msg_esito_contr_formato";
    public static final String COL_DS_FORMATO_RAPPR_CALC = "ds_formato_rappr_calc";
    public static final String COL_DS_FORMATO_RAPPR_ESTESO_CALC = "ds_formato_rappr_esteso_calc";
    public static final String COL_DS_FORMATO_RAPPR_FILE_DOC = "ds_formato_rappr_file_doc";
    public static final String COL_FL_COMP_FIRMATO = "fl_comp_firmato";
    public static final String COL_TI_ESITO_VERIF_FIRME = "ti_esito_verif_firme";
    public static final String COL_DS_MSG_ESITO_VERIF_FIRME = "ds_msg_esito_verif_firme";
    public static final String COL_NM_MIMETYPE_FILE = "nm_mimetype_file";
    public static final String COL_DS_URN_ORIGINALE = "ds_urn_originale";
    public static final String COL_DS_URN_NORMALIZZATO = "ds_urn_normalizzato";
    public static final String COL_ID_ELENCO_VERS = "id_elenco_vers";
    public static final String COL_NM_ELENCO_VERS = "nm_elenco_vers";
    public static final String COL_TI_STATO_ELENCO_VERS = "ti_stato_elenco_vers";
    public static final String COL_DT_CHIUS_ELENCO_VERS = "dt_chius_elenco_vers";
    public static final String COL_TI_ESITO_VERIF_FIRME_DT_VERS = "ti_esito_verif_firme_dt_vers";
    public static final String COL_DS_ESITO_VERIF_FIRME_DT_VERS = "ds_esito_verif_firme_dt_vers";
    public static final String COL_CD_REGISTRO_KEY_UNITA_DOC_RIF = "cd_registro_key_unita_doc_rif";
    public static final String COL_AA_KEY_UNITA_DOC_RIF = "aa_key_unita_doc_rif";
    public static final String COL_CD_KEY_UNITA_DOC_RIF = "cd_key_unita_doc_rif";
    public static final String COL_TIPO_ARCHIVIAZIONE = "tipo_archiviazione";
    public static final String COL_CD_SUB_PARTITION = "cd_sub_partition";
    public static final String COL_ID_FILE_ORACLE = "id_file_oracle";
    public static final String COL_NM_TENANT = "nm_tenant";
    public static final String COL_NM_BUCKET = "nm_bucket";
    public static final String COL_CD_KEY_FILE = "cd_key_file";
    public static final String COL_DS_NOME_FILE_ARK = "ds_nome_file_ark";
    public static final String COL_TI_STATO_DT_VERS = "ti_stato_dt_vers";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_NM_AMBIENTE, new ColumnDescriptor(COL_NM_AMBIENTE, Types.VARCHAR, 100, true));
        map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, true));
        map.put(COL_NM_STRUT, new ColumnDescriptor(COL_NM_STRUT, Types.VARCHAR, 100, true));
        map.put(COL_ID_UNITA_DOC, new ColumnDescriptor(COL_ID_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_ID_STRUT_UNITA_DOC, new ColumnDescriptor(COL_ID_STRUT_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_CD_REGISTRO_KEY_UNITA_DOC,
                new ColumnDescriptor(COL_CD_REGISTRO_KEY_UNITA_DOC, Types.VARCHAR, 100, true));
        map.put(COL_AA_KEY_UNITA_DOC, new ColumnDescriptor(COL_AA_KEY_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_UNITA_DOC, new ColumnDescriptor(COL_CD_KEY_UNITA_DOC, Types.VARCHAR, 100, true));
        map.put(COL_ID_TIPO_UNITA_DOC, new ColumnDescriptor(COL_ID_TIPO_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_NM_TIPO_UNITA_DOC, new ColumnDescriptor(COL_NM_TIPO_UNITA_DOC, Types.VARCHAR, 100, true));
        map.put(COL_DT_ANNUL_UNITA_DOC, new ColumnDescriptor(COL_DT_ANNUL_UNITA_DOC, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_ANNUL_UNITA_DOC, new ColumnDescriptor(COL_TI_ANNUL_UNITA_DOC, Types.VARCHAR, 20, true));
        map.put(COL_DL_OGGETTO_UNITA_DOC, new ColumnDescriptor(COL_DL_OGGETTO_UNITA_DOC, Types.VARCHAR, 4000, true));
        map.put(COL_DT_REG_UNITA_DOC, new ColumnDescriptor(COL_DT_REG_UNITA_DOC, Types.TIMESTAMP, 7, true));
        map.put(COL_DT_CREAZIONE_UD, new ColumnDescriptor(COL_DT_CREAZIONE_UD, Types.TIMESTAMP, 7, true));
        map.put(COL_NT_ANNUL_UNITA_DOC, new ColumnDescriptor(COL_NT_ANNUL_UNITA_DOC, Types.VARCHAR, 2000, true));
        map.put(COL_ID_DOC, new ColumnDescriptor(COL_ID_DOC, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_DOC_VERS, new ColumnDescriptor(COL_CD_KEY_DOC_VERS, Types.VARCHAR, 100, true));
        map.put(COL_TI_DOC, new ColumnDescriptor(COL_TI_DOC, Types.VARCHAR, 20, true));
        map.put(COL_PG_DOC, new ColumnDescriptor(COL_PG_DOC, Types.DECIMAL, 22, true));
        map.put(COL_NM_TIPO_DOC, new ColumnDescriptor(COL_NM_TIPO_DOC, Types.VARCHAR, 100, true));
        map.put(COL_DL_DOC, new ColumnDescriptor(COL_DL_DOC, Types.VARCHAR, 1024, true));
        map.put(COL_DS_AUTORE_DOC, new ColumnDescriptor(COL_DS_AUTORE_DOC, Types.VARCHAR, 4000, true));
        map.put(COL_DT_ANNUL_DOC, new ColumnDescriptor(COL_DT_ANNUL_DOC, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_ANNUL_DOC, new ColumnDescriptor(COL_TI_ANNUL_DOC, Types.VARCHAR, 20, true));
        map.put(COL_DT_CREAZIONE_DOC, new ColumnDescriptor(COL_DT_CREAZIONE_DOC, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_STATO_DOC, new ColumnDescriptor(COL_TI_STATO_DOC, Types.VARCHAR, 30, true));
        map.put(COL_NM_TIPO_STRUT_DOC, new ColumnDescriptor(COL_NM_TIPO_STRUT_DOC, Types.VARCHAR, 100, true));
        map.put(COL_NT_ANNUL_DOC, new ColumnDescriptor(COL_NT_ANNUL_DOC, Types.VARCHAR, 2000, true));
        map.put(COL_NI_ORD_DOC, new ColumnDescriptor(COL_NI_ORD_DOC, Types.DECIMAL, 22, true));
        map.put(COL_ID_COMP_DOC, new ColumnDescriptor(COL_ID_COMP_DOC, Types.DECIMAL, 22, true));
        map.put(COL_NI_ORD_COMP_DOC, new ColumnDescriptor(COL_NI_ORD_COMP_DOC, Types.DECIMAL, 22, true));
        map.put(COL_NM_TIPO_COMP_DOC, new ColumnDescriptor(COL_NM_TIPO_COMP_DOC, Types.VARCHAR, 100, true));
        map.put(COL_TI_SUPPORTO_COMP, new ColumnDescriptor(COL_TI_SUPPORTO_COMP, Types.VARCHAR, 20, true));
        map.put(COL_DS_NOME_COMP_VERS, new ColumnDescriptor(COL_DS_NOME_COMP_VERS, Types.VARCHAR, 254, true));
        map.put(COL_DS_HASH_FILE_VERS, new ColumnDescriptor(COL_DS_HASH_FILE_VERS, Types.VARCHAR, 254, true));
        map.put(COL_DL_URN_COMP_VERS, new ColumnDescriptor(COL_DL_URN_COMP_VERS, Types.VARCHAR, 1024, true));
        map.put(COL_DS_ID_COMP_VERS, new ColumnDescriptor(COL_DS_ID_COMP_VERS, Types.VARCHAR, 254, true));
        map.put(COL_NM_FORMATO_VERS, new ColumnDescriptor(COL_NM_FORMATO_VERS, Types.VARCHAR, 100, true));
        map.put(COL_NM_TIPO_RAPPR_COMP, new ColumnDescriptor(COL_NM_TIPO_RAPPR_COMP, Types.VARCHAR, 100, true));
        map.put(COL_TM_RIF_TEMP_VERS, new ColumnDescriptor(COL_TM_RIF_TEMP_VERS, Types.TIMESTAMP, 7, true));
        map.put(COL_DS_RIF_TEMP_VERS, new ColumnDescriptor(COL_DS_RIF_TEMP_VERS, Types.VARCHAR, 254, true));
        map.put(COL_FL_RIF_TEMP_DATA_FIRMA_VERS,
                new ColumnDescriptor(COL_FL_RIF_TEMP_DATA_FIRMA_VERS, Types.VARCHAR, 1, true));
        map.put(COL_NI_ORD_COMP_PADRE, new ColumnDescriptor(COL_NI_ORD_COMP_PADRE, Types.DECIMAL, 22, true));
        map.put(COL_FL_NO_CALC_FMT_VERIF_FIRME,
                new ColumnDescriptor(COL_FL_NO_CALC_FMT_VERIF_FIRME, Types.VARCHAR, 1, true));
        map.put(COL_FL_NO_CALC_HASH_FILE, new ColumnDescriptor(COL_FL_NO_CALC_HASH_FILE, Types.VARCHAR, 1, true));
        map.put(COL_DS_URN_COMP_CALC, new ColumnDescriptor(COL_DS_URN_COMP_CALC, Types.VARCHAR, 254, true));
        map.put(COL_NM_FORMATO_CALC, new ColumnDescriptor(COL_NM_FORMATO_CALC, Types.VARCHAR, 100, true));
        map.put(COL_NI_SIZE_FILE_CALC, new ColumnDescriptor(COL_NI_SIZE_FILE_CALC, Types.DECIMAL, 22, true));
        map.put(COL_DS_HASH_FILE_CALC, new ColumnDescriptor(COL_DS_HASH_FILE_CALC, Types.VARCHAR, 254, true));
        map.put(COL_DS_ALGO_HASH_FILE_CALC, new ColumnDescriptor(COL_DS_ALGO_HASH_FILE_CALC, Types.VARCHAR, 254, true));
        map.put(COL_CD_ENCODING_HASH_FILE_CALC,
                new ColumnDescriptor(COL_CD_ENCODING_HASH_FILE_CALC, Types.VARCHAR, 20, true));
        map.put(COL_DS_HASH_FILE_256, new ColumnDescriptor(COL_DS_HASH_FILE_256, Types.VARCHAR, 254, true));
        map.put(COL_DS_ALGO_HASH_FILE_256, new ColumnDescriptor(COL_DS_ALGO_HASH_FILE_256, Types.VARCHAR, 30, true));
        map.put(COL_CD_ENCODING_HASH_FILE_256,
                new ColumnDescriptor(COL_CD_ENCODING_HASH_FILE_256, Types.VARCHAR, 20, true));
        map.put(COL_TI_ESITO_CONTR_FORMATO_FILE,
                new ColumnDescriptor(COL_TI_ESITO_CONTR_FORMATO_FILE, Types.VARCHAR, 20, true));
        map.put(COL_DS_MSG_ESITO_CONTR_FORMATO,
                new ColumnDescriptor(COL_DS_MSG_ESITO_CONTR_FORMATO, Types.VARCHAR, 1024, true));
        map.put(COL_DS_FORMATO_RAPPR_CALC, new ColumnDescriptor(COL_DS_FORMATO_RAPPR_CALC, Types.VARCHAR, 254, true));
        map.put(COL_DS_FORMATO_RAPPR_ESTESO_CALC,
                new ColumnDescriptor(COL_DS_FORMATO_RAPPR_ESTESO_CALC, Types.VARCHAR, 254, true));
        map.put(COL_DS_FORMATO_RAPPR_FILE_DOC,
                new ColumnDescriptor(COL_DS_FORMATO_RAPPR_FILE_DOC, Types.VARCHAR, 254, true));
        map.put(COL_FL_COMP_FIRMATO, new ColumnDescriptor(COL_FL_COMP_FIRMATO, Types.VARCHAR, 1, true));
        map.put(COL_TI_ESITO_VERIF_FIRME, new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRME, Types.VARCHAR, 20, true));
        map.put(COL_DS_MSG_ESITO_VERIF_FIRME,
                new ColumnDescriptor(COL_DS_MSG_ESITO_VERIF_FIRME, Types.VARCHAR, 254, true));
        map.put(COL_NM_MIMETYPE_FILE, new ColumnDescriptor(COL_NM_MIMETYPE_FILE, Types.VARCHAR, 100, true));
        map.put(COL_DS_URN_ORIGINALE, new ColumnDescriptor(COL_DS_URN_ORIGINALE, Types.VARCHAR, 254, true));
        map.put(COL_DS_URN_NORMALIZZATO, new ColumnDescriptor(COL_DS_URN_NORMALIZZATO, Types.VARCHAR, 254, true));
        map.put(COL_ID_ELENCO_VERS, new ColumnDescriptor(COL_ID_ELENCO_VERS, Types.DECIMAL, 22, true));
        map.put(COL_NM_ELENCO_VERS, new ColumnDescriptor(COL_NM_ELENCO_VERS, Types.VARCHAR, 100, true));
        map.put(COL_TI_STATO_ELENCO_VERS, new ColumnDescriptor(COL_TI_STATO_ELENCO_VERS, Types.VARCHAR, 40, true));
        map.put(COL_DT_CHIUS_ELENCO_VERS, new ColumnDescriptor(COL_DT_CHIUS_ELENCO_VERS, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_ESITO_VERIF_FIRME_DT_VERS,
                new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRME_DT_VERS, Types.VARCHAR, 20, true));
        map.put(COL_DS_ESITO_VERIF_FIRME_DT_VERS,
                new ColumnDescriptor(COL_DS_ESITO_VERIF_FIRME_DT_VERS, Types.VARCHAR, 254, true));
        map.put(COL_CD_REGISTRO_KEY_UNITA_DOC_RIF,
                new ColumnDescriptor(COL_CD_REGISTRO_KEY_UNITA_DOC_RIF, Types.VARCHAR, 100, true));
        map.put(COL_AA_KEY_UNITA_DOC_RIF, new ColumnDescriptor(COL_AA_KEY_UNITA_DOC_RIF, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_UNITA_DOC_RIF, new ColumnDescriptor(COL_CD_KEY_UNITA_DOC_RIF, Types.VARCHAR, 100, true));
        map.put(COL_TIPO_ARCHIVIAZIONE, new ColumnDescriptor(COL_TIPO_ARCHIVIAZIONE, Types.VARCHAR, 14, true));
        map.put(COL_CD_SUB_PARTITION, new ColumnDescriptor(COL_CD_SUB_PARTITION, Types.VARCHAR, 100, true));
        map.put(COL_ID_FILE_ORACLE, new ColumnDescriptor(COL_ID_FILE_ORACLE, Types.DECIMAL, 22, true));
        map.put(COL_NM_TENANT, new ColumnDescriptor(COL_NM_TENANT, Types.VARCHAR, 100, true));
        map.put(COL_NM_BUCKET, new ColumnDescriptor(COL_NM_BUCKET, Types.VARCHAR, 100, true));
        map.put(COL_CD_KEY_FILE, new ColumnDescriptor(COL_CD_KEY_FILE, Types.VARCHAR, 254, true));
        map.put(COL_DS_NOME_FILE_ARK, new ColumnDescriptor(COL_DS_NOME_FILE_ARK, Types.VARCHAR, 254, true));
        map.put(COL_TI_STATO_DT_VERS, new ColumnDescriptor(COL_TI_STATO_DT_VERS, Types.VARCHAR, 20, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
