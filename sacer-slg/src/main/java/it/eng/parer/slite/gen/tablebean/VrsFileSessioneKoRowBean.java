/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import it.eng.parer.entity.VrsDatiSessioneVersKo;
import it.eng.parer.entity.VrsFileSessioneKo;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import java.math.BigDecimal;

/**
 * RowBean per la tabella Vrs_File_Sessione
 *
 */
public class VrsFileSessioneKoRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */
    public static VrsFileSessioneKoTableDescriptor TABLE_DESCRIPTOR = new VrsFileSessioneKoTableDescriptor();

    public VrsFileSessioneKoRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdFileSessione() {
        return getBigDecimal("id_file_sessione");
    }

    public void setIdFileSessione(BigDecimal idFileSessione) {
        setObject("id_file_sessione", idFileSessione);
    }

    public BigDecimal getIdDatiSessioneVers() {
        return getBigDecimal("id_dati_sessione_vers");
    }

    public void setIdDatiSessioneVers(BigDecimal idDatiSessioneVers) {
        setObject("id_dati_sessione_vers", idDatiSessioneVers);
    }

    public BigDecimal getPgFileSessione() {
        return getBigDecimal("pg_file_sessione");
    }

    public void setPgFileSessione(BigDecimal pgFileSessione) {
        setObject("pg_file_sessione", pgFileSessione);
    }

    public String getNmFileSessione() {
        return getString("nm_file_sessione");
    }

    public void setNmFileSessione(String nmFileSessione) {
        setObject("nm_file_sessione", nmFileSessione);
    }

    public String getTiStatoFileSessione() {
        return getString("ti_stato_file_sessione");
    }

    public void setTiStatoFileSessione(String tiStatoFileSessione) {
        setObject("ti_stato_file_sessione", tiStatoFileSessione);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal idStrut) {
        setObject("id_strut", idStrut);
    }

    @Override
    public void entityToRowBean(Object obj) {
        VrsFileSessioneKo entity = (VrsFileSessioneKo) obj;

        this.setIdFileSessione(
                entity.getIdFileSessioneKo() == null ? null : BigDecimal.valueOf(entity.getIdFileSessioneKo()));

        if (entity.getVrsDatiSessioneVersKo() != null) {
            this.setIdDatiSessioneVers(new BigDecimal(entity.getVrsDatiSessioneVersKo().getIdDatiSessioneVersKo()));
        }

        this.setPgFileSessione(entity.getPgFileSessione());
        this.setNmFileSessione(entity.getNmFileSessione());
        this.setTiStatoFileSessione(entity.getTiStatoFileSessione());
        this.setIdStrut(entity.getIdStrut());
    }

    @Override
    public VrsFileSessioneKo rowBeanToEntity() {
        VrsFileSessioneKo entity = new VrsFileSessioneKo();
        if (this.getIdFileSessione() != null) {
            entity.setIdFileSessioneKo(this.getIdFileSessione().longValue());
        }
        if (this.getIdDatiSessioneVers() != null) {
            if (entity.getVrsDatiSessioneVersKo() == null) {
                entity.setVrsDatiSessioneVersKo(new VrsDatiSessioneVersKo());
            }
            entity.getVrsDatiSessioneVersKo().setIdDatiSessioneVersKo(this.getIdDatiSessioneVers().longValue());
        }
        entity.setPgFileSessione(this.getPgFileSessione());
        entity.setNmFileSessione(this.getNmFileSessione());
        entity.setTiStatoFileSessione(this.getTiStatoFileSessione());
        entity.setIdStrut(this.getIdStrut());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
