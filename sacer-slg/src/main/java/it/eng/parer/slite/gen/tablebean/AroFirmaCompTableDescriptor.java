package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_Firma_Comp
 *
 */
public class AroFirmaCompTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static final String SELECT = "Select * from Aro_Firma_Comp /**/";
    public static final String TABLE_NAME = "Aro_Firma_Comp";
    public static final String COL_ID_FIRMA_COMP = "id_firma_comp";
    public static final String COL_ID_COMP_DOC = "id_comp_doc";
    public static final String COL_CD_FIRMATARIO = "cd_firmatario";
    public static final String COL_NM_COGNOME_FIRMATARIO = "nm_cognome_firmatario";
    public static final String COL_NM_FIRMATARIO = "nm_firmatario";
    public static final String COL_TI_FIRMA = "ti_firma";
    public static final String COL_TI_ESITO_CONTR_CONFORME = "ti_esito_contr_conforme";
    public static final String COL_DS_MSG_ESITO_CONTR_CONFORME = "ds_msg_esito_contr_conforme";
    public static final String COL_DS_ALGO_FIRMA = "ds_algo_firma";
    public static final String COL_TI_FORMATO_FIRMA = "ti_formato_firma";
    public static final String COL_ID_CERTIF_FIRMATARIO = "id_certif_firmatario";
    public static final String COL_DT_FIRMA = "dt_firma";
    public static final String COL_TM_RIF_TEMP_USATO = "tm_rif_temp_usato";
    public static final String COL_TI_RIF_TEMP_USATO = "ti_rif_temp_usato";
    public static final String COL_TI_ESITO_VERIF_FIRMA = "ti_esito_verif_firma";
    public static final String COL_DS_MSG_ESITO_VERIF_FIRMA = "ds_msg_esito_verif_firma";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_ID_MARCA_COMP = "id_marca_comp";
    public static final String COL_PG_FIRMA = "pg_firma";
    public static final String COL_PG_BUSTA = "pg_busta";
    public static final String COL_DL_DN_FIRMATARIO = "dl_dn_firmatario";
    public static final String COL_ID_BUSTA_CRITTOG = "id_busta_crittog";
    public static final String COL_BL_FIRMA_BASE64 = "bl_firma_base64";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_FIRMA_COMP, new ColumnDescriptor(COL_ID_FIRMA_COMP, Types.DECIMAL, 22, true));
        map.put(COL_ID_COMP_DOC, new ColumnDescriptor(COL_ID_COMP_DOC, Types.DECIMAL, 22, false));
        map.put(COL_CD_FIRMATARIO, new ColumnDescriptor(COL_CD_FIRMATARIO, Types.VARCHAR, 100, false));
        map.put(COL_NM_COGNOME_FIRMATARIO, new ColumnDescriptor(COL_NM_COGNOME_FIRMATARIO, Types.VARCHAR, 100, false));
        map.put(COL_NM_FIRMATARIO, new ColumnDescriptor(COL_NM_FIRMATARIO, Types.VARCHAR, 100, false));
        map.put(COL_TI_FIRMA, new ColumnDescriptor(COL_TI_FIRMA, Types.VARCHAR, 20, false));
        map.put(COL_TI_ESITO_CONTR_CONFORME,
                new ColumnDescriptor(COL_TI_ESITO_CONTR_CONFORME, Types.VARCHAR, 30, false));
        map.put(COL_DS_MSG_ESITO_CONTR_CONFORME,
                new ColumnDescriptor(COL_DS_MSG_ESITO_CONTR_CONFORME, Types.VARCHAR, 1024, false));
        map.put(COL_DS_ALGO_FIRMA, new ColumnDescriptor(COL_DS_ALGO_FIRMA, Types.VARCHAR, 254, false));
        map.put(COL_TI_FORMATO_FIRMA, new ColumnDescriptor(COL_TI_FORMATO_FIRMA, Types.VARCHAR, 20, false));
        map.put(COL_ID_CERTIF_FIRMATARIO, new ColumnDescriptor(COL_ID_CERTIF_FIRMATARIO, Types.DECIMAL, 22, false));
        map.put(COL_DT_FIRMA, new ColumnDescriptor(COL_DT_FIRMA, Types.TIMESTAMP, 7, false));
        map.put(COL_TM_RIF_TEMP_USATO, new ColumnDescriptor(COL_TM_RIF_TEMP_USATO, Types.TIMESTAMP, 7, false));
        map.put(COL_TI_RIF_TEMP_USATO, new ColumnDescriptor(COL_TI_RIF_TEMP_USATO, Types.VARCHAR, 20, false));
        map.put(COL_TI_ESITO_VERIF_FIRMA, new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRMA, Types.VARCHAR, 20, false));
        map.put(COL_DS_MSG_ESITO_VERIF_FIRMA,
                new ColumnDescriptor(COL_DS_MSG_ESITO_VERIF_FIRMA, Types.VARCHAR, 254, false));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, false));
        map.put(COL_ID_MARCA_COMP, new ColumnDescriptor(COL_ID_MARCA_COMP, Types.DECIMAL, 22, false));
        map.put(COL_PG_FIRMA, new ColumnDescriptor(COL_PG_FIRMA, Types.DECIMAL, 22, false));
        map.put(COL_PG_BUSTA, new ColumnDescriptor(COL_PG_BUSTA, Types.DECIMAL, 22, false));
        map.put(COL_DL_DN_FIRMATARIO, new ColumnDescriptor(COL_DL_DN_FIRMATARIO, Types.VARCHAR, 1024, false));
        map.put(COL_ID_BUSTA_CRITTOG, new ColumnDescriptor(COL_ID_BUSTA_CRITTOG, Types.DECIMAL, 22, false));
        map.put(COL_BL_FIRMA_BASE64, new ColumnDescriptor(COL_BL_FIRMA_BASE64, Types.CLOB, 4000, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
