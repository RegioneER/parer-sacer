/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_V_Lis_Firma_Comp
 *
 */
public class AroVLisFirmaCompTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Monday, 6 July 2015 12:42" )
     */

    public static final String SELECT = "Select * from Aro_V_Lis_Firma_Comp /**/";
    public static final String TABLE_NAME = "Aro_V_Lis_Firma_Comp";
    public static final String COL_ID_COMP_DOC = "id_comp_doc";
    public static final String COL_ID_FIRMA_COMP = "id_firma_comp";
    public static final String COL_PG_FIRMA = "pg_firma";
    public static final String COL_CD_FIRMATARIO = "cd_firmatario";
    public static final String COL_NM_COGNOME_FIRMATARIO = "nm_cognome_firmatario";
    public static final String COL_NM_FIRMATARIO = "nm_firmatario";
    public static final String COL_TI_FORMATO_FIRMA = "ti_formato_firma";
    public static final String COL_TI_ESITO_CONTR_CONFORME = "ti_esito_contr_conforme";
    public static final String COL_TM_RIF_TEMP_USATO = "tm_rif_temp_usato";
    public static final String COL_TI_RIF_TEMP_USATO = "ti_rif_temp_usato";
    public static final String COL_TI_ESITO_VERIF_FIRMA = "ti_esito_verif_firma";
    public static final String COL_DS_MSG_ESITO_VERIF_FIRMA = "ds_msg_esito_verif_firma";
    public static final String COL_TI_ESITO_VERIF_FIRMA_DT_VERS = "ti_esito_verif_firma_dt_vers";
    public static final String COL_DS_MSG_VERIF_FIRMA_DT_VERS = "ds_msg_verif_firma_dt_vers";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_COMP_DOC, new ColumnDescriptor(COL_ID_COMP_DOC, Types.DECIMAL, 22, true));
        map.put(COL_ID_FIRMA_COMP, new ColumnDescriptor(COL_ID_FIRMA_COMP, Types.DECIMAL, 22, true));
        map.put(COL_PG_FIRMA, new ColumnDescriptor(COL_PG_FIRMA, Types.DECIMAL, 22, true));
        map.put(COL_CD_FIRMATARIO, new ColumnDescriptor(COL_CD_FIRMATARIO, Types.VARCHAR, 100, true));
        map.put(COL_NM_COGNOME_FIRMATARIO, new ColumnDescriptor(COL_NM_COGNOME_FIRMATARIO, Types.VARCHAR, 1024, true));
        map.put(COL_NM_FIRMATARIO, new ColumnDescriptor(COL_NM_FIRMATARIO, Types.VARCHAR, 100, true));
        map.put(COL_TI_FORMATO_FIRMA, new ColumnDescriptor(COL_TI_FORMATO_FIRMA, Types.VARCHAR, 20, true));
        map.put(COL_TI_ESITO_CONTR_CONFORME,
                new ColumnDescriptor(COL_TI_ESITO_CONTR_CONFORME, Types.VARCHAR, 30, true));
        map.put(COL_TM_RIF_TEMP_USATO, new ColumnDescriptor(COL_TM_RIF_TEMP_USATO, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_RIF_TEMP_USATO, new ColumnDescriptor(COL_TI_RIF_TEMP_USATO, Types.VARCHAR, 20, true));
        map.put(COL_TI_ESITO_VERIF_FIRMA, new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRMA, Types.VARCHAR, 20, true));
        map.put(COL_DS_MSG_ESITO_VERIF_FIRMA,
                new ColumnDescriptor(COL_DS_MSG_ESITO_VERIF_FIRMA, Types.VARCHAR, 254, true));
        map.put(COL_TI_ESITO_VERIF_FIRMA_DT_VERS,
                new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRMA_DT_VERS, Types.VARCHAR, 20, true));
        map.put(COL_DS_MSG_VERIF_FIRMA_DT_VERS,
                new ColumnDescriptor(COL_DS_MSG_VERIF_FIRMA_DT_VERS, Types.VARCHAR, 254, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
