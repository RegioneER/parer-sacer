package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Vol_Appart_Comp_Volume
 *
 */
public class VolAppartCompVolumeTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static final String SELECT = "Select * from Vol_Appart_Comp_Volume /**/";
    public static final String TABLE_NAME = "Vol_Appart_Comp_Volume";
    public static final String COL_ID_APPART_COMP_VOLUME = "id_appart_comp_volume";
    public static final String COL_ID_APPART_DOC_VOLUME = "id_appart_doc_volume";
    public static final String COL_ID_COMP_DOC = "id_comp_doc";
    public static final String COL_TI_ESITO_VERIF_FIRME_CHIUS = "ti_esito_verif_firme_chius";
    public static final String COL_DS_ESITO_VERIF_FIRME_CHIUS = "ds_esito_verif_firme_chius";
    public static final String COL_ID_STRUT = "id_strut";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_APPART_COMP_VOLUME, new ColumnDescriptor(COL_ID_APPART_COMP_VOLUME, Types.DECIMAL, 22, true));
        map.put(COL_ID_APPART_DOC_VOLUME, new ColumnDescriptor(COL_ID_APPART_DOC_VOLUME, Types.DECIMAL, 22, false));
        map.put(COL_ID_COMP_DOC, new ColumnDescriptor(COL_ID_COMP_DOC, Types.DECIMAL, 22, false));
        map.put(COL_TI_ESITO_VERIF_FIRME_CHIUS,
                new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRME_CHIUS, Types.VARCHAR, 20, false));
        map.put(COL_DS_ESITO_VERIF_FIRME_CHIUS,
                new ColumnDescriptor(COL_DS_ESITO_VERIF_FIRME_CHIUS, Types.VARCHAR, 254, false));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
