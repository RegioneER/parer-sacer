package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_V_Lis_Upd_Doc_Unita_Doc
 *
 */
public class AroVLisUpdDocUnitaDocTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Friday, 9 November 2018 15:03" )
     */

    public static final String SELECT = "Select * from Aro_V_Lis_Upd_Doc_Unita_Doc /**/";
    public static final String TABLE_NAME = "Aro_V_Lis_Upd_Doc_Unita_Doc";
    public static final String COL_ID_UPD_DOC_UNITA_DOC = "id_upd_doc_unita_doc";
    public static final String COL_ID_UPD_UNITA_DOC = "id_upd_unita_doc";
    public static final String COL_ID_DOC = "id_doc";
    public static final String COL_DS_ELEMENTO = "ds_elemento";
    public static final String COL_NM_TIPO_DOC = "nm_tipo_doc";
    public static final String COL_FL_UPD_PROFILO_DOC = "fl_upd_profilo_doc";
    public static final String COL_FL_UPD_DATI_SPEC = "fl_upd_dati_spec";
    public static final String COL_FL_UPD_DATI_SPEC_MIGRAZ = "fl_upd_dati_spec_migraz";
    public static final String COL_TI_DOC_ORD = "ti_doc_ord";
    public static final String COL_PG_DOC = "pg_doc";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_UPD_DOC_UNITA_DOC, new ColumnDescriptor(COL_ID_UPD_DOC_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_ID_UPD_UNITA_DOC, new ColumnDescriptor(COL_ID_UPD_UNITA_DOC, Types.DECIMAL, 22, true));
        map.put(COL_ID_DOC, new ColumnDescriptor(COL_ID_DOC, Types.DECIMAL, 22, true));
        map.put(COL_DS_ELEMENTO, new ColumnDescriptor(COL_DS_ELEMENTO, Types.VARCHAR, 61, true));
        map.put(COL_NM_TIPO_DOC, new ColumnDescriptor(COL_NM_TIPO_DOC, Types.VARCHAR, 100, true));
        map.put(COL_FL_UPD_PROFILO_DOC, new ColumnDescriptor(COL_FL_UPD_PROFILO_DOC, Types.VARCHAR, 1, true));
        map.put(COL_FL_UPD_DATI_SPEC, new ColumnDescriptor(COL_FL_UPD_DATI_SPEC, Types.VARCHAR, 1, true));
        map.put(COL_FL_UPD_DATI_SPEC_MIGRAZ, new ColumnDescriptor(COL_FL_UPD_DATI_SPEC_MIGRAZ, Types.VARCHAR, 1, true));
        map.put(COL_TI_DOC_ORD, new ColumnDescriptor(COL_TI_DOC_ORD, Types.DECIMAL, 22, true));
        map.put(COL_PG_DOC, new ColumnDescriptor(COL_PG_DOC, Types.DECIMAL, 22, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
