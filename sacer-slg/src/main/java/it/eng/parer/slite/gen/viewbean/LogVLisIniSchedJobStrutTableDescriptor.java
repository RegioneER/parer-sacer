package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Log_V_Lis_Ini_Sched_Job_Strut
 *
 */
public class LogVLisIniSchedJobStrutTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 27 November 2014 12:01" )
     */

    public static final String SELECT = "Select * from Log_V_Lis_Ini_Sched_Job_Strut /**/";
    public static final String TABLE_NAME = "Log_V_Lis_Ini_Sched_Job_Strut";
    public static final String COL_ID_LOG_JOB = "id_log_job";
    public static final String COL_NM_JOB = "nm_job";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_DT_REG_LOG_JOB_INI = "dt_reg_log_job_ini";
    public static final String COL_DT_REG_LOG_JOB_FINE_SUC = "dt_reg_log_job_fine_suc";
    public static final String COL_DT_REG_LOG_JOB_INI_SUC = "dt_reg_log_job_ini_suc";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_LOG_JOB, new ColumnDescriptor(COL_ID_LOG_JOB, Types.DECIMAL, 22, true));
        map.put(COL_NM_JOB, new ColumnDescriptor(COL_NM_JOB, Types.VARCHAR, 100, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
        map.put(COL_DT_REG_LOG_JOB_INI, new ColumnDescriptor(COL_DT_REG_LOG_JOB_INI, Types.TIMESTAMP, 7, true));
        map.put(COL_DT_REG_LOG_JOB_FINE_SUC,
                new ColumnDescriptor(COL_DT_REG_LOG_JOB_FINE_SUC, Types.TIMESTAMP, 7, true));
        map.put(COL_DT_REG_LOG_JOB_INI_SUC, new ColumnDescriptor(COL_DT_REG_LOG_JOB_INI_SUC, Types.TIMESTAMP, 7, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
