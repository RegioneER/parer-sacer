package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Dec_Filtro_Sel_Ud_Dato
 *
 */
public class DecFiltroSelUdDatoTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 13 January 2015 09:49" )
     */

    public static final String SELECT = "Select * from Dec_Filtro_Sel_Ud_Dato /**/";
    public static final String TABLE_NAME = "Dec_Filtro_Sel_Ud_Dato";
    public static final String COL_ID_FILTRO_SEL_UD_DATO = "id_filtro_sel_ud_dato";
    public static final String COL_ID_FILTRO_SEL_UD_ATTB = "id_filtro_sel_ud_attb";
    public static final String COL_ID_ATTRIB_DATI_SPEC = "id_attrib_dati_spec";
    public static final String COL_TI_ENTITA_SACER = "ti_entita_sacer";
    public static final String COL_NM_TIPO_UNITA_DOC = "nm_tipo_unita_doc";
    public static final String COL_NM_TIPO_DOC = "nm_tipo_doc";
    public static final String COL_DS_LISTA_VERSIONI_XSD = "ds_lista_versioni_xsd";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_FILTRO_SEL_UD_DATO, new ColumnDescriptor(COL_ID_FILTRO_SEL_UD_DATO, Types.DECIMAL, 22, true));
        map.put(COL_ID_FILTRO_SEL_UD_ATTB, new ColumnDescriptor(COL_ID_FILTRO_SEL_UD_ATTB, Types.DECIMAL, 22, false));
        map.put(COL_ID_ATTRIB_DATI_SPEC, new ColumnDescriptor(COL_ID_ATTRIB_DATI_SPEC, Types.DECIMAL, 22, false));
        map.put(COL_TI_ENTITA_SACER, new ColumnDescriptor(COL_TI_ENTITA_SACER, Types.VARCHAR, 20, false));
        map.put(COL_NM_TIPO_UNITA_DOC, new ColumnDescriptor(COL_NM_TIPO_UNITA_DOC, Types.VARCHAR, 100, false));
        map.put(COL_NM_TIPO_DOC, new ColumnDescriptor(COL_NM_TIPO_DOC, Types.VARCHAR, 100, false));
        map.put(COL_DS_LISTA_VERSIONI_XSD, new ColumnDescriptor(COL_DS_LISTA_VERSIONI_XSD, Types.VARCHAR, 254, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
