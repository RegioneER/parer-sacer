/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Ser_V_Vis_Serie_Ud
 *
 */
public class SerVVisSerieUdTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter",
     * comments = "This class was generated by OraTool", date = "Wednesday, 20 March 2019 14:53" )
     */

    public static final String SELECT = "Select * from Ser_V_Vis_Serie_Ud /**/";
    public static final String TABLE_NAME = "Ser_V_Vis_Serie_Ud";
    public static final String COL_ID_SERIE = "id_serie";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_CD_COMPOSITO_SERIE = "cd_composito_serie";
    public static final String COL_AA_SERIE = "aa_serie";
    public static final String COL_DS_SERIE = "ds_serie";
    public static final String COL_ID_TIPO_SERIE = "id_tipo_serie";
    public static final String COL_NM_STRUT = "nm_strut";
    public static final String COL_ID_ENTE = "id_ente";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_ID_AMBIENTE = "id_ambiente";
    public static final String COL_NM_AMBIENTE = "nm_ambiente";
    public static final String COL_NM_TIPO_SERIE = "nm_tipo_serie";
    public static final String COL_NI_ANNI_CONSERV = "ni_anni_conserv";
    public static final String COL_ID_VER_SERIE = "id_ver_serie";
    public static final String COL_CD_VER_SERIE = "cd_ver_serie";
    public static final String COL_DT_INIZIO_SEL_SERIE = "dt_inizio_sel_serie";
    public static final String COL_DT_FINE_SEL_SERIE = "dt_fine_sel_serie";
    public static final String COL_DT_CREAZIONE_UNITA_DOC_DA = "dt_creazione_unita_doc_da";
    public static final String COL_DT_CREAZIONE_UNITA_DOC_A = "dt_creazione_unita_doc_a";
    public static final String COL_DT_REG_UNITA_DOC_DA = "dt_reg_unita_doc_da";
    public static final String COL_DT_REG_UNITA_DOC_A = "dt_reg_unita_doc_a";
    public static final String COL_DS_LISTA_ANNI_SEL_SERIE = "ds_lista_anni_sel_serie";
    public static final String COL_ID_STATO_VER_SERIE_COR = "id_stato_ver_serie_cor";
    public static final String COL_TI_STATO_VER_SERIE = "ti_stato_ver_serie";
    public static final String COL_DT_REG_STATO_VER_SERIE = "dt_reg_stato_ver_serie";
    public static final String COL_DS_AZIONE = "ds_azione";
    public static final String COL_DS_NOTA_AZIONE = "ds_nota_azione";
    public static final String COL_ID_USER_IAM_STATO = "id_user_iam_stato";
    public static final String COL_NM_USERID_STATO = "nm_userid_stato";
    public static final String COL_ID_STATO_SERIE_COR = "id_stato_serie_cor";
    public static final String COL_TI_STATO_SERIE = "ti_stato_serie";
    public static final String COL_DT_REG_STATO_SERIE = "dt_reg_stato_serie";
    public static final String COL_DS_AZIONE_STATO_SERIE = "ds_azione_stato_serie";
    public static final String COL_DS_NOTA_AZIONE_STATO_SERIE = "ds_nota_azione_stato_serie";
    public static final String COL_ID_USER_IAM_STATO_SERIE = "id_user_iam_stato_serie";
    public static final String COL_NM_USERID_STATO_SERIE = "nm_userid_stato_serie";
    public static final String COL_ID_CONSIST_VER_SERIE = "id_consist_ver_serie";
    public static final String COL_CD_DOC_CONSIST_VER_SERIE = "cd_doc_consist_ver_serie";
    public static final String COL_DS_DOC_CONSIST_VER_SERIE = "ds_doc_consist_ver_serie";
    public static final String COL_NI_UNITA_DOC_ATTESE = "ni_unita_doc_attese";
    public static final String COL_TI_MOD_CONSIST_FIRST_LAST = "ti_mod_consist_first_last";
    public static final String COL_CD_FIRST_UNITA_DOC_ATTESA = "cd_first_unita_doc_attesa";
    public static final String COL_CD_LAST_UNITA_DOC_ATTESA = "cd_last_unita_doc_attesa";
    public static final String COL_ID_USER_IAM_CONSIST = "id_user_iam_consist";
    public static final String COL_NM_USERID_CONSIST = "nm_userid_consist";
    public static final String COL_FL_PRESENZA_LACUNE = "fl_presenza_lacune";
    public static final String COL_ID_CONTENUTO_CALC = "id_contenuto_calc";
    public static final String COL_TI_STATO_CONTENUTO_CALC = "ti_stato_contenuto_calc";
    public static final String COL_DT_STATO_CONTENUTO_CALC = "dt_stato_contenuto_calc";
    public static final String COL_FL_ERR_CONTENUTO_CALC = "fl_err_contenuto_calc";
    public static final String COL_NI_UNITA_DOC_CALC = "ni_unita_doc_calc";
    public static final String COL_CD_FIRST_UNITA_DOC_CALC = "cd_first_unita_doc_calc";
    public static final String COL_DT_FIRST_UNITA_DOC_CALC = "dt_first_unita_doc_calc";
    public static final String COL_CD_LAST_UNITA_DOC_CALC = "cd_last_unita_doc_calc";
    public static final String COL_DT_LAST_UNITA_DOC_CALC = "dt_last_unita_doc_calc";
    public static final String COL_ID_CONTENUTO_ACQ = "id_contenuto_acq";
    public static final String COL_TI_STATO_CONTENUTO_ACQ = "ti_stato_contenuto_acq";
    public static final String COL_DT_STATO_CONTENUTO_ACQ = "dt_stato_contenuto_acq";
    public static final String COL_FL_ERR_CONTENUTO_FILE = "fl_err_contenuto_file";
    public static final String COL_FL_ERR_CONTENUTO_ACQ = "fl_err_contenuto_acq";
    public static final String COL_NI_UNITA_DOC_ACQ = "ni_unita_doc_acq";
    public static final String COL_CD_FIRST_UNITA_DOC_ACQ = "cd_first_unita_doc_acq";
    public static final String COL_DT_FIRST_UNITA_DOC_ACQ = "dt_first_unita_doc_acq";
    public static final String COL_CD_LAST_UNITA_DOC_ACQ = "cd_last_unita_doc_acq";
    public static final String COL_DT_LAST_UNITA_DOC_ACQ = "dt_last_unita_doc_acq";
    public static final String COL_ID_FILE_INPUT_VER_SERIE = "id_file_input_ver_serie";
    public static final String COL_CD_DOC_FILE_INPUT_VER_SERIE = "cd_doc_file_input_ver_serie";
    public static final String COL_DS_DOC_FILE_INPUT_VER_SERIE = "ds_doc_file_input_ver_serie";
    public static final String COL_FL_FORNITO_ENTE = "fl_fornito_ente";
    public static final String COL_NM_USERID_FILE = "nm_userid_file";
    public static final String COL_ID_CONTENUTO_EFF = "id_contenuto_eff";
    public static final String COL_TI_STATO_CONTENUTO_EFF = "ti_stato_contenuto_eff";
    public static final String COL_DT_STATO_CONTENUTO_EFF = "dt_stato_contenuto_eff";
    public static final String COL_FL_ERR_CONTENUTO_EFF = "fl_err_contenuto_eff";
    public static final String COL_NI_UNITA_DOC_EFF = "ni_unita_doc_eff";
    public static final String COL_CD_FIRST_UNITA_DOC_EFF = "cd_first_unita_doc_eff";
    public static final String COL_DT_FIRST_UNITA_DOC_EFF = "dt_first_unita_doc_eff";
    public static final String COL_CD_LAST_UNITA_DOC_EFF = "cd_last_unita_doc_eff";
    public static final String COL_DT_LAST_UNITA_DOC_EFF = "dt_last_unita_doc_eff";
    public static final String COL_DS_HASH_IX_AIP = "ds_hash_ix_aip";
    public static final String COL_DS_ALGO_HASH_IX_AIP = "ds_algo_hash_ix_aip";
    public static final String COL_CD_ENCODING_HASH_IX_AIP = "cd_encoding_hash_ix_aip";
    public static final String COL_CD_VER_XSD_AIP = "cd_ver_xsd_aip";
    public static final String COL_DT_CREAZIONE_IX_AIP = "dt_creazione_ix_aip";
    public static final String COL_BL_FILE_IX_AIP = "bl_file_ix_aip";
    public static final String COL_DS_FMT_IX_AIP = "ds_fmt_ix_aip";
    public static final String COL_ID_ENTE_CONSERV = "id_ente_conserv";
    public static final String COL_DS_MSG_SERIE_DA_RIGENERA = "ds_msg_serie_da_rigenera";
    public static final String COL_FL_UPD_ANNUL_UNITA_DOC = "fl_upd_annul_unita_doc";
    public static final String COL_FL_UPD_MODIF_UNITA_DOC = "fl_upd_modif_unita_doc";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
	map.put(COL_ID_SERIE, new ColumnDescriptor(COL_ID_SERIE, Types.DECIMAL, 22, true));
	map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
	map.put(COL_CD_COMPOSITO_SERIE,
		new ColumnDescriptor(COL_CD_COMPOSITO_SERIE, Types.VARCHAR, 100, true));
	map.put(COL_AA_SERIE, new ColumnDescriptor(COL_AA_SERIE, Types.DECIMAL, 22, true));
	map.put(COL_DS_SERIE, new ColumnDescriptor(COL_DS_SERIE, Types.VARCHAR, 254, true));
	map.put(COL_ID_TIPO_SERIE,
		new ColumnDescriptor(COL_ID_TIPO_SERIE, Types.DECIMAL, 22, true));
	map.put(COL_NM_STRUT, new ColumnDescriptor(COL_NM_STRUT, Types.VARCHAR, 100, true));
	map.put(COL_ID_ENTE, new ColumnDescriptor(COL_ID_ENTE, Types.DECIMAL, 22, true));
	map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, true));
	map.put(COL_ID_AMBIENTE, new ColumnDescriptor(COL_ID_AMBIENTE, Types.DECIMAL, 22, true));
	map.put(COL_NM_AMBIENTE, new ColumnDescriptor(COL_NM_AMBIENTE, Types.VARCHAR, 100, true));
	map.put(COL_NM_TIPO_SERIE,
		new ColumnDescriptor(COL_NM_TIPO_SERIE, Types.VARCHAR, 100, true));
	map.put(COL_NI_ANNI_CONSERV,
		new ColumnDescriptor(COL_NI_ANNI_CONSERV, Types.DECIMAL, 22, true));
	map.put(COL_ID_VER_SERIE, new ColumnDescriptor(COL_ID_VER_SERIE, Types.DECIMAL, 22, true));
	map.put(COL_CD_VER_SERIE, new ColumnDescriptor(COL_CD_VER_SERIE, Types.VARCHAR, 100, true));
	map.put(COL_DT_INIZIO_SEL_SERIE,
		new ColumnDescriptor(COL_DT_INIZIO_SEL_SERIE, Types.TIMESTAMP, 7, true));
	map.put(COL_DT_FINE_SEL_SERIE,
		new ColumnDescriptor(COL_DT_FINE_SEL_SERIE, Types.TIMESTAMP, 7, true));
	map.put(COL_DT_CREAZIONE_UNITA_DOC_DA,
		new ColumnDescriptor(COL_DT_CREAZIONE_UNITA_DOC_DA, Types.TIMESTAMP, 7, true));
	map.put(COL_DT_CREAZIONE_UNITA_DOC_A,
		new ColumnDescriptor(COL_DT_CREAZIONE_UNITA_DOC_A, Types.TIMESTAMP, 7, true));
	map.put(COL_DT_REG_UNITA_DOC_DA,
		new ColumnDescriptor(COL_DT_REG_UNITA_DOC_DA, Types.TIMESTAMP, 7, true));
	map.put(COL_DT_REG_UNITA_DOC_A,
		new ColumnDescriptor(COL_DT_REG_UNITA_DOC_A, Types.TIMESTAMP, 7, true));
	map.put(COL_DS_LISTA_ANNI_SEL_SERIE,
		new ColumnDescriptor(COL_DS_LISTA_ANNI_SEL_SERIE, Types.VARCHAR, 254, true));
	map.put(COL_ID_STATO_VER_SERIE_COR,
		new ColumnDescriptor(COL_ID_STATO_VER_SERIE_COR, Types.DECIMAL, 22, true));
	map.put(COL_TI_STATO_VER_SERIE,
		new ColumnDescriptor(COL_TI_STATO_VER_SERIE, Types.VARCHAR, 20, true));
	map.put(COL_DT_REG_STATO_VER_SERIE,
		new ColumnDescriptor(COL_DT_REG_STATO_VER_SERIE, Types.TIMESTAMP, 7, true));
	map.put(COL_DS_AZIONE, new ColumnDescriptor(COL_DS_AZIONE, Types.VARCHAR, 254, true));
	map.put(COL_DS_NOTA_AZIONE,
		new ColumnDescriptor(COL_DS_NOTA_AZIONE, Types.VARCHAR, 1024, true));
	map.put(COL_ID_USER_IAM_STATO,
		new ColumnDescriptor(COL_ID_USER_IAM_STATO, Types.DECIMAL, 22, true));
	map.put(COL_NM_USERID_STATO,
		new ColumnDescriptor(COL_NM_USERID_STATO, Types.VARCHAR, 100, true));
	map.put(COL_ID_STATO_SERIE_COR,
		new ColumnDescriptor(COL_ID_STATO_SERIE_COR, Types.DECIMAL, 22, true));
	map.put(COL_TI_STATO_SERIE,
		new ColumnDescriptor(COL_TI_STATO_SERIE, Types.VARCHAR, 30, true));
	map.put(COL_DT_REG_STATO_SERIE,
		new ColumnDescriptor(COL_DT_REG_STATO_SERIE, Types.TIMESTAMP, 7, true));
	map.put(COL_DS_AZIONE_STATO_SERIE,
		new ColumnDescriptor(COL_DS_AZIONE_STATO_SERIE, Types.VARCHAR, 254, true));
	map.put(COL_DS_NOTA_AZIONE_STATO_SERIE,
		new ColumnDescriptor(COL_DS_NOTA_AZIONE_STATO_SERIE, Types.VARCHAR, 1024, true));
	map.put(COL_ID_USER_IAM_STATO_SERIE,
		new ColumnDescriptor(COL_ID_USER_IAM_STATO_SERIE, Types.DECIMAL, 22, true));
	map.put(COL_NM_USERID_STATO_SERIE,
		new ColumnDescriptor(COL_NM_USERID_STATO_SERIE, Types.VARCHAR, 100, true));
	map.put(COL_ID_CONSIST_VER_SERIE,
		new ColumnDescriptor(COL_ID_CONSIST_VER_SERIE, Types.DECIMAL, 22, true));
	map.put(COL_CD_DOC_CONSIST_VER_SERIE,
		new ColumnDescriptor(COL_CD_DOC_CONSIST_VER_SERIE, Types.VARCHAR, 100, true));
	map.put(COL_DS_DOC_CONSIST_VER_SERIE,
		new ColumnDescriptor(COL_DS_DOC_CONSIST_VER_SERIE, Types.VARCHAR, 254, true));
	map.put(COL_NI_UNITA_DOC_ATTESE,
		new ColumnDescriptor(COL_NI_UNITA_DOC_ATTESE, Types.DECIMAL, 22, true));
	map.put(COL_TI_MOD_CONSIST_FIRST_LAST,
		new ColumnDescriptor(COL_TI_MOD_CONSIST_FIRST_LAST, Types.VARCHAR, 20, true));
	map.put(COL_CD_FIRST_UNITA_DOC_ATTESA,
		new ColumnDescriptor(COL_CD_FIRST_UNITA_DOC_ATTESA, Types.VARCHAR, 254, true));
	map.put(COL_CD_LAST_UNITA_DOC_ATTESA,
		new ColumnDescriptor(COL_CD_LAST_UNITA_DOC_ATTESA, Types.VARCHAR, 254, true));
	map.put(COL_ID_USER_IAM_CONSIST,
		new ColumnDescriptor(COL_ID_USER_IAM_CONSIST, Types.DECIMAL, 22, true));
	map.put(COL_NM_USERID_CONSIST,
		new ColumnDescriptor(COL_NM_USERID_CONSIST, Types.VARCHAR, 100, true));
	map.put(COL_FL_PRESENZA_LACUNE,
		new ColumnDescriptor(COL_FL_PRESENZA_LACUNE, Types.VARCHAR, 1, true));
	map.put(COL_ID_CONTENUTO_CALC,
		new ColumnDescriptor(COL_ID_CONTENUTO_CALC, Types.DECIMAL, 22, true));
	map.put(COL_TI_STATO_CONTENUTO_CALC,
		new ColumnDescriptor(COL_TI_STATO_CONTENUTO_CALC, Types.VARCHAR, 30, true));
	map.put(COL_DT_STATO_CONTENUTO_CALC,
		new ColumnDescriptor(COL_DT_STATO_CONTENUTO_CALC, Types.TIMESTAMP, 7, true));
	map.put(COL_FL_ERR_CONTENUTO_CALC,
		new ColumnDescriptor(COL_FL_ERR_CONTENUTO_CALC, Types.VARCHAR, 1, true));
	map.put(COL_NI_UNITA_DOC_CALC,
		new ColumnDescriptor(COL_NI_UNITA_DOC_CALC, Types.DECIMAL, 22, true));
	map.put(COL_CD_FIRST_UNITA_DOC_CALC,
		new ColumnDescriptor(COL_CD_FIRST_UNITA_DOC_CALC, Types.VARCHAR, 254, true));
	map.put(COL_DT_FIRST_UNITA_DOC_CALC,
		new ColumnDescriptor(COL_DT_FIRST_UNITA_DOC_CALC, Types.TIMESTAMP, 7, true));
	map.put(COL_CD_LAST_UNITA_DOC_CALC,
		new ColumnDescriptor(COL_CD_LAST_UNITA_DOC_CALC, Types.VARCHAR, 254, true));
	map.put(COL_DT_LAST_UNITA_DOC_CALC,
		new ColumnDescriptor(COL_DT_LAST_UNITA_DOC_CALC, Types.TIMESTAMP, 7, true));
	map.put(COL_ID_CONTENUTO_ACQ,
		new ColumnDescriptor(COL_ID_CONTENUTO_ACQ, Types.DECIMAL, 22, true));
	map.put(COL_TI_STATO_CONTENUTO_ACQ,
		new ColumnDescriptor(COL_TI_STATO_CONTENUTO_ACQ, Types.VARCHAR, 30, true));
	map.put(COL_DT_STATO_CONTENUTO_ACQ,
		new ColumnDescriptor(COL_DT_STATO_CONTENUTO_ACQ, Types.TIMESTAMP, 7, true));
	map.put(COL_FL_ERR_CONTENUTO_FILE,
		new ColumnDescriptor(COL_FL_ERR_CONTENUTO_FILE, Types.VARCHAR, 1, true));
	map.put(COL_FL_ERR_CONTENUTO_ACQ,
		new ColumnDescriptor(COL_FL_ERR_CONTENUTO_ACQ, Types.VARCHAR, 1, true));
	map.put(COL_NI_UNITA_DOC_ACQ,
		new ColumnDescriptor(COL_NI_UNITA_DOC_ACQ, Types.DECIMAL, 22, true));
	map.put(COL_CD_FIRST_UNITA_DOC_ACQ,
		new ColumnDescriptor(COL_CD_FIRST_UNITA_DOC_ACQ, Types.VARCHAR, 254, true));
	map.put(COL_DT_FIRST_UNITA_DOC_ACQ,
		new ColumnDescriptor(COL_DT_FIRST_UNITA_DOC_ACQ, Types.TIMESTAMP, 7, true));
	map.put(COL_CD_LAST_UNITA_DOC_ACQ,
		new ColumnDescriptor(COL_CD_LAST_UNITA_DOC_ACQ, Types.VARCHAR, 254, true));
	map.put(COL_DT_LAST_UNITA_DOC_ACQ,
		new ColumnDescriptor(COL_DT_LAST_UNITA_DOC_ACQ, Types.TIMESTAMP, 7, true));
	map.put(COL_ID_FILE_INPUT_VER_SERIE,
		new ColumnDescriptor(COL_ID_FILE_INPUT_VER_SERIE, Types.DECIMAL, 22, true));
	map.put(COL_CD_DOC_FILE_INPUT_VER_SERIE,
		new ColumnDescriptor(COL_CD_DOC_FILE_INPUT_VER_SERIE, Types.VARCHAR, 100, true));
	map.put(COL_DS_DOC_FILE_INPUT_VER_SERIE,
		new ColumnDescriptor(COL_DS_DOC_FILE_INPUT_VER_SERIE, Types.VARCHAR, 254, true));
	map.put(COL_FL_FORNITO_ENTE,
		new ColumnDescriptor(COL_FL_FORNITO_ENTE, Types.VARCHAR, 1, true));
	map.put(COL_NM_USERID_FILE,
		new ColumnDescriptor(COL_NM_USERID_FILE, Types.VARCHAR, 100, true));
	map.put(COL_ID_CONTENUTO_EFF,
		new ColumnDescriptor(COL_ID_CONTENUTO_EFF, Types.DECIMAL, 22, true));
	map.put(COL_TI_STATO_CONTENUTO_EFF,
		new ColumnDescriptor(COL_TI_STATO_CONTENUTO_EFF, Types.VARCHAR, 30, true));
	map.put(COL_DT_STATO_CONTENUTO_EFF,
		new ColumnDescriptor(COL_DT_STATO_CONTENUTO_EFF, Types.TIMESTAMP, 7, true));
	map.put(COL_FL_ERR_CONTENUTO_EFF,
		new ColumnDescriptor(COL_FL_ERR_CONTENUTO_EFF, Types.VARCHAR, 1, true));
	map.put(COL_NI_UNITA_DOC_EFF,
		new ColumnDescriptor(COL_NI_UNITA_DOC_EFF, Types.DECIMAL, 22, true));
	map.put(COL_CD_FIRST_UNITA_DOC_EFF,
		new ColumnDescriptor(COL_CD_FIRST_UNITA_DOC_EFF, Types.VARCHAR, 254, true));
	map.put(COL_DT_FIRST_UNITA_DOC_EFF,
		new ColumnDescriptor(COL_DT_FIRST_UNITA_DOC_EFF, Types.TIMESTAMP, 7, true));
	map.put(COL_CD_LAST_UNITA_DOC_EFF,
		new ColumnDescriptor(COL_CD_LAST_UNITA_DOC_EFF, Types.VARCHAR, 254, true));
	map.put(COL_DT_LAST_UNITA_DOC_EFF,
		new ColumnDescriptor(COL_DT_LAST_UNITA_DOC_EFF, Types.TIMESTAMP, 7, true));
	map.put(COL_DS_HASH_IX_AIP,
		new ColumnDescriptor(COL_DS_HASH_IX_AIP, Types.VARCHAR, 50, true));
	map.put(COL_DS_ALGO_HASH_IX_AIP,
		new ColumnDescriptor(COL_DS_ALGO_HASH_IX_AIP, Types.VARCHAR, 254, true));
	map.put(COL_CD_ENCODING_HASH_IX_AIP,
		new ColumnDescriptor(COL_CD_ENCODING_HASH_IX_AIP, Types.VARCHAR, 20, true));
	map.put(COL_CD_VER_XSD_AIP,
		new ColumnDescriptor(COL_CD_VER_XSD_AIP, Types.VARCHAR, 100, true));
	map.put(COL_DT_CREAZIONE_IX_AIP,
		new ColumnDescriptor(COL_DT_CREAZIONE_IX_AIP, Types.TIMESTAMP, 7, true));
	map.put(COL_BL_FILE_IX_AIP,
		new ColumnDescriptor(COL_BL_FILE_IX_AIP, Types.BLOB, 4000, true));
	map.put(COL_DS_FMT_IX_AIP,
		new ColumnDescriptor(COL_DS_FMT_IX_AIP, Types.VARCHAR, 10, true));
	map.put(COL_ID_ENTE_CONSERV,
		new ColumnDescriptor(COL_ID_ENTE_CONSERV, Types.DECIMAL, 22, true));
	map.put(COL_DS_MSG_SERIE_DA_RIGENERA,
		new ColumnDescriptor(COL_DS_MSG_SERIE_DA_RIGENERA, Types.VARCHAR, 146, true));
	map.put(COL_FL_UPD_ANNUL_UNITA_DOC,
		new ColumnDescriptor(COL_FL_UPD_ANNUL_UNITA_DOC, Types.VARCHAR, 1, true));
	map.put(COL_FL_UPD_MODIF_UNITA_DOC,
		new ColumnDescriptor(COL_FL_UPD_MODIF_UNITA_DOC, Types.VARCHAR, 1, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
	return map;
    }

    public String getTableName() {
	return TABLE_NAME;
    }

    public String getStatement() {
	return SELECT;
    }

}
