package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Dec_V_Lis_Val_Voce_Titol
 *
 */
public class DecVLisValVoceTitolTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Monday, 19 January 2015 16:04" )
     */

    public static final String SELECT = "Select * from Dec_V_Lis_Val_Voce_Titol /**/";
    public static final String TABLE_NAME = "Dec_V_Lis_Val_Voce_Titol";
    public static final String COL_ID_VAL_VOCE_TITOL = "id_val_voce_titol";
    public static final String COL_ID_VOCE_TITOL = "id_voce_titol";
    public static final String COL_DT_INI_VAL = "dt_ini_val";
    public static final String COL_DT_FIN_VAL = "dt_fin_val";
    public static final String COL_DS_VOCE_TITOL = "ds_voce_titol";
    public static final String COL_FL_USO_CLASSIF = "fl_uso_classif";
    public static final String COL_NI_ANNI_CONSERV = "ni_anni_conserv";
    public static final String COL_DL_NOTE = "dl_note";
    public static final String COL_CD_REGISTRO_DOC_INVIO_INI = "cd_registro_doc_invio_ini";
    public static final String COL_AA_DOC_INVIO_INI = "aa_doc_invio_ini";
    public static final String COL_CD_DOC_INVIO_INI = "cd_doc_invio_ini";
    public static final String COL_DT_DOC_INVIO_INI = "dt_doc_invio_ini";
    public static final String COL_TI_OPER_TITOL_INI = "ti_oper_titol_ini";
    public static final String COL_TI_OPER_VOCE_TITOL_INI = "ti_oper_voce_titol_ini";
    public static final String COL_DT_VAL_OPER_VOCE_TITOL_INI = "dt_val_oper_voce_titol_ini";
    public static final String COL_CD_REGISTRO_DOC_INVIO_FIN = "cd_registro_doc_invio_fin";
    public static final String COL_AA_DOC_INVIO_FIN = "aa_doc_invio_fin";
    public static final String COL_CD_DOC_INVIO_FIN = "cd_doc_invio_fin";
    public static final String COL_DT_DOC_INVIO_FIN = "dt_doc_invio_fin";
    public static final String COL_TI_OPER_TITOL_FIN = "ti_oper_titol_fin";
    public static final String COL_TI_OPER_VOCE_TITOL_FIN = "ti_oper_voce_titol_fin";
    public static final String COL_DT_VAL_OPER_VOCE_TITOL_FIN = "dt_val_oper_voce_titol_fin";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_VAL_VOCE_TITOL, new ColumnDescriptor(COL_ID_VAL_VOCE_TITOL, Types.DECIMAL, 22, true));
        map.put(COL_ID_VOCE_TITOL, new ColumnDescriptor(COL_ID_VOCE_TITOL, Types.DECIMAL, 22, true));
        map.put(COL_DT_INI_VAL, new ColumnDescriptor(COL_DT_INI_VAL, Types.TIMESTAMP, 7, true));
        map.put(COL_DT_FIN_VAL, new ColumnDescriptor(COL_DT_FIN_VAL, Types.TIMESTAMP, 7, true));
        map.put(COL_DS_VOCE_TITOL, new ColumnDescriptor(COL_DS_VOCE_TITOL, Types.VARCHAR, 1024, true));
        map.put(COL_FL_USO_CLASSIF, new ColumnDescriptor(COL_FL_USO_CLASSIF, Types.VARCHAR, 1, true));
        map.put(COL_NI_ANNI_CONSERV, new ColumnDescriptor(COL_NI_ANNI_CONSERV, Types.DECIMAL, 22, true));
        map.put(COL_DL_NOTE, new ColumnDescriptor(COL_DL_NOTE, Types.VARCHAR, 1024, true));
        map.put(COL_CD_REGISTRO_DOC_INVIO_INI,
                new ColumnDescriptor(COL_CD_REGISTRO_DOC_INVIO_INI, Types.VARCHAR, 100, true));
        map.put(COL_AA_DOC_INVIO_INI, new ColumnDescriptor(COL_AA_DOC_INVIO_INI, Types.DECIMAL, 22, true));
        map.put(COL_CD_DOC_INVIO_INI, new ColumnDescriptor(COL_CD_DOC_INVIO_INI, Types.VARCHAR, 100, true));
        map.put(COL_DT_DOC_INVIO_INI, new ColumnDescriptor(COL_DT_DOC_INVIO_INI, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_OPER_TITOL_INI, new ColumnDescriptor(COL_TI_OPER_TITOL_INI, Types.VARCHAR, 20, true));
        map.put(COL_TI_OPER_VOCE_TITOL_INI, new ColumnDescriptor(COL_TI_OPER_VOCE_TITOL_INI, Types.VARCHAR, 20, true));
        map.put(COL_DT_VAL_OPER_VOCE_TITOL_INI,
                new ColumnDescriptor(COL_DT_VAL_OPER_VOCE_TITOL_INI, Types.TIMESTAMP, 7, true));
        map.put(COL_CD_REGISTRO_DOC_INVIO_FIN,
                new ColumnDescriptor(COL_CD_REGISTRO_DOC_INVIO_FIN, Types.VARCHAR, 100, true));
        map.put(COL_AA_DOC_INVIO_FIN, new ColumnDescriptor(COL_AA_DOC_INVIO_FIN, Types.DECIMAL, 22, true));
        map.put(COL_CD_DOC_INVIO_FIN, new ColumnDescriptor(COL_CD_DOC_INVIO_FIN, Types.VARCHAR, 100, true));
        map.put(COL_DT_DOC_INVIO_FIN, new ColumnDescriptor(COL_DT_DOC_INVIO_FIN, Types.TIMESTAMP, 7, true));
        map.put(COL_TI_OPER_TITOL_FIN, new ColumnDescriptor(COL_TI_OPER_TITOL_FIN, Types.VARCHAR, 20, true));
        map.put(COL_TI_OPER_VOCE_TITOL_FIN, new ColumnDescriptor(COL_TI_OPER_VOCE_TITOL_FIN, Types.VARCHAR, 20, true));
        map.put(COL_DT_VAL_OPER_VOCE_TITOL_FIN,
                new ColumnDescriptor(COL_DT_VAL_OPER_VOCE_TITOL_FIN, Types.TIMESTAMP, 7, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
