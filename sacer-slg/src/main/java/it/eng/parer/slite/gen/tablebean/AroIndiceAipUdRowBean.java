package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.AroIndiceAipUd;
import it.eng.parer.entity.AroUnitaDoc;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Aro_Indice_Aip_Ud
 *
 */
public class AroIndiceAipUdRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 20 August 2014 11:07" )
     */

    public static AroIndiceAipUdTableDescriptor TABLE_DESCRIPTOR = new AroIndiceAipUdTableDescriptor();

    public AroIndiceAipUdRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdIndiceAip() {
        return getBigDecimal("id_indice_aip");
    }

    public void setIdIndiceAip(BigDecimal id_indice_aip) {
        setObject("id_indice_aip", id_indice_aip);
    }

    public BigDecimal getIdUnitaDoc() {
        return getBigDecimal("id_unita_doc");
    }

    public void setIdUnitaDoc(BigDecimal id_unita_doc) {
        setObject("id_unita_doc", id_unita_doc);
    }

    public String getTiFormatoIndiceAip() {
        return getString("ti_formato_indice_aip");
    }

    public void setTiFormatoIndiceAip(String ti_formato_indice_aip) {
        setObject("ti_formato_indice_aip", ti_formato_indice_aip);
    }

    public BigDecimal getIdVerIndiceAipLast() {
        return getBigDecimal("id_ver_indice_aip_last");
    }

    public void setIdVerIndiceAipLast(BigDecimal id_ver_indice_aip_last) {
        setObject("id_ver_indice_aip_last", id_ver_indice_aip_last);
    }

    @Override
    public void entityToRowBean(Object obj) {
        AroIndiceAipUd entity = (AroIndiceAipUd) obj;
        AbstractRecord ar;
        this.setIdIndiceAip(new BigDecimal(entity.getIdIndiceAip()));
        if (entity._persistence_get_aroUnitaDoc_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_aroUnitaDoc_vh()).getRow()) != null) {
                this.setIdUnitaDoc(new BigDecimal((Long) ar.get("ARO_INDICE_AIP_UD.ID_UNITA_DOC")));
            }
        } else {
            if (entity.getAroUnitaDoc() != null) {
                this.setIdUnitaDoc(new BigDecimal(entity.getAroUnitaDoc().getIdUnitaDoc()));
            }
        }
        this.setTiFormatoIndiceAip(entity.getTiFormatoIndiceAip());
        this.setIdVerIndiceAipLast(entity.getIdVerIndiceAipLast());
    }

    @Override
    public AroIndiceAipUd rowBeanToEntity() {
        AroIndiceAipUd entity = new AroIndiceAipUd();
        if (this.getIdIndiceAip() != null) {
            entity.setIdIndiceAip(this.getIdIndiceAip().longValue());
        }
        if (this.getIdUnitaDoc() != null) {
            if (entity.getAroUnitaDoc() == null) {
                entity.setAroUnitaDoc(new AroUnitaDoc());
            }
            entity.getAroUnitaDoc().setIdUnitaDoc(this.getIdUnitaDoc().longValue());
        }
        entity.setTiFormatoIndiceAip(this.getTiFormatoIndiceAip());
        entity.setIdVerIndiceAipLast(this.getIdVerIndiceAipLast());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
