package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Dec_Tipo_Rappr_Comp
 *
 */
public class DecTipoRapprCompTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Friday, 13 June 2014 12:21" )
     */

    public static final String SELECT = "Select * from Dec_Tipo_Rappr_Comp /**/";
    public static final String TABLE_NAME = "Dec_Tipo_Rappr_Comp";
    public static final String COL_ID_TIPO_RAPPR_COMP = "id_tipo_rappr_comp";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_NM_TIPO_RAPPR_COMP = "nm_tipo_rappr_comp";
    public static final String COL_DS_TIPO_RAPPR_COMP = "ds_tipo_rappr_comp";
    public static final String COL_DT_ISTITUZ = "dt_istituz";
    public static final String COL_DT_SOPPRES = "dt_soppres";
    public static final String COL_ID_FORMATO_CONTENUTO = "id_formato_contenuto";
    public static final String COL_ID_FORMATO_CONVERTIT = "id_formato_convertit";
    public static final String COL_TI_ALGO_RAPPR = "ti_algo_rappr";
    public static final String COL_ID_FORMATO_OUTPUT_RAPPR = "id_formato_output_rappr";
    public static final String COL_TI_OUTPUT_RAPPR = "ti_output_rappr";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_TIPO_RAPPR_COMP, new ColumnDescriptor(COL_ID_TIPO_RAPPR_COMP, Types.DECIMAL, 22, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, false));
        map.put(COL_NM_TIPO_RAPPR_COMP, new ColumnDescriptor(COL_NM_TIPO_RAPPR_COMP, Types.VARCHAR, 100, false));
        map.put(COL_DS_TIPO_RAPPR_COMP, new ColumnDescriptor(COL_DS_TIPO_RAPPR_COMP, Types.VARCHAR, 254, false));
        map.put(COL_DT_ISTITUZ, new ColumnDescriptor(COL_DT_ISTITUZ, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_SOPPRES, new ColumnDescriptor(COL_DT_SOPPRES, Types.TIMESTAMP, 7, false));
        map.put(COL_ID_FORMATO_CONTENUTO, new ColumnDescriptor(COL_ID_FORMATO_CONTENUTO, Types.DECIMAL, 22, false));
        map.put(COL_ID_FORMATO_CONVERTIT, new ColumnDescriptor(COL_ID_FORMATO_CONVERTIT, Types.DECIMAL, 22, false));
        map.put(COL_TI_ALGO_RAPPR, new ColumnDescriptor(COL_TI_ALGO_RAPPR, Types.VARCHAR, 20, false));
        map.put(COL_ID_FORMATO_OUTPUT_RAPPR,
                new ColumnDescriptor(COL_ID_FORMATO_OUTPUT_RAPPR, Types.DECIMAL, 22, false));
        map.put(COL_TI_OUTPUT_RAPPR, new ColumnDescriptor(COL_TI_OUTPUT_RAPPR, Types.VARCHAR, 20, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
