package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.VolContrVerifFirmaVolume;
import it.eng.parer.entity.FirCrl;
import it.eng.parer.entity.VolVerifFirmaVolume;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Vol_Contr_Verif_Firma_Volume
 *
 */
public class VolContrVerifFirmaVolumeRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static VolContrVerifFirmaVolumeTableDescriptor TABLE_DESCRIPTOR = new VolContrVerifFirmaVolumeTableDescriptor();

    public VolContrVerifFirmaVolumeRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdContrVerifFirmaVolume() {
        return getBigDecimal("id_contr_verif_firma_volume");
    }

    public void setIdContrVerifFirmaVolume(BigDecimal id_contr_verif_firma_volume) {
        setObject("id_contr_verif_firma_volume", id_contr_verif_firma_volume);
    }

    public BigDecimal getIdVerifFirmaVolume() {
        return getBigDecimal("id_verif_firma_volume");
    }

    public void setIdVerifFirmaVolume(BigDecimal id_verif_firma_volume) {
        setObject("id_verif_firma_volume", id_verif_firma_volume);
    }

    public String getTiContr() {
        return getString("ti_contr");
    }

    public void setTiContr(String ti_contr) {
        setObject("ti_contr", ti_contr);
    }

    public String getTiEsitoContrVerif() {
        return getString("ti_esito_contr_verif");
    }

    public void setTiEsitoContrVerif(String ti_esito_contr_verif) {
        setObject("ti_esito_contr_verif", ti_esito_contr_verif);
    }

    public String getDsMsgContrVerif() {
        return getString("ds_msg_contr_verif");
    }

    public void setDsMsgContrVerif(String ds_msg_contr_verif) {
        setObject("ds_msg_contr_verif", ds_msg_contr_verif);
    }

    public BigDecimal getIdCrlUsata() {
        return getBigDecimal("id_crl_usata");
    }

    public void setIdCrlUsata(BigDecimal id_crl_usata) {
        setObject("id_crl_usata", id_crl_usata);
    }

    @Override
    public void entityToRowBean(Object obj) {
        VolContrVerifFirmaVolume entity = (VolContrVerifFirmaVolume) obj;
        AbstractRecord ar;
        this.setIdContrVerifFirmaVolume(new BigDecimal(entity.getIdContrVerifFirmaVolume()));
        if (entity._persistence_get_volVerifFirmaVolume_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_volVerifFirmaVolume_vh()).getRow()) != null) {
                this.setIdVerifFirmaVolume(
                        new BigDecimal((Long) ar.get("VOL_CONTR_VERIF_FIRMA_VOLUME.ID_VERIF_FIRMA_VOLUME")));
            }
        } else {
            if (entity.getVolVerifFirmaVolume() != null) {
                this.setIdVerifFirmaVolume(new BigDecimal(entity.getVolVerifFirmaVolume().getIdVerifFirmaVolume()));
            }
        }
        this.setTiContr(entity.getTiContr());
        this.setTiEsitoContrVerif(entity.getTiEsitoContrVerif());
        this.setDsMsgContrVerif(entity.getDsMsgContrVerif());
        if (entity._persistence_get_firCrl_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_firCrl_vh()).getRow()) != null) {
                this.setIdCrlUsata(new BigDecimal((Long) ar.get("VOL_CONTR_VERIF_FIRMA_VOLUME.ID_CRL_USATA")));
            }
        } else {
            if (entity.getFirCrl() != null) {
                this.setIdCrlUsata(new BigDecimal(entity.getFirCrl().getIdCrl()));
            }
        }
    }

    @Override
    public VolContrVerifFirmaVolume rowBeanToEntity() {
        VolContrVerifFirmaVolume entity = new VolContrVerifFirmaVolume();
        if (this.getIdContrVerifFirmaVolume() != null) {
            entity.setIdContrVerifFirmaVolume(this.getIdContrVerifFirmaVolume().longValue());
        }
        if (this.getIdVerifFirmaVolume() != null) {
            if (entity.getVolVerifFirmaVolume() == null) {
                entity.setVolVerifFirmaVolume(new VolVerifFirmaVolume());
            }
            entity.getVolVerifFirmaVolume().setIdVerifFirmaVolume(this.getIdVerifFirmaVolume().longValue());
        }
        entity.setTiContr(this.getTiContr());
        entity.setTiEsitoContrVerif(this.getTiEsitoContrVerif());
        entity.setDsMsgContrVerif(this.getDsMsgContrVerif());
        if (this.getIdCrlUsata() != null) {
            if (entity.getFirCrl() == null) {
                entity.setFirCrl(new FirCrl());
            }
            entity.getFirCrl().setIdCrl(this.getIdCrlUsata().longValue());
        }
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
