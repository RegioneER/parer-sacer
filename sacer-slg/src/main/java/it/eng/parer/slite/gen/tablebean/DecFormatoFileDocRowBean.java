package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.DecFormatoFileDoc;
import it.eng.parer.entity.OrgStrut;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Dec_Formato_File_Doc
 *
 */
public class DecFormatoFileDocRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static DecFormatoFileDocTableDescriptor TABLE_DESCRIPTOR = new DecFormatoFileDocTableDescriptor();

    public DecFormatoFileDocRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdFormatoFileDoc() {
        return getBigDecimal("id_formato_file_doc");
    }

    public void setIdFormatoFileDoc(BigDecimal id_formato_file_doc) {
        setObject("id_formato_file_doc", id_formato_file_doc);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal id_strut) {
        setObject("id_strut", id_strut);
    }

    public String getNmFormatoFileDoc() {
        return getString("nm_formato_file_doc");
    }

    public void setNmFormatoFileDoc(String nm_formato_file_doc) {
        setObject("nm_formato_file_doc", nm_formato_file_doc);
    }

    public String getDsFormatoFileDoc() {
        return getString("ds_formato_file_doc");
    }

    public void setDsFormatoFileDoc(String ds_formato_file_doc) {
        setObject("ds_formato_file_doc", ds_formato_file_doc);
    }

    public String getCdVersione() {
        return getString("cd_versione");
    }

    public void setCdVersione(String cd_versione) {
        setObject("cd_versione", cd_versione);
    }

    public Timestamp getDtIstituz() {
        return getTimestamp("dt_istituz");
    }

    public void setDtIstituz(Timestamp dt_istituz) {
        setObject("dt_istituz", dt_istituz);
    }

    public Timestamp getDtSoppres() {
        return getTimestamp("dt_soppres");
    }

    public void setDtSoppres(Timestamp dt_soppres) {
        setObject("dt_soppres", dt_soppres);
    }

    @Override
    public void entityToRowBean(Object obj) {
        DecFormatoFileDoc entity = (DecFormatoFileDoc) obj;
        AbstractRecord ar;
        this.setIdFormatoFileDoc(new BigDecimal(entity.getIdFormatoFileDoc()));
        if (entity._persistence_get_orgStrut_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_orgStrut_vh()).getRow()) != null) {
                this.setIdStrut(new BigDecimal((Long) ar.get("DEC_FORMATO_FILE_DOC.ID_STRUT")));
            }
        } else {
            if (entity.getOrgStrut() != null) {
                this.setIdStrut(new BigDecimal(entity.getOrgStrut().getIdStrut()));
            }
        }
        this.setNmFormatoFileDoc(entity.getNmFormatoFileDoc());
        this.setDsFormatoFileDoc(entity.getDsFormatoFileDoc());
        this.setCdVersione(entity.getCdVersione());
        if (entity.getDtIstituz() != null) {
            this.setDtIstituz(new Timestamp(entity.getDtIstituz().getTime()));
        }
        if (entity.getDtSoppres() != null) {
            this.setDtSoppres(new Timestamp(entity.getDtSoppres().getTime()));
        }
    }

    @Override
    public DecFormatoFileDoc rowBeanToEntity() {
        DecFormatoFileDoc entity = new DecFormatoFileDoc();
        if (this.getIdFormatoFileDoc() != null) {
            entity.setIdFormatoFileDoc(this.getIdFormatoFileDoc().longValue());
        }
        if (this.getIdStrut() != null) {
            if (entity.getOrgStrut() == null) {
                entity.setOrgStrut(new OrgStrut());
            }
            entity.getOrgStrut().setIdStrut(this.getIdStrut().longValue());
        }
        entity.setNmFormatoFileDoc(this.getNmFormatoFileDoc());
        entity.setDsFormatoFileDoc(this.getDsFormatoFileDoc());
        entity.setCdVersione(this.getCdVersione());
        entity.setDtIstituz(this.getDtIstituz());
        entity.setDtSoppres(this.getDtSoppres());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
