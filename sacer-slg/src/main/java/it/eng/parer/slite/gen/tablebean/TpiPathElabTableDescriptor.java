package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Tpi_Path_Elab
 *
 */
public class TpiPathElabTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 7 May 2014 11:08" )
     */

    public static final String SELECT = "Select * from Tpi_Path_Elab /**/";
    public static final String TABLE_NAME = "Tpi_Path_Elab";
    public static final String COL_ID_PATH_ELAB = "id_path_elab";
    public static final String COL_ID_SCHED_JOB = "id_sched_job";
    public static final String COL_DT_VERS_ELAB = "dt_vers_elab";
    public static final String COL_DL_PATH_ELAB = "dl_path_elab";
    public static final String COL_NI_FILE_DA_ELAB = "ni_file_da_elab";
    public static final String COL_NI_FILE_ELAB = "ni_file_elab";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_PATH_ELAB, new ColumnDescriptor(COL_ID_PATH_ELAB, Types.DECIMAL, 22, true));
        map.put(COL_ID_SCHED_JOB, new ColumnDescriptor(COL_ID_SCHED_JOB, Types.DECIMAL, 22, false));
        map.put(COL_DT_VERS_ELAB, new ColumnDescriptor(COL_DT_VERS_ELAB, Types.TIMESTAMP, 7, false));
        map.put(COL_DL_PATH_ELAB, new ColumnDescriptor(COL_DL_PATH_ELAB, Types.VARCHAR, 254, false));
        map.put(COL_NI_FILE_DA_ELAB, new ColumnDescriptor(COL_NI_FILE_DA_ELAB, Types.DECIMAL, 22, false));
        map.put(COL_NI_FILE_ELAB, new ColumnDescriptor(COL_NI_FILE_ELAB, Types.DECIMAL, 22, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
