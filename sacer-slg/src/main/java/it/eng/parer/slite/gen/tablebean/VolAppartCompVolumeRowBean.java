package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.VolAppartCompVolume;
import it.eng.parer.entity.AroCompDoc;
import it.eng.parer.entity.VolAppartDocVolume;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Vol_Appart_Comp_Volume
 *
 */
public class VolAppartCompVolumeRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static VolAppartCompVolumeTableDescriptor TABLE_DESCRIPTOR = new VolAppartCompVolumeTableDescriptor();

    public VolAppartCompVolumeRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAppartCompVolume() {
        return getBigDecimal("id_appart_comp_volume");
    }

    public void setIdAppartCompVolume(BigDecimal id_appart_comp_volume) {
        setObject("id_appart_comp_volume", id_appart_comp_volume);
    }

    public BigDecimal getIdAppartDocVolume() {
        return getBigDecimal("id_appart_doc_volume");
    }

    public void setIdAppartDocVolume(BigDecimal id_appart_doc_volume) {
        setObject("id_appart_doc_volume", id_appart_doc_volume);
    }

    public BigDecimal getIdCompDoc() {
        return getBigDecimal("id_comp_doc");
    }

    public void setIdCompDoc(BigDecimal id_comp_doc) {
        setObject("id_comp_doc", id_comp_doc);
    }

    public String getTiEsitoVerifFirmeChius() {
        return getString("ti_esito_verif_firme_chius");
    }

    public void setTiEsitoVerifFirmeChius(String ti_esito_verif_firme_chius) {
        setObject("ti_esito_verif_firme_chius", ti_esito_verif_firme_chius);
    }

    public String getDsEsitoVerifFirmeChius() {
        return getString("ds_esito_verif_firme_chius");
    }

    public void setDsEsitoVerifFirmeChius(String ds_esito_verif_firme_chius) {
        setObject("ds_esito_verif_firme_chius", ds_esito_verif_firme_chius);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal id_strut) {
        setObject("id_strut", id_strut);
    }

    @Override
    public void entityToRowBean(Object obj) {
        VolAppartCompVolume entity = (VolAppartCompVolume) obj;
        AbstractRecord ar;
        this.setIdAppartCompVolume(new BigDecimal(entity.getIdAppartCompVolume()));
        if (entity._persistence_get_volAppartDocVolume_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_volAppartDocVolume_vh()).getRow()) != null) {
                this.setIdAppartDocVolume(new BigDecimal((Long) ar.get("VOL_APPART_COMP_VOLUME.ID_APPART_DOC_VOLUME")));
            }
        } else {
            if (entity.getVolAppartDocVolume() != null) {
                this.setIdAppartDocVolume(new BigDecimal(entity.getVolAppartDocVolume().getIdAppartDocVolume()));
            }
        }
        if (entity._persistence_get_aroCompDoc_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_aroCompDoc_vh()).getRow()) != null) {
                this.setIdCompDoc(new BigDecimal((Long) ar.get("VOL_APPART_COMP_VOLUME.ID_COMP_DOC")));
            }
        } else {
            if (entity.getAroCompDoc() != null) {
                this.setIdCompDoc(new BigDecimal(entity.getAroCompDoc().getIdCompDoc()));
            }
        }
        this.setTiEsitoVerifFirmeChius(entity.getTiEsitoVerifFirmeChius());
        this.setDsEsitoVerifFirmeChius(entity.getDsEsitoVerifFirmeChius());
        this.setIdStrut(entity.getIdStrut());
    }

    @Override
    public VolAppartCompVolume rowBeanToEntity() {
        VolAppartCompVolume entity = new VolAppartCompVolume();
        if (this.getIdAppartCompVolume() != null) {
            entity.setIdAppartCompVolume(this.getIdAppartCompVolume().longValue());
        }
        if (this.getIdAppartDocVolume() != null) {
            if (entity.getVolAppartDocVolume() == null) {
                entity.setVolAppartDocVolume(new VolAppartDocVolume());
            }
            entity.getVolAppartDocVolume().setIdAppartDocVolume(this.getIdAppartDocVolume().longValue());
        }
        if (this.getIdCompDoc() != null) {
            if (entity.getAroCompDoc() == null) {
                entity.setAroCompDoc(new AroCompDoc());
            }
            entity.getAroCompDoc().setIdCompDoc(this.getIdCompDoc().longValue());
        }
        entity.setTiEsitoVerifFirmeChius(this.getTiEsitoVerifFirmeChius());
        entity.setDsEsitoVerifFirmeChius(this.getDsEsitoVerifFirmeChius());
        entity.setIdStrut(this.getIdStrut());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
