/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.AroCompDoc;
import it.eng.parer.entity.VolAppartCompVolume;
import it.eng.parer.entity.VolAppartDocVolume;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Vol_Appart_Comp_Volume
 *
 */
public class VolAppartCompVolumeRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */
    private static final long serialVersionUID = 1L;

    public static VolAppartCompVolumeTableDescriptor TABLE_DESCRIPTOR = new VolAppartCompVolumeTableDescriptor();

    public VolAppartCompVolumeRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAppartCompVolume() {
        return getBigDecimal("id_appart_comp_volume");
    }

    public void setIdAppartCompVolume(BigDecimal idAppartCompVolume) {
        setObject("id_appart_comp_volume", idAppartCompVolume);
    }

    public BigDecimal getIdAppartDocVolume() {
        return getBigDecimal("id_appart_doc_volume");
    }

    public void setIdAppartDocVolume(BigDecimal idAppartDocVolume) {
        setObject("id_appart_doc_volume", idAppartDocVolume);
    }

    public BigDecimal getIdCompDoc() {
        return getBigDecimal("id_comp_doc");
    }

    public void setIdCompDoc(BigDecimal idCompDoc) {
        setObject("id_comp_doc", idCompDoc);
    }

    public String getTiEsitoVerifFirmeChius() {
        return getString("ti_esito_verif_firme_chius");
    }

    public void setTiEsitoVerifFirmeChius(String tiEsitoVerifFirmeChius) {
        setObject("ti_esito_verif_firme_chius", tiEsitoVerifFirmeChius);
    }

    public String getDsEsitoVerifFirmeChius() {
        return getString("ds_esito_verif_firme_chius");
    }

    public void setDsEsitoVerifFirmeChius(String dsEsitoVerifFirmeChius) {
        setObject("ds_esito_verif_firme_chius", dsEsitoVerifFirmeChius);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal idStrut) {
        setObject("id_strut", idStrut);
    }

    @Override
    public void entityToRowBean(Object obj) {
        VolAppartCompVolume entity = (VolAppartCompVolume) obj;

        this.setIdAppartCompVolume(
                entity.getIdAppartCompVolume() == null ? null : BigDecimal.valueOf(entity.getIdAppartCompVolume()));

        if (entity.getVolAppartDocVolume() != null) {
            this.setIdAppartDocVolume(new BigDecimal(entity.getVolAppartDocVolume().getIdAppartDocVolume()));
        }

        if (entity.getAroCompDoc() != null) {
            this.setIdCompDoc(new BigDecimal(entity.getAroCompDoc().getIdCompDoc()));
        }

        this.setTiEsitoVerifFirmeChius(entity.getTiEsitoVerifFirmeChius());
        this.setDsEsitoVerifFirmeChius(entity.getDsEsitoVerifFirmeChius());
        this.setIdStrut(entity.getIdStrut());
    }

    @Override
    public VolAppartCompVolume rowBeanToEntity() {
        VolAppartCompVolume entity = new VolAppartCompVolume();
        if (this.getIdAppartCompVolume() != null) {
            entity.setIdAppartCompVolume(this.getIdAppartCompVolume().longValue());
        }
        if (this.getIdAppartDocVolume() != null) {
            if (entity.getVolAppartDocVolume() == null) {
                entity.setVolAppartDocVolume(new VolAppartDocVolume());
            }
            entity.getVolAppartDocVolume().setIdAppartDocVolume(this.getIdAppartDocVolume().longValue());
        }
        if (this.getIdCompDoc() != null) {
            if (entity.getAroCompDoc() == null) {
                entity.setAroCompDoc(new AroCompDoc());
            }
            entity.getAroCompDoc().setIdCompDoc(this.getIdCompDoc().longValue());
        }
        entity.setTiEsitoVerifFirmeChius(this.getTiEsitoVerifFirmeChius());
        entity.setDsEsitoVerifFirmeChius(this.getDsEsitoVerifFirmeChius());
        entity.setIdStrut(this.getIdStrut());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
