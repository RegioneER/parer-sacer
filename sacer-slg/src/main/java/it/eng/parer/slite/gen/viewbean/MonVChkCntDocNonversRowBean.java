package it.eng.parer.slite.gen.viewbean;

import it.eng.parer.viewEntity.MonVChkDocNonversAmb;
import it.eng.parer.viewEntity.MonVChkDocNonversEnte;
import it.eng.parer.viewEntity.MonVChkDocNonversStrut;
import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import java.math.BigDecimal;

/**
 * RowBean per la tabella Mon_V_Chk_Doc_Nonvers_Strut
 *
 */
public class MonVChkCntDocNonversRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Monday, 20 October 2014 10:31" )
     */
    public static MonVChkCntDocNonversTableDescriptor TABLE_DESCRIPTOR = new MonVChkCntDocNonversTableDescriptor();

    public MonVChkCntDocNonversRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    public String getFlDocNonvers() {
        return getString("fl_doc_nonvers");
    }

    public void setFlDocNonvers(String fl_doc_nonvers) {
        setObject("fl_doc_nonvers", fl_doc_nonvers);
    }

    public String getFlDocNonversNoverif() {
        return getString("fl_doc_nonvers_noverif");
    }

    public void setFlDocNonversNoverif(String fl_doc_nonvers_noverif) {
        setObject("fl_doc_nonvers_noverif", fl_doc_nonvers_noverif);
    }

    public String getFlDocNonversVerif() {
        return getString("fl_doc_nonvers_verif");
    }

    public void setFlDocNonversVerif(String fl_doc_nonvers_verif) {
        setObject("fl_doc_nonvers_verif", fl_doc_nonvers_verif);
    }

    public String getFlDocNonversNorisolub() {
        return getString("fl_doc_nonvers_norisolub");
    }

    public void setFlDocNonversNorisolub(String fl_doc_nonvers_norisolub) {
        setObject("fl_doc_nonvers_norisolub", fl_doc_nonvers_norisolub);
    }

    public BigDecimal getNiDocNonvers() {
        return getBigDecimal("ni_doc_nonvers");
    }

    public void setNiDocNonvers(BigDecimal ni_doc_nonvers) {
        setObject("ni_doc_nonvers", ni_doc_nonvers);
    }

    public BigDecimal getNiDocNonversNoverif() {
        return getBigDecimal("ni_doc_nonvers_noverif");
    }

    public void setNiDocNonversNoverif(BigDecimal ni_doc_nonvers_noverif) {
        setObject("ni_doc_nonvers_noverif", ni_doc_nonvers_noverif);
    }

    public BigDecimal getNiDocNonversVerif() {
        return getBigDecimal("ni_doc_nonvers_verif");
    }

    public void setNiDocNonversVerif(BigDecimal ni_doc_nonvers_verif) {
        setObject("ni_doc_nonvers_verif", ni_doc_nonvers_verif);
    }

    public BigDecimal getNiDocNonversNorisolub() {
        return getBigDecimal("ni_doc_nonvers_norisolub");
    }

    public void setNiDocNonversNorisolub(BigDecimal ni_doc_nonvers_norisolub) {
        setObject("ni_doc_nonvers_norisolub", ni_doc_nonvers_norisolub);
    }

    @Override
    public void entityToRowBean(Object obj) {
        MonVChkDocNonvers entity;
        if (obj instanceof MonVChkDocNonversStrut) {
            entity = new MonVChkDocNonvers((MonVChkDocNonversStrut) obj);
        } else if (obj instanceof MonVChkDocNonversEnte) {
            entity = new MonVChkDocNonvers((MonVChkDocNonversEnte) obj);
        } else if (obj instanceof MonVChkDocNonversAmb) {
            entity = new MonVChkDocNonvers((MonVChkDocNonversAmb) obj);
        } else {
            throw new IllegalArgumentException("Errore inaspettato nel casting dell'entity");
        }
        this.setFlDocNonversNoverif(entity.getFlDocNonversNoverif());
        this.setFlDocNonversVerif(entity.getFlDocNonversVerif());
        this.setFlDocNonversNorisolub(entity.getFlDocNonversNorisolub());
        this.setFlDocNonvers(entity.getFlDocNonvers());
    }

    @Override
    public MonVChkDocNonvers rowBeanToEntity() {
        MonVChkDocNonvers entity = new MonVChkDocNonvers();
        entity.setFlDocNonvers(this.getFlDocNonvers());
        entity.setFlDocNonversNoverif(this.getFlDocNonversNoverif());
        entity.setFlDocNonversVerif(this.getFlDocNonversVerif());
        entity.setFlDocNonversNorisolub(this.getFlDocNonversNorisolub());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

    public void resetCounters() {
        this.setNiDocNonvers(BigDecimal.ZERO);
        this.setNiDocNonversNorisolub(BigDecimal.ZERO);
        this.setNiDocNonversNoverif(BigDecimal.ZERO);
        this.setNiDocNonversVerif(BigDecimal.ZERO);
    }

    public class MonVChkDocNonvers {

        private String flDocNonversNorisolub;
        private String flDocNonversNoverif;
        private String flDocNonversVerif;
        private String flDocNonvers;

        public MonVChkDocNonvers() {

        }

        public MonVChkDocNonvers(MonVChkDocNonversStrut entity) {
            this.flDocNonversVerif = entity.getFlDocNonversVerif();
            this.flDocNonversNoverif = entity.getFlDocNonversNoverif();
            this.flDocNonversNorisolub = entity.getFlDocNonversNorisolub();
            boolean docNonVers = entity.getFlDocNonversVerif().equals("1")
                    || entity.getFlDocNonversNoverif().equals("1") || entity.getFlDocNonversNorisolub().equals("1");
            this.flDocNonvers = (docNonVers ? "1" : "0");
        }

        public MonVChkDocNonvers(MonVChkDocNonversEnte entity) {
            this.flDocNonversVerif = entity.getFlDocNonversVerif();
            this.flDocNonversNoverif = entity.getFlDocNonversNoverif();
            this.flDocNonversNorisolub = entity.getFlDocNonversNorisolub();
            boolean docNonVers = entity.getFlDocNonversVerif().equals("1")
                    || entity.getFlDocNonversNoverif().equals("1") || entity.getFlDocNonversNorisolub().equals("1");
            this.flDocNonvers = (docNonVers ? "1" : "0");
        }

        public MonVChkDocNonvers(MonVChkDocNonversAmb entity) {
            this.flDocNonversVerif = entity.getFlDocNonversVerif();
            this.flDocNonversNoverif = entity.getFlDocNonversNoverif();
            this.flDocNonversNorisolub = entity.getFlDocNonversNorisolub();
            boolean docNonVers = entity.getFlDocNonversVerif().equals("1")
                    || entity.getFlDocNonversNoverif().equals("1") || entity.getFlDocNonversNorisolub().equals("1");
            this.flDocNonvers = (docNonVers ? "1" : "0");
        }

        public String getFlDocNonversNorisolub() {
            return flDocNonversNorisolub;
        }

        public void setFlDocNonversNorisolub(String flDocNonversNorisolub) {
            this.flDocNonversNorisolub = flDocNonversNorisolub;
        }

        public String getFlDocNonversNoverif() {
            return flDocNonversNoverif;
        }

        public void setFlDocNonversNoverif(String flDocNonversNoverif) {
            this.flDocNonversNoverif = flDocNonversNoverif;
        }

        public String getFlDocNonversVerif() {
            return flDocNonversVerif;
        }

        public void setFlDocNonversVerif(String flDocNonversVerif) {
            this.flDocNonversVerif = flDocNonversVerif;
        }

        public String getFlDocNonvers() {
            return flDocNonvers;
        }

        public void setFlDocNonvers(String flDocNonvers) {
            this.flDocNonvers = flDocNonvers;
        }

    }
}
