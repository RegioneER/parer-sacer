package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Dec_V_Lis_Uso_Fmt_File_Std
 *
 */
public class DecVLisUsoFmtFileStdTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 20 December 2012 16:14" )
     */

    public static final String SELECT = "Select * from Dec_V_Lis_Uso_Fmt_File_Std /**/";
    public static final String TABLE_NAME = "Dec_V_Lis_Uso_Fmt_File_Std";
    public static final String COL_ID_USO_FORMATO_FILE_AMMESSO = "id_uso_formato_file_ammesso";
    public static final String COL_ID_FORMATO_FILE_DOC = "id_formato_file_doc";
    public static final String COL_NM_FORMATO_FILE_DOC = "nm_formato_file_doc";
    public static final String COL_NI_ORD_USO = "ni_ord_uso";
    public static final String COL_ID_FORMATO_FILE_STANDARD = "id_formato_file_standard";
    public static final String COL_NM_FORMATO_FILE_STANDARD = "nm_formato_file_standard";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_USO_FORMATO_FILE_AMMESSO,
                new ColumnDescriptor(COL_ID_USO_FORMATO_FILE_AMMESSO, Types.DECIMAL, 22, true));
        map.put(COL_ID_FORMATO_FILE_DOC, new ColumnDescriptor(COL_ID_FORMATO_FILE_DOC, Types.DECIMAL, 22, true));
        map.put(COL_NM_FORMATO_FILE_DOC, new ColumnDescriptor(COL_NM_FORMATO_FILE_DOC, Types.VARCHAR, 100, true));
        map.put(COL_NI_ORD_USO, new ColumnDescriptor(COL_NI_ORD_USO, Types.DECIMAL, 22, true));
        map.put(COL_ID_FORMATO_FILE_STANDARD,
                new ColumnDescriptor(COL_ID_FORMATO_FILE_STANDARD, Types.DECIMAL, 22, true));
        map.put(COL_NM_FORMATO_FILE_STANDARD,
                new ColumnDescriptor(COL_NM_FORMATO_FILE_STANDARD, Types.VARCHAR, 100, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
