package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Vrs_Dt_Vers
 *
 */
public class VrsDtVersTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 18 March 2014 10:07" )
     */

    public static final String SELECT = "Select * from Vrs_Dt_Vers /**/";
    public static final String TABLE_NAME = "Vrs_Dt_Vers";
    public static final String COL_ID_DT_VERS = "id_dt_vers";
    public static final String COL_DT_VERS = "dt_vers";
    public static final String COL_TI_STATO_DT_VERS = "ti_stato_dt_vers";
    public static final String COL_FL_MIGRAZ = "fl_migraz";
    public static final String COL_FL_ARK = "fl_ark";
    public static final String COL_FL_FILE_NO_ARK = "fl_file_no_ark";
    public static final String COL_FL_ARK_SECONDARIO = "fl_ark_secondario";
    public static final String COL_FL_FILE_NO_ARK_SECONDARIO = "fl_file_no_ark_secondario";
    public static final String COL_DT_CREAZIONE_DT_VERS = "dt_creazione_dt_vers";
    public static final String COL_DT_LAST_ARK_DT_VERS = "dt_last_ark_dt_vers";
    public static final String COL_DT_LAST_ARK_DT_VERS_SECONDARIO = "dt_last_ark_dt_vers_secondario";
    public static final String COL_DT_STATO_DT_VERS = "dt_stato_dt_vers";
    public static final String COL_DL_PATH_DT_VERS = "dl_path_dt_vers";
    public static final String COL_FL_PRESENZA_SECONDARIO = "fl_presenza_secondario";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_DT_VERS, new ColumnDescriptor(COL_ID_DT_VERS, Types.DECIMAL, 22, true));
        map.put(COL_DT_VERS, new ColumnDescriptor(COL_DT_VERS, Types.TIMESTAMP, 7, false));
        map.put(COL_TI_STATO_DT_VERS, new ColumnDescriptor(COL_TI_STATO_DT_VERS, Types.VARCHAR, 20, false));
        map.put(COL_FL_MIGRAZ, new ColumnDescriptor(COL_FL_MIGRAZ, Types.VARCHAR, 1, false));
        map.put(COL_FL_ARK, new ColumnDescriptor(COL_FL_ARK, Types.VARCHAR, 1, false));
        map.put(COL_FL_FILE_NO_ARK, new ColumnDescriptor(COL_FL_FILE_NO_ARK, Types.VARCHAR, 1, false));
        map.put(COL_FL_ARK_SECONDARIO, new ColumnDescriptor(COL_FL_ARK_SECONDARIO, Types.VARCHAR, 1, false));
        map.put(COL_FL_FILE_NO_ARK_SECONDARIO,
                new ColumnDescriptor(COL_FL_FILE_NO_ARK_SECONDARIO, Types.VARCHAR, 1, false));
        map.put(COL_DT_CREAZIONE_DT_VERS, new ColumnDescriptor(COL_DT_CREAZIONE_DT_VERS, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_LAST_ARK_DT_VERS, new ColumnDescriptor(COL_DT_LAST_ARK_DT_VERS, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_LAST_ARK_DT_VERS_SECONDARIO,
                new ColumnDescriptor(COL_DT_LAST_ARK_DT_VERS_SECONDARIO, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_STATO_DT_VERS, new ColumnDescriptor(COL_DT_STATO_DT_VERS, Types.TIMESTAMP, 7, false));
        map.put(COL_DL_PATH_DT_VERS, new ColumnDescriptor(COL_DL_PATH_DT_VERS, Types.VARCHAR, 254, false));
        map.put(COL_FL_PRESENZA_SECONDARIO, new ColumnDescriptor(COL_FL_PRESENZA_SECONDARIO, Types.VARCHAR, 1, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
