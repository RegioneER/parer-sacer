package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.IamUser;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Iam_User
 *
 */
public class IamUserRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 February 2014 17:32" )
     */

    public static IamUserTableDescriptor TABLE_DESCRIPTOR = new IamUserTableDescriptor();

    public IamUserRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdUserIam() {
        return getBigDecimal("id_user_iam");
    }

    public void setIdUserIam(BigDecimal id_user_iam) {
        setObject("id_user_iam", id_user_iam);
    }

    public String getNmUserid() {
        return getString("nm_userid");
    }

    public void setNmUserid(String nm_userid) {
        setObject("nm_userid", nm_userid);
    }

    public String getCdPsw() {
        return getString("cd_psw");
    }

    public void setCdPsw(String cd_psw) {
        setObject("cd_psw", cd_psw);
    }

    public String getNmCognomeUser() {
        return getString("nm_cognome_user");
    }

    public void setNmCognomeUser(String nm_cognome_user) {
        setObject("nm_cognome_user", nm_cognome_user);
    }

    public String getNmNomeUser() {
        return getString("nm_nome_user");
    }

    public void setNmNomeUser(String nm_nome_user) {
        setObject("nm_nome_user", nm_nome_user);
    }

    public String getFlAttivo() {
        return getString("fl_attivo");
    }

    public void setFlAttivo(String fl_attivo) {
        setObject("fl_attivo", fl_attivo);
    }

    public Timestamp getDtRegPsw() {
        return getTimestamp("dt_reg_psw");
    }

    public void setDtRegPsw(Timestamp dt_reg_psw) {
        setObject("dt_reg_psw", dt_reg_psw);
    }

    public Timestamp getDtScadPsw() {
        return getTimestamp("dt_scad_psw");
    }

    public void setDtScadPsw(Timestamp dt_scad_psw) {
        setObject("dt_scad_psw", dt_scad_psw);
    }

    public String getFlUserAdmin() {
        return getString("fl_user_admin");
    }

    public void setFlUserAdmin(String fl_user_admin) {
        setObject("fl_user_admin", fl_user_admin);
    }

    public String getCdSalt() {
        return getString("cd_salt");
    }

    public void setCdSalt(String cd_salt) {
        setObject("cd_salt", cd_salt);
    }

    public String getCdFisc() {
        return getString("cd_fisc");
    }

    public void setCdFisc(String cd_fisc) {
        setObject("cd_fisc", cd_fisc);
    }

    public String getDsEmail() {
        return getString("ds_email");
    }

    public void setDsEmail(String ds_email) {
        setObject("ds_email", ds_email);
    }

    public String getFlContrIp() {
        return getString("fl_contr_ip");
    }

    public void setFlContrIp(String fl_contr_ip) {
        setObject("fl_contr_ip", fl_contr_ip);
    }

    @Override
    public void entityToRowBean(Object obj) {
        IamUser entity = (IamUser) obj;
        AbstractRecord ar;
        this.setIdUserIam(new BigDecimal(entity.getIdUserIam()));
        this.setNmUserid(entity.getNmUserid());
        this.setCdPsw(entity.getCdPsw());
        this.setNmCognomeUser(entity.getNmCognomeUser());
        this.setNmNomeUser(entity.getNmNomeUser());
        this.setFlAttivo(entity.getFlAttivo());
        if (entity.getDtRegPsw() != null) {
            this.setDtRegPsw(new Timestamp(entity.getDtRegPsw().getTime()));
        }
        if (entity.getDtScadPsw() != null) {
            this.setDtScadPsw(new Timestamp(entity.getDtScadPsw().getTime()));
        }
        this.setFlUserAdmin(entity.getFlUserAdmin());
        this.setCdSalt(entity.getCdSalt());
        this.setCdFisc(entity.getCdFisc());
        this.setDsEmail(entity.getDsEmail());
        this.setFlContrIp(entity.getFlContrIp());
    }

    @Override
    public IamUser rowBeanToEntity() {
        IamUser entity = new IamUser();
        if (this.getIdUserIam() != null) {
            entity.setIdUserIam(this.getIdUserIam().longValue());
        }
        entity.setNmUserid(this.getNmUserid());
        entity.setCdPsw(this.getCdPsw());
        entity.setNmCognomeUser(this.getNmCognomeUser());
        entity.setNmNomeUser(this.getNmNomeUser());
        entity.setFlAttivo(this.getFlAttivo());
        entity.setDtRegPsw(this.getDtRegPsw());
        entity.setDtScadPsw(this.getDtScadPsw());
        entity.setFlUserAdmin(this.getFlUserAdmin());
        entity.setCdSalt(this.getCdSalt());
        entity.setCdFisc(this.getCdFisc());
        entity.setDsEmail(this.getDsEmail());
        entity.setFlContrIp(this.getFlContrIp());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
