package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.DecUsoModelloXsdFasc;
import it.eng.parer.entity.DecAaTipoFascicolo;
import it.eng.parer.entity.DecModelloXsdFascicolo;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Dec_Uso_Modello_Xsd_Fasc
 *
 */
public class DecUsoModelloXsdFascRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Monday, 27 November 2017 11:33" )
     */

    public static DecUsoModelloXsdFascTableDescriptor TABLE_DESCRIPTOR = new DecUsoModelloXsdFascTableDescriptor();

    public DecUsoModelloXsdFascRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdUsoModelloXsdFasc() {
        return getBigDecimal("id_uso_modello_xsd_fasc");
    }

    public void setIdUsoModelloXsdFasc(BigDecimal id_uso_modello_xsd_fasc) {
        setObject("id_uso_modello_xsd_fasc", id_uso_modello_xsd_fasc);
    }

    public BigDecimal getIdAaTipoFascicolo() {
        return getBigDecimal("id_aa_tipo_fascicolo");
    }

    public void setIdAaTipoFascicolo(BigDecimal id_aa_tipo_fascicolo) {
        setObject("id_aa_tipo_fascicolo", id_aa_tipo_fascicolo);
    }

    public BigDecimal getIdModelloXsdFascicolo() {
        return getBigDecimal("id_modello_xsd_fascicolo");
    }

    public void setIdModelloXsdFascicolo(BigDecimal id_modello_xsd_fascicolo) {
        setObject("id_modello_xsd_fascicolo", id_modello_xsd_fascicolo);
    }

    public String getFlStandard() {
        return getString("fl_standard");
    }

    public void setFlStandard(String fl_standard) {
        setObject("fl_standard", fl_standard);
    }

    public Timestamp getDtIstituz() {
        return getTimestamp("dt_istituz");
    }

    public void setDtIstituz(Timestamp dt_istituz) {
        setObject("dt_istituz", dt_istituz);
    }

    public Timestamp getDtSoppres() {
        return getTimestamp("dt_soppres");
    }

    public void setDtSoppres(Timestamp dt_soppres) {
        setObject("dt_soppres", dt_soppres);
    }

    @Override
    public void entityToRowBean(Object obj) {
        DecUsoModelloXsdFasc entity = (DecUsoModelloXsdFasc) obj;
        AbstractRecord ar;
        this.setIdUsoModelloXsdFasc(new BigDecimal(entity.getIdUsoModelloXsdFasc()));
        if (entity._persistence_get_decAaTipoFascicolo_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_decAaTipoFascicolo_vh()).getRow()) != null) {
                this.setIdAaTipoFascicolo(
                        new BigDecimal((Long) ar.get("DEC_USO_MODELLO_XSD_FASC.ID_AA_TIPO_FASCICOLO")));
            }
        } else {
            if (entity.getDecAaTipoFascicolo() != null) {
                this.setIdAaTipoFascicolo(new BigDecimal(entity.getDecAaTipoFascicolo().getIdAaTipoFascicolo()));
            }
        }
        if (entity._persistence_get_decModelloXsdFascicolo_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_decModelloXsdFascicolo_vh()).getRow()) != null) {
                this.setIdModelloXsdFascicolo(
                        new BigDecimal((Long) ar.get("DEC_USO_MODELLO_XSD_FASC.ID_MODELLO_XSD_FASCICOLO")));
            }
        } else {
            if (entity.getDecModelloXsdFascicolo() != null) {
                this.setIdModelloXsdFascicolo(
                        new BigDecimal(entity.getDecModelloXsdFascicolo().getIdModelloXsdFascicolo()));
            }
        }
        this.setFlStandard(entity.getFlStandard());
        if (entity.getDtIstituz() != null) {
            this.setDtIstituz(new Timestamp(entity.getDtIstituz().getTime()));
        }
        if (entity.getDtSoppres() != null) {
            this.setDtSoppres(new Timestamp(entity.getDtSoppres().getTime()));
        }
    }

    @Override
    public DecUsoModelloXsdFasc rowBeanToEntity() {
        DecUsoModelloXsdFasc entity = new DecUsoModelloXsdFasc();
        if (this.getIdUsoModelloXsdFasc() != null) {
            entity.setIdUsoModelloXsdFasc(this.getIdUsoModelloXsdFasc().longValue());
        }
        if (this.getIdAaTipoFascicolo() != null) {
            if (entity.getDecAaTipoFascicolo() == null) {
                entity.setDecAaTipoFascicolo(new DecAaTipoFascicolo());
            }
            entity.getDecAaTipoFascicolo().setIdAaTipoFascicolo(this.getIdAaTipoFascicolo().longValue());
        }
        if (this.getIdModelloXsdFascicolo() != null) {
            if (entity.getDecModelloXsdFascicolo() == null) {
                entity.setDecModelloXsdFascicolo(new DecModelloXsdFascicolo());
            }
            entity.getDecModelloXsdFascicolo().setIdModelloXsdFascicolo(this.getIdModelloXsdFascicolo().longValue());
        }
        entity.setFlStandard(this.getFlStandard());
        entity.setDtIstituz(this.getDtIstituz());
        entity.setDtSoppres(this.getDtSoppres());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
