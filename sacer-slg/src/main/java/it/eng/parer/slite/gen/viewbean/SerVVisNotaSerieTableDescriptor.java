package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Ser_V_Vis_Nota_Serie
 *
 */
public class SerVVisNotaSerieTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 19 January 2016 12:05" )
     */

    public static final String SELECT = "Select * from Ser_V_Vis_Nota_Serie /**/";
    public static final String TABLE_NAME = "Ser_V_Vis_Nota_Serie";
    public static final String COL_ID_SERIE = "id_serie";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_CD_COMPOSITO_SERIE = "cd_composito_serie";
    public static final String COL_AA_SERIE = "aa_serie";
    public static final String COL_DS_SERIE = "ds_serie";
    public static final String COL_ID_TIPO_SERIE = "id_tipo_serie";
    public static final String COL_NM_STRUT = "nm_strut";
    public static final String COL_ID_ENTE = "id_ente";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_ID_AMBIENTE = "id_ambiente";
    public static final String COL_NM_AMBIENTE = "nm_ambiente";
    public static final String COL_NM_TIPO_SERIE = "nm_tipo_serie";
    public static final String COL_ID_VER_SERIE = "id_ver_serie";
    public static final String COL_CD_VER_SERIE = "cd_ver_serie";
    public static final String COL_ID_STATO_VER_SERIE_COR = "id_stato_ver_serie_cor";
    public static final String COL_TI_STATO_VER_SERIE_COR = "ti_stato_ver_serie_cor";
    public static final String COL_ID_STATO_SERIE_COR = "id_stato_serie_cor";
    public static final String COL_TI_STATO_SERIE_COR = "ti_stato_serie_cor";
    public static final String COL_ID_NOTA_VER_SERIE = "id_nota_ver_serie";
    public static final String COL_ID_TIPO_NOTA_SERIE = "id_tipo_nota_serie";
    public static final String COL_DS_TIPO_NOTA_SERIE = "ds_tipo_nota_serie";
    public static final String COL_NI_ORD = "ni_ord";
    public static final String COL_PG_NOTA_VER_SERIE = "pg_nota_ver_serie";
    public static final String COL_DT_NOTA_VER_SERIE = "dt_nota_ver_serie";
    public static final String COL_DS_NOTA_VER_SERIE = "ds_nota_ver_serie";
    public static final String COL_ID_USER_IAM_NOTA = "id_user_iam_nota";
    public static final String COL_NM_USERID_NOTA = "nm_userid_nota";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_SERIE, new ColumnDescriptor(COL_ID_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
        map.put(COL_CD_COMPOSITO_SERIE, new ColumnDescriptor(COL_CD_COMPOSITO_SERIE, Types.VARCHAR, 100, true));
        map.put(COL_AA_SERIE, new ColumnDescriptor(COL_AA_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_DS_SERIE, new ColumnDescriptor(COL_DS_SERIE, Types.VARCHAR, 254, true));
        map.put(COL_ID_TIPO_SERIE, new ColumnDescriptor(COL_ID_TIPO_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_NM_STRUT, new ColumnDescriptor(COL_NM_STRUT, Types.VARCHAR, 100, true));
        map.put(COL_ID_ENTE, new ColumnDescriptor(COL_ID_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, true));
        map.put(COL_ID_AMBIENTE, new ColumnDescriptor(COL_ID_AMBIENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_AMBIENTE, new ColumnDescriptor(COL_NM_AMBIENTE, Types.VARCHAR, 100, true));
        map.put(COL_NM_TIPO_SERIE, new ColumnDescriptor(COL_NM_TIPO_SERIE, Types.VARCHAR, 100, true));
        map.put(COL_ID_VER_SERIE, new ColumnDescriptor(COL_ID_VER_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_CD_VER_SERIE, new ColumnDescriptor(COL_CD_VER_SERIE, Types.VARCHAR, 100, true));
        map.put(COL_ID_STATO_VER_SERIE_COR, new ColumnDescriptor(COL_ID_STATO_VER_SERIE_COR, Types.DECIMAL, 22, true));
        map.put(COL_TI_STATO_VER_SERIE_COR, new ColumnDescriptor(COL_TI_STATO_VER_SERIE_COR, Types.VARCHAR, 20, true));
        map.put(COL_ID_STATO_SERIE_COR, new ColumnDescriptor(COL_ID_STATO_SERIE_COR, Types.DECIMAL, 22, true));
        map.put(COL_TI_STATO_SERIE_COR, new ColumnDescriptor(COL_TI_STATO_SERIE_COR, Types.VARCHAR, 30, true));
        map.put(COL_ID_NOTA_VER_SERIE, new ColumnDescriptor(COL_ID_NOTA_VER_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_ID_TIPO_NOTA_SERIE, new ColumnDescriptor(COL_ID_TIPO_NOTA_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_DS_TIPO_NOTA_SERIE, new ColumnDescriptor(COL_DS_TIPO_NOTA_SERIE, Types.VARCHAR, 269, true));
        map.put(COL_NI_ORD, new ColumnDescriptor(COL_NI_ORD, Types.DECIMAL, 22, true));
        map.put(COL_PG_NOTA_VER_SERIE, new ColumnDescriptor(COL_PG_NOTA_VER_SERIE, Types.DECIMAL, 22, true));
        map.put(COL_DT_NOTA_VER_SERIE, new ColumnDescriptor(COL_DT_NOTA_VER_SERIE, Types.TIMESTAMP, 7, true));
        map.put(COL_DS_NOTA_VER_SERIE, new ColumnDescriptor(COL_DS_NOTA_VER_SERIE, Types.VARCHAR, 1024, true));
        map.put(COL_ID_USER_IAM_NOTA, new ColumnDescriptor(COL_ID_USER_IAM_NOTA, Types.DECIMAL, 22, true));
        map.put(COL_NM_USERID_NOTA, new ColumnDescriptor(COL_NM_USERID_NOTA, Types.VARCHAR, 100, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
