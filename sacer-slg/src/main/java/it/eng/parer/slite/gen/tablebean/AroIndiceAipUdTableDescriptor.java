package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_Indice_Aip_Ud
 *
 */
public class AroIndiceAipUdTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 20 August 2014 11:07" )
     */

    public static final String SELECT = "Select * from Aro_Indice_Aip_Ud /**/";
    public static final String TABLE_NAME = "Aro_Indice_Aip_Ud";
    public static final String COL_ID_INDICE_AIP = "id_indice_aip";
    public static final String COL_ID_UNITA_DOC = "id_unita_doc";
    public static final String COL_TI_FORMATO_INDICE_AIP = "ti_formato_indice_aip";
    public static final String COL_ID_VER_INDICE_AIP_LAST = "id_ver_indice_aip_last";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_INDICE_AIP, new ColumnDescriptor(COL_ID_INDICE_AIP, Types.DECIMAL, 22, true));
        map.put(COL_ID_UNITA_DOC, new ColumnDescriptor(COL_ID_UNITA_DOC, Types.DECIMAL, 22, false));
        map.put(COL_TI_FORMATO_INDICE_AIP, new ColumnDescriptor(COL_TI_FORMATO_INDICE_AIP, Types.VARCHAR, 20, false));
        map.put(COL_ID_VER_INDICE_AIP_LAST, new ColumnDescriptor(COL_ID_VER_INDICE_AIP_LAST, Types.DECIMAL, 22, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
