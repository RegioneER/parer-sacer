package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Tpi_Sched_Job
 *
 */
public class TpiSchedJobTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 7 May 2014 11:54" )
     */

    public static final String SELECT = "Select * from Tpi_Sched_Job /**/";
    public static final String TABLE_NAME = "Tpi_Sched_Job";
    public static final String COL_ID_SCHED_JOB = "id_sched_job";
    public static final String COL_ID_DT_SCHED = "id_dt_sched";
    public static final String COL_TI_TPI_SCHED_JOB = "ti_tpi_sched_job";
    public static final String COL_NM_JOB = "nm_job";
    public static final String COL_FL_MIGRAZ = "fl_migraz";
    public static final String COL_DT_SCHED_JOB = "dt_sched_job";
    public static final String COL_FL_JOB_OK = "fl_job_ok";
    public static final String COL_DS_DURATA_JOB = "ds_durata_job";
    public static final String COL_DL_ERR_JOB = "dl_err_job";
    public static final String COL_NI_ORD_SCHED_JOB = "ni_ord_sched_job";
    public static final String COL_FL_FINE_SCHED = "fl_fine_sched";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_SCHED_JOB, new ColumnDescriptor(COL_ID_SCHED_JOB, Types.DECIMAL, 22, true));
        map.put(COL_ID_DT_SCHED, new ColumnDescriptor(COL_ID_DT_SCHED, Types.DECIMAL, 22, false));
        map.put(COL_TI_TPI_SCHED_JOB, new ColumnDescriptor(COL_TI_TPI_SCHED_JOB, Types.VARCHAR, 20, false));
        map.put(COL_NM_JOB, new ColumnDescriptor(COL_NM_JOB, Types.VARCHAR, 100, false));
        map.put(COL_FL_MIGRAZ, new ColumnDescriptor(COL_FL_MIGRAZ, Types.VARCHAR, 1, false));
        map.put(COL_DT_SCHED_JOB, new ColumnDescriptor(COL_DT_SCHED_JOB, Types.TIMESTAMP, 7, false));
        map.put(COL_FL_JOB_OK, new ColumnDescriptor(COL_FL_JOB_OK, Types.VARCHAR, 1, false));
        map.put(COL_DS_DURATA_JOB, new ColumnDescriptor(COL_DS_DURATA_JOB, Types.VARCHAR, 254, false));
        map.put(COL_DL_ERR_JOB, new ColumnDescriptor(COL_DL_ERR_JOB, Types.VARCHAR, 1024, false));
        map.put(COL_NI_ORD_SCHED_JOB, new ColumnDescriptor(COL_NI_ORD_SCHED_JOB, Types.DECIMAL, 22, false));
        map.put(COL_FL_FINE_SCHED, new ColumnDescriptor(COL_FL_FINE_SCHED, Types.VARCHAR, 1, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
