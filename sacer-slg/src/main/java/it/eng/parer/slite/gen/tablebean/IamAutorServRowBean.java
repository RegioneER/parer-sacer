/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.IamAbilOrganiz;
import it.eng.parer.entity.IamAutorServ;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Iam_Autor_Serv
 *
 */
public class IamAutorServRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 February 2014 17:32" )
     */
    private static final long serialVersionUID = 1L;

    public static IamAutorServTableDescriptor TABLE_DESCRIPTOR = new IamAutorServTableDescriptor();

    public IamAutorServRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAutorServ() {
        return getBigDecimal("id_autor_serv");
    }

    public void setIdAutorServ(BigDecimal idAutorServ) {
        setObject("id_autor_serv", idAutorServ);
    }

    public BigDecimal getIdAbilOrganiz() {
        return getBigDecimal("id_abil_organiz");
    }

    public void setIdAbilOrganiz(BigDecimal idAbilOrganiz) {
        setObject("id_abil_organiz", idAbilOrganiz);
    }

    public String getNmServizioWeb() {
        return getString("nm_servizio_web");
    }

    public void setNmServizioWeb(String nmServizioWeb) {
        setObject("nm_servizio_web", nmServizioWeb);
    }

    @Override
    public void entityToRowBean(Object obj) {
        IamAutorServ entity = (IamAutorServ) obj;

        this.setIdAutorServ(entity.getIdAutorServ() == null ? null : BigDecimal.valueOf(entity.getIdAutorServ()));
        if (entity.getIamAbilOrganiz() != null) {
            this.setIdAbilOrganiz(new BigDecimal(entity.getIamAbilOrganiz().getIdAbilOrganiz()));
        }
        this.setNmServizioWeb(entity.getNmServizioWeb());
    }

    @Override
    public IamAutorServ rowBeanToEntity() {
        IamAutorServ entity = new IamAutorServ();
        if (this.getIdAutorServ() != null) {
            entity.setIdAutorServ(this.getIdAutorServ().longValue());
        }
        if (this.getIdAbilOrganiz() != null) {
            if (entity.getIamAbilOrganiz() == null) {
                entity.setIamAbilOrganiz(new IamAbilOrganiz());
            }
            entity.getIamAbilOrganiz().setIdAbilOrganiz(this.getIdAbilOrganiz().longValue());
        }
        entity.setNmServizioWeb(this.getNmServizioWeb());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
