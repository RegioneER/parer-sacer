package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.IamAutorServ;
import it.eng.parer.entity.IamAbilOrganiz;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Iam_Autor_Serv
 *
 */
public class IamAutorServRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 February 2014 17:32" )
     */

    public static IamAutorServTableDescriptor TABLE_DESCRIPTOR = new IamAutorServTableDescriptor();

    public IamAutorServRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAutorServ() {
        return getBigDecimal("id_autor_serv");
    }

    public void setIdAutorServ(BigDecimal id_autor_serv) {
        setObject("id_autor_serv", id_autor_serv);
    }

    public BigDecimal getIdAbilOrganiz() {
        return getBigDecimal("id_abil_organiz");
    }

    public void setIdAbilOrganiz(BigDecimal id_abil_organiz) {
        setObject("id_abil_organiz", id_abil_organiz);
    }

    public String getNmServizioWeb() {
        return getString("nm_servizio_web");
    }

    public void setNmServizioWeb(String nm_servizio_web) {
        setObject("nm_servizio_web", nm_servizio_web);
    }

    @Override
    public void entityToRowBean(Object obj) {
        IamAutorServ entity = (IamAutorServ) obj;
        AbstractRecord ar;
        this.setIdAutorServ(new BigDecimal(entity.getIdAutorServ()));
        if ((ar = ((DatabaseValueHolder) entity._persistence_get_iamAbilOrganiz_vh()).getRow()) != null) {
            this.setIdAbilOrganiz(new BigDecimal((Long) ar.get("IAM_AUTOR_SERV.ID_ABIL_ORGANIZ")));
        }
        this.setNmServizioWeb(entity.getNmServizioWeb());
    }

    @Override
    public IamAutorServ rowBeanToEntity() {
        IamAutorServ entity = new IamAutorServ();
        if (this.getIdAutorServ() != null) {
            entity.setIdAutorServ(this.getIdAutorServ().longValue());
        }
        if (this.getIdAbilOrganiz() != null) {
            if (entity.getIamAbilOrganiz() == null) {
                entity.setIamAbilOrganiz(new IamAbilOrganiz());
            }
            entity.getIamAbilOrganiz().setIdAbilOrganiz(this.getIdAbilOrganiz().longValue());
        }
        entity.setNmServizioWeb(this.getNmServizioWeb());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
