/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.AroFirmaComp;
import it.eng.parer.entity.VolAppartCompVolume;
import it.eng.parer.entity.VolAppartFirmaVolume;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Vol_Appart_Firma_Volume
 *
 */
public class VolAppartFirmaVolumeRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */
    private static final long serialVersionUID = 1L;

    public static VolAppartFirmaVolumeTableDescriptor TABLE_DESCRIPTOR = new VolAppartFirmaVolumeTableDescriptor();

    public VolAppartFirmaVolumeRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAppartFirmaVolume() {
	return getBigDecimal("id_appart_firma_volume");
    }

    public void setIdAppartFirmaVolume(BigDecimal idAppartFirmaVolume) {
	setObject("id_appart_firma_volume", idAppartFirmaVolume);
    }

    public BigDecimal getIdAppartCompVolume() {
	return getBigDecimal("id_appart_comp_volume");
    }

    public void setIdAppartCompVolume(BigDecimal idAppartCompVolume) {
	setObject("id_appart_comp_volume", idAppartCompVolume);
    }

    public BigDecimal getIdFirmaComp() {
	return getBigDecimal("id_firma_comp");
    }

    public void setIdFirmaComp(BigDecimal idFirmaComp) {
	setObject("id_firma_comp", idFirmaComp);
    }

    @Override
    public void entityToRowBean(Object obj) {
	VolAppartFirmaVolume entity = (VolAppartFirmaVolume) obj;

	this.setIdAppartFirmaVolume(entity.getIdAppartFirmaVolume() == null ? null
		: BigDecimal.valueOf(entity.getIdAppartFirmaVolume()));

	if (entity.getVolAppartCompVolume() != null) {
	    this.setIdAppartCompVolume(
		    new BigDecimal(entity.getVolAppartCompVolume().getIdAppartCompVolume()));
	}

	if (entity.getAroFirmaComp() != null) {
	    this.setIdFirmaComp(new BigDecimal(entity.getAroFirmaComp().getIdFirmaComp()));
	}

    }

    @Override
    public VolAppartFirmaVolume rowBeanToEntity() {
	VolAppartFirmaVolume entity = new VolAppartFirmaVolume();
	if (this.getIdAppartFirmaVolume() != null) {
	    entity.setIdAppartFirmaVolume(this.getIdAppartFirmaVolume().longValue());
	}
	if (this.getIdAppartCompVolume() != null) {
	    if (entity.getVolAppartCompVolume() == null) {
		entity.setVolAppartCompVolume(new VolAppartCompVolume());
	    }
	    entity.getVolAppartCompVolume()
		    .setIdAppartCompVolume(this.getIdAppartCompVolume().longValue());
	}
	if (this.getIdFirmaComp() != null) {
	    if (entity.getAroFirmaComp() == null) {
		entity.setAroFirmaComp(new AroFirmaComp());
	    }
	    entity.getAroFirmaComp().setIdFirmaComp(this.getIdFirmaComp().longValue());
	}
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
