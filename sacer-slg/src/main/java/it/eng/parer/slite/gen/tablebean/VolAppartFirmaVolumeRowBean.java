package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.VolAppartFirmaVolume;
import it.eng.parer.entity.VolAppartCompVolume;
import it.eng.parer.entity.AroFirmaComp;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Vol_Appart_Firma_Volume
 *
 */
public class VolAppartFirmaVolumeRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static VolAppartFirmaVolumeTableDescriptor TABLE_DESCRIPTOR = new VolAppartFirmaVolumeTableDescriptor();

    public VolAppartFirmaVolumeRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAppartFirmaVolume() {
        return getBigDecimal("id_appart_firma_volume");
    }

    public void setIdAppartFirmaVolume(BigDecimal id_appart_firma_volume) {
        setObject("id_appart_firma_volume", id_appart_firma_volume);
    }

    public BigDecimal getIdAppartCompVolume() {
        return getBigDecimal("id_appart_comp_volume");
    }

    public void setIdAppartCompVolume(BigDecimal id_appart_comp_volume) {
        setObject("id_appart_comp_volume", id_appart_comp_volume);
    }

    public BigDecimal getIdFirmaComp() {
        return getBigDecimal("id_firma_comp");
    }

    public void setIdFirmaComp(BigDecimal id_firma_comp) {
        setObject("id_firma_comp", id_firma_comp);
    }

    @Override
    public void entityToRowBean(Object obj) {
        VolAppartFirmaVolume entity = (VolAppartFirmaVolume) obj;
        AbstractRecord ar;
        this.setIdAppartFirmaVolume(new BigDecimal(entity.getIdAppartFirmaVolume()));
        if (entity._persistence_get_volAppartCompVolume_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_volAppartCompVolume_vh()).getRow()) != null) {
                this.setIdAppartCompVolume(
                        new BigDecimal((Long) ar.get("VOL_APPART_FIRMA_VOLUME.ID_APPART_COMP_VOLUME")));
            }
        } else {
            if (entity.getVolAppartCompVolume() != null) {
                this.setIdAppartCompVolume(new BigDecimal(entity.getVolAppartCompVolume().getIdAppartCompVolume()));
            }
        }
        if (entity._persistence_get_aroFirmaComp_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_aroFirmaComp_vh()).getRow()) != null) {
                this.setIdFirmaComp(new BigDecimal((Long) ar.get("VOL_APPART_FIRMA_VOLUME.ID_FIRMA_COMP")));
            }
        } else {
            if (entity.getAroFirmaComp() != null) {
                this.setIdFirmaComp(new BigDecimal(entity.getAroFirmaComp().getIdFirmaComp()));
            }
        }
    }

    @Override
    public VolAppartFirmaVolume rowBeanToEntity() {
        VolAppartFirmaVolume entity = new VolAppartFirmaVolume();
        if (this.getIdAppartFirmaVolume() != null) {
            entity.setIdAppartFirmaVolume(this.getIdAppartFirmaVolume().longValue());
        }
        if (this.getIdAppartCompVolume() != null) {
            if (entity.getVolAppartCompVolume() == null) {
                entity.setVolAppartCompVolume(new VolAppartCompVolume());
            }
            entity.getVolAppartCompVolume().setIdAppartCompVolume(this.getIdAppartCompVolume().longValue());
        }
        if (this.getIdFirmaComp() != null) {
            if (entity.getAroFirmaComp() == null) {
                entity.setAroFirmaComp(new AroFirmaComp());
            }
            entity.getAroFirmaComp().setIdFirmaComp(this.getIdFirmaComp().longValue());
        }
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
