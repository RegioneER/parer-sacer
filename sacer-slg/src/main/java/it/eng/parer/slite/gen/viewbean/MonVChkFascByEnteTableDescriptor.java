/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Mon_V_Chk_Fasc_By_Ente
 *
 */
public class MonVChkFascByEnteTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter",
     * comments = "This class was generated by OraTool", date = "Tuesday, 12 December 2017 11:23" )
     */

    public static final String SELECT = "Select * from Mon_V_Chk_Fasc_By_Ente /**/";
    public static final String TABLE_NAME = "Mon_V_Chk_Fasc_By_Ente";
    public static final String COL_ID_ENTE = "id_ente";
    public static final String COL_ID_USER_IAM = "id_user_iam";
    public static final String COL_FL_FASC_CORR = "fl_fasc_corr";
    public static final String COL_FL_FASC_30GG = "fl_fasc_30gg";
    public static final String COL_FL_FASC_B30GG = "fl_fasc_b30gg";
    public static final String COL_FL_FASC_ATTESA_SCHED_CORR = "fl_fasc_attesa_sched_corr";
    public static final String COL_FL_FASC_ATTESA_SCHED_30GG = "fl_fasc_attesa_sched_30gg";
    public static final String COL_FL_FASC_ATTESA_SCHED_B30GG = "fl_fasc_attesa_sched_b30gg";
    public static final String COL_FL_FASC_NOSEL_SCHED_CORR = "fl_fasc_nosel_sched_corr";
    public static final String COL_FL_FASC_NOSEL_SCHED_30GG = "fl_fasc_nosel_sched_30gg";
    public static final String COL_FL_FASC_NOSEL_SCHED_B30GG = "fl_fasc_nosel_sched_b30gg";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
	map.put(COL_ID_ENTE, new ColumnDescriptor(COL_ID_ENTE, Types.DECIMAL, 22, true));
	map.put(COL_ID_USER_IAM, new ColumnDescriptor(COL_ID_USER_IAM, Types.DECIMAL, 22, true));
	map.put(COL_FL_FASC_CORR, new ColumnDescriptor(COL_FL_FASC_CORR, Types.VARCHAR, 1, true));
	map.put(COL_FL_FASC_30GG, new ColumnDescriptor(COL_FL_FASC_30GG, Types.VARCHAR, 1, true));
	map.put(COL_FL_FASC_B30GG, new ColumnDescriptor(COL_FL_FASC_B30GG, Types.VARCHAR, 1, true));
	map.put(COL_FL_FASC_ATTESA_SCHED_CORR,
		new ColumnDescriptor(COL_FL_FASC_ATTESA_SCHED_CORR, Types.VARCHAR, 1, true));
	map.put(COL_FL_FASC_ATTESA_SCHED_30GG,
		new ColumnDescriptor(COL_FL_FASC_ATTESA_SCHED_30GG, Types.VARCHAR, 1, true));
	map.put(COL_FL_FASC_ATTESA_SCHED_B30GG,
		new ColumnDescriptor(COL_FL_FASC_ATTESA_SCHED_B30GG, Types.VARCHAR, 1, true));
	map.put(COL_FL_FASC_NOSEL_SCHED_CORR,
		new ColumnDescriptor(COL_FL_FASC_NOSEL_SCHED_CORR, Types.VARCHAR, 1, true));
	map.put(COL_FL_FASC_NOSEL_SCHED_30GG,
		new ColumnDescriptor(COL_FL_FASC_NOSEL_SCHED_30GG, Types.VARCHAR, 1, true));
	map.put(COL_FL_FASC_NOSEL_SCHED_B30GG,
		new ColumnDescriptor(COL_FL_FASC_NOSEL_SCHED_B30GG, Types.VARCHAR, 1, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
	return map;
    }

    public String getTableName() {
	return TABLE_NAME;
    }

    public String getStatement() {
	return SELECT;
    }

}
