/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.math.BigDecimal;
import java.sql.Timestamp;

import it.eng.parer.viewEntity.AroVLisVolCor;
import it.eng.parer.viewEntity.AroVLisVolCorId;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Aro_V_Lis_Vol_Cor
 *
 */
public class AroVLisVolCorRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter",
     * comments = "This class was generated by OraTool", date = "Monday, 27 April 2015 12:19" )
     */
    private static final long serialVersionUID = 1L;

    public static AroVLisVolCorTableDescriptor TABLE_DESCRIPTOR = new AroVLisVolCorTableDescriptor();

    public AroVLisVolCorRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    public BigDecimal getIdUnitaDoc() {
	return getBigDecimal("id_unita_doc");
    }

    public void setIdUnitaDoc(BigDecimal idUnitaDoc) {
	setObject("id_unita_doc", idUnitaDoc);
    }

    public BigDecimal getIdVolumeConserv() {
	return getBigDecimal("id_volume_conserv");
    }

    public void setIdVolumeConserv(BigDecimal idVolumeConserv) {
	setObject("id_volume_conserv", idVolumeConserv);
    }

    public String getNmVolumeConserv() {
	return getString("nm_volume_conserv");
    }

    public void setNmVolumeConserv(String nmVolumeConserv) {
	setObject("nm_volume_conserv", nmVolumeConserv);
    }

    public Timestamp getDtCreazione() {
	return getTimestamp("dt_creazione");
    }

    public void setDtCreazione(Timestamp dtCreazione) {
	setObject("dt_creazione", dtCreazione);
    }

    public String getTiStatoVolumeConserv() {
	return getString("ti_stato_volume_conserv");
    }

    public void setTiStatoVolumeConserv(String tiStatoVolumeConserv) {
	setObject("ti_stato_volume_conserv", tiStatoVolumeConserv);
    }

    @Override
    public void entityToRowBean(Object obj) {
	AroVLisVolCor entity = (AroVLisVolCor) obj;
	if (entity.getAroVLisVolCorId() != null) {
	    this.setIdUnitaDoc(entity.getAroVLisVolCorId().getIdUnitaDoc());
	    this.setIdVolumeConserv(entity.getAroVLisVolCorId().getIdVolumeConserv());
	}
	this.setNmVolumeConserv(entity.getNmVolumeConserv());
	if (entity.getDtCreazione() != null) {
	    this.setDtCreazione(new Timestamp(entity.getDtCreazione().getTime()));
	}
	this.setTiStatoVolumeConserv(entity.getTiStatoVolumeConserv());
    }

    @Override
    public AroVLisVolCor rowBeanToEntity() {
	AroVLisVolCor entity = new AroVLisVolCor();
	entity.setAroVLisVolCorId(new AroVLisVolCorId());
	entity.getAroVLisVolCorId().setIdUnitaDoc(this.getIdUnitaDoc());
	entity.getAroVLisVolCorId().setIdVolumeConserv(this.getIdVolumeConserv());
	entity.setNmVolumeConserv(this.getNmVolumeConserv());
	entity.setDtCreazione(this.getDtCreazione());
	entity.setTiStatoVolumeConserv(this.getTiStatoVolumeConserv());
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
