/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_V_Ric_Unita_Doc
 *
 */
public class AroVRicUnitaDocTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter",
     * comments = "This class was generated by OraTool", date = "Tuesday, 10 October 2017 11:10" )
     */

    public static final String SELECT = "Select * from Aro_V_Ric_Unita_Doc /**/";
    public static final String TABLE_NAME = "Aro_V_Ric_Unita_Doc";
    public static final String COL_ID_UNITA_DOC = "id_unita_doc";
    public static final String COL_ID_STRUT_UNITA_DOC = "id_strut_unita_doc";
    public static final String COL_CD_REGISTRO_KEY_UNITA_DOC = "cd_registro_key_unita_doc";
    public static final String COL_AA_KEY_UNITA_DOC = "aa_key_unita_doc";
    public static final String COL_CD_KEY_UNITA_DOC = "cd_key_unita_doc";
    public static final String COL_ID_SUB_STRUT = "id_sub_strut";
    public static final String COL_DT_CREAZIONE = "dt_creazione";
    public static final String COL_FL_UNITA_DOC_FIRMATO = "fl_unita_doc_firmato";
    public static final String COL_TI_ESITO_VERIF_FIRME = "ti_esito_verif_firme";
    public static final String COL_DS_MSG_ESITO_VERIF_FIRME = "ds_msg_esito_verif_firme";
    public static final String COL_ID_TIPO_UNITA_DOC = "id_tipo_unita_doc";
    public static final String COL_ID_STRUT_TIPO_UNITA_DOC = "id_strut_tipo_unita_doc";
    public static final String COL_NM_TIPO_UNITA_DOC = "nm_tipo_unita_doc";
    public static final String COL_FL_ESISTE_PROFILO_NORMATIVO = "fl_esiste_profilo_normativo";
    public static final String COL_FL_FORZA_ACCETTAZIONE = "fl_forza_accettazione";
    public static final String COL_FL_FORZA_CONSERVAZIONE = "fl_forza_conservazione";
    public static final String COL_DS_KEY_ORD = "ds_key_ord";
    public static final String COL_DL_OGGETTO_UNITA_DOC = "dl_oggetto_unita_doc";
    public static final String COL_DT_REG_UNITA_DOC = "dt_reg_unita_doc";
    public static final String COL_TI_CONSERVAZIONE = "ti_conservazione";
    public static final String COL_NM_SISTEMA_MIGRAZ = "nm_sistema_migraz";
    public static final String COL_NI_ALLEG = "ni_alleg";
    public static final String COL_NI_ANNESSI = "ni_annessi";
    public static final String COL_NI_ANNOT = "ni_annot";
    public static final String COL_ID_DOC = "id_doc";
    public static final String COL_TI_DOC = "ti_doc";
    public static final String COL_ID_TIPO_DOC = "id_tipo_doc";
    public static final String COL_TI_STATO_DOC = "ti_stato_doc";
    public static final String COL_DL_DOC = "dl_doc";
    public static final String COL_DS_AUTORE_DOC = "ds_autore_doc";
    public static final String COL_CD_KEY_DOC_VERS = "cd_key_doc_vers";
    public static final String COL_FL_FORZA_COLLEGAMENTO = "fl_forza_collegamento";
    public static final String COL_CD_VERSIONE_WS = "cd_versione_ws";
    public static final String COL_FL_AGG_META = "fl_agg_meta";
    public static final String COL_NM_TIPO_DOC_PRINC = "nm_tipo_doc_princ";
    public static final String COL_FL_DOC_AGGIUNTI = "fl_doc_aggiunti";
    public static final String COL_FL_UNITA_DOC_ANNUL = "fl_unita_doc_annul";
    public static final String COL_FL_DOC_ANNUL = "fl_doc_annul";
    public static final String COL_TI_STATO_CONSERVAZIONE = "ti_stato_conservazione";
    public static final String COL_TI_STATO_UD_ELENCO_VERS = "ti_stato_ud_elenco_vers";
    public static final String COL_TI_STATO_DOC_ELENCO_VERS = "ti_stato_doc_elenco_vers";
    public static final String COL_FL_HASH_VERS = "fl_hash_vers";
    public static final String COL_CD_VERSIONE_XSD_UD = "cd_versione_xsd_ud";
    public static final String COL_CD_VERSIONE_XSD_DOC = "cd_versione_xsd_doc";
    public static final String COL_DS_LISTA_STATI_ELENCO_VERS = "ds_lista_stati_elenco_vers";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
	map.put(COL_ID_UNITA_DOC, new ColumnDescriptor(COL_ID_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_ID_STRUT_UNITA_DOC,
		new ColumnDescriptor(COL_ID_STRUT_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_CD_REGISTRO_KEY_UNITA_DOC,
		new ColumnDescriptor(COL_CD_REGISTRO_KEY_UNITA_DOC, Types.VARCHAR, 100, true));
	map.put(COL_AA_KEY_UNITA_DOC,
		new ColumnDescriptor(COL_AA_KEY_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_CD_KEY_UNITA_DOC,
		new ColumnDescriptor(COL_CD_KEY_UNITA_DOC, Types.VARCHAR, 100, true));
	map.put(COL_ID_SUB_STRUT, new ColumnDescriptor(COL_ID_SUB_STRUT, Types.DECIMAL, 22, true));
	map.put(COL_DT_CREAZIONE, new ColumnDescriptor(COL_DT_CREAZIONE, Types.TIMESTAMP, 7, true));
	map.put(COL_FL_UNITA_DOC_FIRMATO,
		new ColumnDescriptor(COL_FL_UNITA_DOC_FIRMATO, Types.VARCHAR, 1, true));
	map.put(COL_TI_ESITO_VERIF_FIRME,
		new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRME, Types.VARCHAR, 20, true));
	map.put(COL_DS_MSG_ESITO_VERIF_FIRME,
		new ColumnDescriptor(COL_DS_MSG_ESITO_VERIF_FIRME, Types.VARCHAR, 254, true));
	map.put(COL_ID_TIPO_UNITA_DOC,
		new ColumnDescriptor(COL_ID_TIPO_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_ID_STRUT_TIPO_UNITA_DOC,
		new ColumnDescriptor(COL_ID_STRUT_TIPO_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_NM_TIPO_UNITA_DOC,
		new ColumnDescriptor(COL_NM_TIPO_UNITA_DOC, Types.VARCHAR, 100, true));
	map.put(COL_FL_ESISTE_PROFILO_NORMATIVO,
		new ColumnDescriptor(COL_FL_ESISTE_PROFILO_NORMATIVO, Types.VARCHAR, 1, true));
	map.put(COL_FL_FORZA_ACCETTAZIONE,
		new ColumnDescriptor(COL_FL_FORZA_ACCETTAZIONE, Types.VARCHAR, 1, true));
	map.put(COL_FL_FORZA_CONSERVAZIONE,
		new ColumnDescriptor(COL_FL_FORZA_CONSERVAZIONE, Types.VARCHAR, 1, true));
	map.put(COL_DS_KEY_ORD, new ColumnDescriptor(COL_DS_KEY_ORD, Types.VARCHAR, 100, true));
	map.put(COL_DL_OGGETTO_UNITA_DOC,
		new ColumnDescriptor(COL_DL_OGGETTO_UNITA_DOC, Types.VARCHAR, 4000, true));
	map.put(COL_DT_REG_UNITA_DOC,
		new ColumnDescriptor(COL_DT_REG_UNITA_DOC, Types.TIMESTAMP, 7, true));
	map.put(COL_TI_CONSERVAZIONE,
		new ColumnDescriptor(COL_TI_CONSERVAZIONE, Types.VARCHAR, 25, true));
	map.put(COL_NM_SISTEMA_MIGRAZ,
		new ColumnDescriptor(COL_NM_SISTEMA_MIGRAZ, Types.VARCHAR, 100, true));
	map.put(COL_NI_ALLEG, new ColumnDescriptor(COL_NI_ALLEG, Types.DECIMAL, 22, true));
	map.put(COL_NI_ANNESSI, new ColumnDescriptor(COL_NI_ANNESSI, Types.DECIMAL, 22, true));
	map.put(COL_NI_ANNOT, new ColumnDescriptor(COL_NI_ANNOT, Types.DECIMAL, 22, true));
	map.put(COL_ID_DOC, new ColumnDescriptor(COL_ID_DOC, Types.DECIMAL, 22, true));
	map.put(COL_TI_DOC, new ColumnDescriptor(COL_TI_DOC, Types.VARCHAR, 20, true));
	map.put(COL_ID_TIPO_DOC, new ColumnDescriptor(COL_ID_TIPO_DOC, Types.DECIMAL, 22, true));
	map.put(COL_TI_STATO_DOC, new ColumnDescriptor(COL_TI_STATO_DOC, Types.VARCHAR, 30, true));
	map.put(COL_DL_DOC, new ColumnDescriptor(COL_DL_DOC, Types.VARCHAR, 4000, true));
	map.put(COL_DS_AUTORE_DOC,
		new ColumnDescriptor(COL_DS_AUTORE_DOC, Types.VARCHAR, 4000, true));
	map.put(COL_CD_KEY_DOC_VERS,
		new ColumnDescriptor(COL_CD_KEY_DOC_VERS, Types.VARCHAR, 100, true));
	map.put(COL_FL_FORZA_COLLEGAMENTO,
		new ColumnDescriptor(COL_FL_FORZA_COLLEGAMENTO, Types.VARCHAR, 1, true));
	map.put(COL_CD_VERSIONE_WS,
		new ColumnDescriptor(COL_CD_VERSIONE_WS, Types.VARCHAR, 100, true));
	map.put(COL_FL_AGG_META, new ColumnDescriptor(COL_FL_AGG_META, Types.VARCHAR, 1, true));
	map.put(COL_NM_TIPO_DOC_PRINC,
		new ColumnDescriptor(COL_NM_TIPO_DOC_PRINC, Types.VARCHAR, 100, true));
	map.put(COL_FL_DOC_AGGIUNTI,
		new ColumnDescriptor(COL_FL_DOC_AGGIUNTI, Types.VARCHAR, 1, true));
	map.put(COL_FL_UNITA_DOC_ANNUL,
		new ColumnDescriptor(COL_FL_UNITA_DOC_ANNUL, Types.VARCHAR, 1, true));
	map.put(COL_FL_DOC_ANNUL, new ColumnDescriptor(COL_FL_DOC_ANNUL, Types.VARCHAR, 1, true));
	map.put(COL_TI_STATO_CONSERVAZIONE,
		new ColumnDescriptor(COL_TI_STATO_CONSERVAZIONE, Types.VARCHAR, 30, true));
	map.put(COL_TI_STATO_UD_ELENCO_VERS,
		new ColumnDescriptor(COL_TI_STATO_UD_ELENCO_VERS, Types.VARCHAR, 50, true));
	map.put(COL_TI_STATO_DOC_ELENCO_VERS,
		new ColumnDescriptor(COL_TI_STATO_DOC_ELENCO_VERS, Types.VARCHAR, 50, true));
	map.put(COL_FL_HASH_VERS, new ColumnDescriptor(COL_FL_HASH_VERS, Types.VARCHAR, 1, true));
	map.put(COL_CD_VERSIONE_XSD_UD,
		new ColumnDescriptor(COL_CD_VERSIONE_XSD_UD, Types.VARCHAR, 100, true));
	map.put(COL_CD_VERSIONE_XSD_DOC,
		new ColumnDescriptor(COL_CD_VERSIONE_XSD_DOC, Types.VARCHAR, 100, true));
	map.put(COL_DS_LISTA_STATI_ELENCO_VERS,
		new ColumnDescriptor(COL_DS_LISTA_STATI_ELENCO_VERS, Types.VARCHAR, 4000, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
	return map;
    }

    public String getTableName() {
	return TABLE_NAME;
    }

    public String getStatement() {
	return SELECT;
    }

}
