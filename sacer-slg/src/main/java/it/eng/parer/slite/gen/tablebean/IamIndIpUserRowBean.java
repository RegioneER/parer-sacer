/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.IamIndIpUser;
import it.eng.parer.entity.IamUser;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Iam_Ind_Ip_User
 *
 */
public class IamIndIpUserRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 February 2014 17:32" )
     */
    private static final long serialVersionUID = 1L;

    public static IamIndIpUserTableDescriptor TABLE_DESCRIPTOR = new IamIndIpUserTableDescriptor();

    public IamIndIpUserRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdIndIpUser() {
        return getBigDecimal("id_ind_ip_user");
    }

    public void setIdIndIpUser(BigDecimal idIndIpUser) {
        setObject("id_ind_ip_user", idIndIpUser);
    }

    public BigDecimal getIdUserIam() {
        return getBigDecimal("id_user_iam");
    }

    public void setIdUserIam(BigDecimal idUserIam) {
        setObject("id_user_iam", idUserIam);
    }

    public String getCdIndIpUser() {
        return getString("cd_ind_ip_user");
    }

    public void setCdIndIpUser(String cdIndIpUser) {
        setObject("cd_ind_ip_user", cdIndIpUser);
    }

    @Override
    public void entityToRowBean(Object obj) {
        IamIndIpUser entity = (IamIndIpUser) obj;

        this.setIdIndIpUser(entity.getIdIndIpUser() == null ? null : BigDecimal.valueOf(entity.getIdIndIpUser()));
        if (entity.getIamUser() != null) {
            this.setIdUserIam(new BigDecimal(entity.getIamUser().getIdUserIam()));
        }
        this.setCdIndIpUser(entity.getCdIndIpUser());
    }

    @Override
    public IamIndIpUser rowBeanToEntity() {
        IamIndIpUser entity = new IamIndIpUser();
        if (this.getIdIndIpUser() != null) {
            entity.setIdIndIpUser(this.getIdIndIpUser().longValue());
        }
        if (this.getIdUserIam() != null) {
            if (entity.getIamUser() == null) {
                entity.setIamUser(new IamUser());
            }
            entity.getIamUser().setIdUserIam(this.getIdUserIam().longValue());
        }
        entity.setCdIndIpUser(this.getCdIndIpUser());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
