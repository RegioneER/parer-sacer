package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.IamIndIpUser;
import it.eng.parer.entity.IamUser;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Iam_Ind_Ip_User
 *
 */
public class IamIndIpUserRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 February 2014 17:32" )
     */

    public static IamIndIpUserTableDescriptor TABLE_DESCRIPTOR = new IamIndIpUserTableDescriptor();

    public IamIndIpUserRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdIndIpUser() {
        return getBigDecimal("id_ind_ip_user");
    }

    public void setIdIndIpUser(BigDecimal id_ind_ip_user) {
        setObject("id_ind_ip_user", id_ind_ip_user);
    }

    public BigDecimal getIdUserIam() {
        return getBigDecimal("id_user_iam");
    }

    public void setIdUserIam(BigDecimal id_user_iam) {
        setObject("id_user_iam", id_user_iam);
    }

    public String getCdIndIpUser() {
        return getString("cd_ind_ip_user");
    }

    public void setCdIndIpUser(String cd_ind_ip_user) {
        setObject("cd_ind_ip_user", cd_ind_ip_user);
    }

    @Override
    public void entityToRowBean(Object obj) {
        IamIndIpUser entity = (IamIndIpUser) obj;
        AbstractRecord ar;
        this.setIdIndIpUser(new BigDecimal(entity.getIdIndIpUser()));
        if ((ar = ((DatabaseValueHolder) entity._persistence_get_iamUser_vh()).getRow()) != null) {
            this.setIdUserIam(new BigDecimal((Long) ar.get("IAM_IND_IP_USER.ID_USER_IAM")));
        }
        this.setCdIndIpUser(entity.getCdIndIpUser());
    }

    @Override
    public IamIndIpUser rowBeanToEntity() {
        IamIndIpUser entity = new IamIndIpUser();
        if (this.getIdIndIpUser() != null) {
            entity.setIdIndIpUser(this.getIdIndIpUser().longValue());
        }
        if (this.getIdUserIam() != null) {
            if (entity.getIamUser() == null) {
                entity.setIamUser(new IamUser());
            }
            entity.getIamUser().setIdUserIam(this.getIdUserIam().longValue());
        }
        entity.setCdIndIpUser(this.getCdIndIpUser());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
