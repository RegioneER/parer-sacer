/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.OrgCategStrut;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Org_Categ_Strut
 *
 */
public class OrgCategStrutRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */
    private static final long serialVersionUID = 1L;

    public static OrgCategStrutTableDescriptor TABLE_DESCRIPTOR = new OrgCategStrutTableDescriptor();

    public OrgCategStrutRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdCategStrut() {
        return getBigDecimal("id_categ_strut");
    }

    public void setIdCategStrut(BigDecimal idCategStrut) {
        setObject("id_categ_strut", idCategStrut);
    }

    public String getCdCategStrut() {
        return getString("cd_categ_strut");
    }

    public void setCdCategStrut(String cdCategStrut) {
        setObject("cd_categ_strut", cdCategStrut);
    }

    public String getDsCategStrut() {
        return getString("ds_categ_strut");
    }

    public void setDsCategStrut(String dsCategStrut) {
        setObject("ds_categ_strut", dsCategStrut);
    }

    @Override
    public void entityToRowBean(Object obj) {
        OrgCategStrut entity = (OrgCategStrut) obj;

        this.setIdCategStrut(entity.getIdCategStrut() == null ? null : BigDecimal.valueOf(entity.getIdCategStrut()));
        this.setCdCategStrut(entity.getCdCategStrut());
        this.setDsCategStrut(entity.getDsCategStrut());
    }

    @Override
    public OrgCategStrut rowBeanToEntity() {
        OrgCategStrut entity = new OrgCategStrut();
        if (this.getIdCategStrut() != null) {
            entity.setIdCategStrut(this.getIdCategStrut().longValue());
        }
        entity.setCdCategStrut(this.getCdCategStrut());
        entity.setDsCategStrut(this.getDsCategStrut());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
