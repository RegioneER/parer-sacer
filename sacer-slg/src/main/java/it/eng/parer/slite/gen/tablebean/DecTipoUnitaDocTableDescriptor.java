/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Dec_Tipo_Unita_Doc
 *
 */
public class DecTipoUnitaDocTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Tuesday, 26 February 2019 15:23" )
     */

    public static final String SELECT = "Select * from Dec_Tipo_Unita_Doc /**/";
    public static final String TABLE_NAME = "Dec_Tipo_Unita_Doc";
    public static final String COL_ID_TIPO_UNITA_DOC = "id_tipo_unita_doc";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_NM_TIPO_UNITA_DOC = "nm_tipo_unita_doc";
    public static final String COL_DS_TIPO_UNITA_DOC = "ds_tipo_unita_doc";
    public static final String COL_CD_SERIE = "cd_serie";
    public static final String COL_DT_ISTITUZ = "dt_istituz";
    public static final String COL_DT_SOPPRES = "dt_soppres";
    public static final String COL_TI_SAVE_FILE = "ti_save_file";
    public static final String COL_ID_CATEG_TIPO_UNITA_DOC = "id_categ_tipo_unita_doc";
    public static final String COL_FL_CREA_TIPO_SERIE_STANDARD = "fl_crea_tipo_serie_standard";
    public static final String COL_NM_TIPO_SERIE_DA_CREARE = "nm_tipo_serie_da_creare";
    public static final String COL_DS_TIPO_SERIE_DA_CREARE = "ds_tipo_serie_da_creare";
    public static final String COL_CD_SERIE_DA_CREARE = "cd_serie_da_creare";
    public static final String COL_DS_SERIE_DA_CREARE = "ds_serie_da_creare";
    public static final String COL_ID_MODELLO_TIPO_SERIE = "id_modello_tipo_serie";
    public static final String COL_ID_TIPO_SERVIZIO = "id_tipo_servizio";
    public static final String COL_ID_TIPO_SERVIZIO_ATTIV = "id_tipo_servizio_attiv";
    public static final String COL_FL_VERS_MANUALE = "fl_vers_manuale";
    public static final String COL_DL_NOTE_TIPO_UD = "dl_note_tipo_ud";
    public static final String COL_ID_TIPO_SERV_ATTIV_TIPO_UD = "id_tipo_serv_attiv_tipo_ud";
    public static final String COL_ID_TIPO_SERV_CONSERV_TIPO_UD = "id_tipo_serv_conserv_tipo_ud";
    public static final String COL_NI_AA_CONSERV = "ni_aa_conserv";
    public static final String COL_FL_CONSERV_UNIFORME = "fl_conserv_uniforme";
    public static final String COL_FL_CONSERV_ILLIMITATA = "fl_conserv_illimitata";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
	map.put(COL_ID_TIPO_UNITA_DOC,
		new ColumnDescriptor(COL_ID_TIPO_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, false));
	map.put(COL_NM_TIPO_UNITA_DOC,
		new ColumnDescriptor(COL_NM_TIPO_UNITA_DOC, Types.VARCHAR, 100, false));
	map.put(COL_DS_TIPO_UNITA_DOC,
		new ColumnDescriptor(COL_DS_TIPO_UNITA_DOC, Types.VARCHAR, 254, false));
	map.put(COL_CD_SERIE, new ColumnDescriptor(COL_CD_SERIE, Types.VARCHAR, 100, false));
	map.put(COL_DT_ISTITUZ, new ColumnDescriptor(COL_DT_ISTITUZ, Types.TIMESTAMP, 7, false));
	map.put(COL_DT_SOPPRES, new ColumnDescriptor(COL_DT_SOPPRES, Types.TIMESTAMP, 7, false));
	map.put(COL_TI_SAVE_FILE, new ColumnDescriptor(COL_TI_SAVE_FILE, Types.VARCHAR, 20, false));
	map.put(COL_ID_CATEG_TIPO_UNITA_DOC,
		new ColumnDescriptor(COL_ID_CATEG_TIPO_UNITA_DOC, Types.DECIMAL, 22, false));
	map.put(COL_FL_CREA_TIPO_SERIE_STANDARD,
		new ColumnDescriptor(COL_FL_CREA_TIPO_SERIE_STANDARD, Types.VARCHAR, 30, false));
	map.put(COL_NM_TIPO_SERIE_DA_CREARE,
		new ColumnDescriptor(COL_NM_TIPO_SERIE_DA_CREARE, Types.VARCHAR, 100, false));
	map.put(COL_DS_TIPO_SERIE_DA_CREARE,
		new ColumnDescriptor(COL_DS_TIPO_SERIE_DA_CREARE, Types.VARCHAR, 254, false));
	map.put(COL_CD_SERIE_DA_CREARE,
		new ColumnDescriptor(COL_CD_SERIE_DA_CREARE, Types.VARCHAR, 100, false));
	map.put(COL_DS_SERIE_DA_CREARE,
		new ColumnDescriptor(COL_DS_SERIE_DA_CREARE, Types.VARCHAR, 254, false));
	map.put(COL_ID_MODELLO_TIPO_SERIE,
		new ColumnDescriptor(COL_ID_MODELLO_TIPO_SERIE, Types.DECIMAL, 22, false));
	map.put(COL_ID_TIPO_SERVIZIO,
		new ColumnDescriptor(COL_ID_TIPO_SERVIZIO, Types.DECIMAL, 22, false));
	map.put(COL_ID_TIPO_SERVIZIO_ATTIV,
		new ColumnDescriptor(COL_ID_TIPO_SERVIZIO_ATTIV, Types.DECIMAL, 22, false));
	map.put(COL_FL_VERS_MANUALE,
		new ColumnDescriptor(COL_FL_VERS_MANUALE, Types.VARCHAR, 1, false));
	map.put(COL_DL_NOTE_TIPO_UD,
		new ColumnDescriptor(COL_DL_NOTE_TIPO_UD, Types.VARCHAR, 1024, false));
	map.put(COL_ID_TIPO_SERV_ATTIV_TIPO_UD,
		new ColumnDescriptor(COL_ID_TIPO_SERV_ATTIV_TIPO_UD, Types.DECIMAL, 22, false));
	map.put(COL_ID_TIPO_SERV_CONSERV_TIPO_UD,
		new ColumnDescriptor(COL_ID_TIPO_SERV_CONSERV_TIPO_UD, Types.DECIMAL, 22, false));
	map.put(COL_NI_AA_CONSERV,
		new ColumnDescriptor(COL_NI_AA_CONSERV, Types.DECIMAL, 22, false));
	map.put(COL_FL_CONSERV_ILLIMITATA,
		new ColumnDescriptor(COL_FL_CONSERV_ILLIMITATA, Types.VARCHAR, 1, false));
	map.put(COL_FL_CONSERV_UNIFORME,
		new ColumnDescriptor(COL_FL_CONSERV_UNIFORME, Types.VARCHAR, 1, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
	return map;
    }

    public String getTableName() {
	return TABLE_NAME;
    }

    public String getStatement() {
	return SELECT;
    }

}
