package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.VrsDatiSessioneVers;
import it.eng.parer.entity.VrsSessioneVers;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Vrs_Dati_Sessione_Vers
 *
 */
public class VrsDatiSessioneVersRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static VrsDatiSessioneVersTableDescriptor TABLE_DESCRIPTOR = new VrsDatiSessioneVersTableDescriptor();

    public VrsDatiSessioneVersRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdDatiSessioneVers() {
        return getBigDecimal("id_dati_sessione_vers");
    }

    public void setIdDatiSessioneVers(BigDecimal id_dati_sessione_vers) {
        setObject("id_dati_sessione_vers", id_dati_sessione_vers);
    }

    public BigDecimal getIdSessioneVers() {
        return getBigDecimal("id_sessione_vers");
    }

    public void setIdSessioneVers(BigDecimal id_sessione_vers) {
        setObject("id_sessione_vers", id_sessione_vers);
    }

    public BigDecimal getPgDatiSessioneVers() {
        return getBigDecimal("pg_dati_sessione_vers");
    }

    public void setPgDatiSessioneVers(BigDecimal pg_dati_sessione_vers) {
        setObject("pg_dati_sessione_vers", pg_dati_sessione_vers);
    }

    public String getTiDatiSessioneVers() {
        return getString("ti_dati_sessione_vers");
    }

    public void setTiDatiSessioneVers(String ti_dati_sessione_vers) {
        setObject("ti_dati_sessione_vers", ti_dati_sessione_vers);
    }

    public BigDecimal getNiFile() {
        return getBigDecimal("ni_file");
    }

    public void setNiFile(BigDecimal ni_file) {
        setObject("ni_file", ni_file);
    }

    public String getCdKeyAlleg() {
        return getString("cd_key_alleg");
    }

    public void setCdKeyAlleg(String cd_key_alleg) {
        setObject("cd_key_alleg", cd_key_alleg);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal id_strut) {
        setObject("id_strut", id_strut);
    }

    @Override
    public void entityToRowBean(Object obj) {
        VrsDatiSessioneVers entity = (VrsDatiSessioneVers) obj;
        AbstractRecord ar;
        this.setIdDatiSessioneVers(new BigDecimal(entity.getIdDatiSessioneVers()));
        if (entity._persistence_get_vrsSessioneVers_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_vrsSessioneVers_vh()).getRow()) != null) {
                this.setIdSessioneVers(new BigDecimal((Long) ar.get("VRS_DATI_SESSIONE_VERS.ID_SESSIONE_VERS")));
            }
        } else {
            if (entity.getVrsSessioneVers() != null) {
                this.setIdSessioneVers(new BigDecimal(entity.getVrsSessioneVers().getIdSessioneVers()));
            }
        }
        this.setPgDatiSessioneVers(entity.getPgDatiSessioneVers());
        this.setTiDatiSessioneVers(entity.getTiDatiSessioneVers());
        this.setNiFile(entity.getNiFile());
        this.setCdKeyAlleg(entity.getCdKeyAlleg());
        this.setIdStrut(entity.getIdStrut());
    }

    @Override
    public VrsDatiSessioneVers rowBeanToEntity() {
        VrsDatiSessioneVers entity = new VrsDatiSessioneVers();
        if (this.getIdDatiSessioneVers() != null) {
            entity.setIdDatiSessioneVers(this.getIdDatiSessioneVers().longValue());
        }
        if (this.getIdSessioneVers() != null) {
            if (entity.getVrsSessioneVers() == null) {
                entity.setVrsSessioneVers(new VrsSessioneVers());
            }
            entity.getVrsSessioneVers().setIdSessioneVers(this.getIdSessioneVers().longValue());
        }
        entity.setPgDatiSessioneVers(this.getPgDatiSessioneVers());
        entity.setTiDatiSessioneVers(this.getTiDatiSessioneVers());
        entity.setNiFile(this.getNiFile());
        entity.setCdKeyAlleg(this.getCdKeyAlleg());
        entity.setIdStrut(this.getIdStrut());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
