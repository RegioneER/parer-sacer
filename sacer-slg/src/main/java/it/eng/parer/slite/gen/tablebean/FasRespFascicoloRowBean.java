package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.FasRespFascicolo;
import it.eng.parer.entity.FasFascicolo;
import it.eng.parer.entity.constraint.FasRespFascicolo.TiOggResp;

import java.math.BigDecimal;

/**
 * RowBean per la tabella Fas_Resp_Fascicolo
 * 
 * Modified by Moretti_Lu (15/12/2017)
 *
 */
public class FasRespFascicoloRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 14 December 2017 15:22" )
     */

    public static FasRespFascicoloTableDescriptor TABLE_DESCRIPTOR = new FasRespFascicoloTableDescriptor();

    public FasRespFascicoloRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdRespFascicolo() {
        return getBigDecimal("id_resp_fascicolo");
    }

    public void setIdRespFascicolo(BigDecimal id_resp_fascicolo) {
        setObject("id_resp_fascicolo", id_resp_fascicolo);
    }

    public BigDecimal getIdFascicolo() {
        return getBigDecimal("id_fascicolo");
    }

    public void setIdFascicolo(BigDecimal id_fascicolo) {
        setObject("id_fascicolo", id_fascicolo);
    }

    public String getTiOggResp() {
        return getString("ti_ogg_resp");
    }

    public void setTiOggResp(String ti_ogg_resp) {
        setObject("ti_ogg_resp", ti_ogg_resp);
    }

    public String getTiResp() {
        return getString("ti_resp");
    }

    public void setTiResp(String ti_resp) {
        setObject("ti_resp", ti_resp);
    }

    public String getNmNomeResp() {
        return getString("nm_nome_resp");
    }

    public void setNmNomeResp(String nm_nome_resp) {
        setObject("nm_nome_resp", nm_nome_resp);
    }

    public String getNmCognResp() {
        return getString("nm_cogn_resp");
    }

    public void setNmCognResp(String nm_cogn_resp) {
        setObject("nm_cogn_resp", nm_cogn_resp);
    }

    public String getCdResp() {
        return getString("cd_resp");
    }

    public void setCdResp(String cd_resp) {
        setObject("cd_resp", cd_resp);
    }

    public String getTiCdResp() {
        return getString("ti_cd_resp");
    }

    public void setTiCdResp(String ti_cd_resp) {
        setObject("ti_cd_resp", ti_cd_resp);
    }

    @Override
    public void entityToRowBean(Object obj) {
        FasRespFascicolo entity = (FasRespFascicolo) obj;
        AbstractRecord ar;
        this.setIdRespFascicolo(new BigDecimal(entity.getIdRespFascicolo()));
        if (entity._persistence_get_fasFascicolo_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_fasFascicolo_vh()).getRow()) != null) {
                this.setIdFascicolo(new BigDecimal((Long) ar.get("FAS_RESP_FASCICOLO.ID_FASCICOLO")));
            }
        } else {
            if (entity.getFasFascicolo() != null) {
                this.setIdFascicolo(new BigDecimal(entity.getFasFascicolo().getIdFascicolo()));
            }
        }
        this.setTiOggResp(entity.getTiOggResp().name());
        this.setTiResp(entity.getTiResp());
        this.setNmNomeResp(entity.getNmNomeResp());
        this.setNmCognResp(entity.getNmCognResp());
        this.setCdResp(entity.getCdResp());
        this.setTiCdResp(entity.getTiCdResp());
    }

    @Override
    public FasRespFascicolo rowBeanToEntity() {
        FasRespFascicolo entity = new FasRespFascicolo();
        if (this.getIdRespFascicolo() != null) {
            entity.setIdRespFascicolo(this.getIdRespFascicolo().longValue());
        }
        if (this.getIdFascicolo() != null) {
            if (entity.getFasFascicolo() == null) {
                entity.setFasFascicolo(new FasFascicolo());
            }
            entity.getFasFascicolo().setIdFascicolo(this.getIdFascicolo().longValue());
        }
        entity.setTiOggResp(TiOggResp.valueOf(this.getTiOggResp()));
        entity.setTiResp(this.getTiResp());
        entity.setNmNomeResp(this.getNmNomeResp());
        entity.setNmCognResp(this.getNmCognResp());
        entity.setCdResp(this.getCdResp());
        entity.setTiCdResp(this.getTiCdResp());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }
}