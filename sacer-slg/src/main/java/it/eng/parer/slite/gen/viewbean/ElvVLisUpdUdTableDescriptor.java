/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.viewbean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Elv_V_Lis_Upd_Ud
 *
 */
public class ElvVLisUpdUdTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter",
     * comments = "This class was generated by OraTool", date = "Friday, 19 October 2018 11:20" )
     */

    public static final String SELECT = "Select * from Elv_V_Lis_Upd_Ud /**/";
    public static final String TABLE_NAME = "Elv_V_Lis_Udp_Ud";
    public static final String COL_ID_ELENCO_VERS = "id_elenco_vers";
    public static final String COL_ID_UNITA_DOC = "id_unita_doc";
    public static final String COL_ID_STRUT_UNITA_DOC = "id_strut_unita_doc";
    public static final String COL_CD_REGISTRO_KEY_UNITA_DOC = "cd_registro_key_unita_doc";
    public static final String COL_AA_KEY_UNITA_DOC = "aa_key_unita_doc";
    public static final String COL_CD_KEY_UNITA_DOC = "cd_key_unita_doc";
    public static final String COL_DS_KEY_ORD = "ds_key_ord";
    public static final String COL_TI_STATO_UPD_ELENCO_VERS = "ti_stato_upd_elenco_vers";
    public static final String COL_TI_STATO_CONSERVAZIONE = "ti_stato_conservazione";
    public static final String COL_ID_UPD_UNITA_DOC = "id_upd_unita_doc";
    public static final String COL_PG_UPD_UNITA_DOC = "pg_upd_unita_doc";
    public static final String COL_TS_INI_SES = "ts_ini_ses";
    public static final String COL_DS_URN_UPD_UNITA_DOC = "ds_urn_upd_unita_doc";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
	map.put(COL_ID_ELENCO_VERS,
		new ColumnDescriptor(COL_ID_ELENCO_VERS, Types.DECIMAL, 22, true));
	map.put(COL_ID_UNITA_DOC, new ColumnDescriptor(COL_ID_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_ID_STRUT_UNITA_DOC,
		new ColumnDescriptor(COL_ID_STRUT_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_CD_REGISTRO_KEY_UNITA_DOC,
		new ColumnDescriptor(COL_CD_REGISTRO_KEY_UNITA_DOC, Types.VARCHAR, 100, true));
	map.put(COL_AA_KEY_UNITA_DOC,
		new ColumnDescriptor(COL_AA_KEY_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_CD_KEY_UNITA_DOC,
		new ColumnDescriptor(COL_CD_KEY_UNITA_DOC, Types.VARCHAR, 100, true));
	map.put(COL_DS_KEY_ORD, new ColumnDescriptor(COL_DS_KEY_ORD, Types.VARCHAR, 100, true));
	map.put(COL_TI_STATO_UPD_ELENCO_VERS,
		new ColumnDescriptor(COL_TI_STATO_UPD_ELENCO_VERS, Types.VARCHAR, 50, true));
	map.put(COL_TI_STATO_CONSERVAZIONE,
		new ColumnDescriptor(COL_TI_STATO_CONSERVAZIONE, Types.VARCHAR, 30, true));
	map.put(COL_ID_UPD_UNITA_DOC,
		new ColumnDescriptor(COL_ID_UPD_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_PG_UPD_UNITA_DOC,
		new ColumnDescriptor(COL_PG_UPD_UNITA_DOC, Types.DECIMAL, 22, true));
	map.put(COL_TS_INI_SES, new ColumnDescriptor(COL_TS_INI_SES, Types.TIMESTAMP, 11, false));
	map.put(COL_DS_URN_UPD_UNITA_DOC,
		new ColumnDescriptor(COL_DS_URN_UPD_UNITA_DOC, Types.VARCHAR, 283, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
	return map;
    }

    public String getTableName() {
	return TABLE_NAME;
    }

    public String getStatement() {
	return SELECT;
    }

}
