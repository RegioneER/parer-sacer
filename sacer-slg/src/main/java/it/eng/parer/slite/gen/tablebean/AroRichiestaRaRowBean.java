/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;
import java.sql.Timestamp;

import it.eng.parer.entity.AroRichiestaRa;
import it.eng.parer.entity.IamUser;
import it.eng.parer.entity.OrgStrut;
import it.eng.parer.entity.constraint.AroRichiestaRa.AroRichiestaTiStato;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Aro_Richiesta_Ra
 *
 */
public class AroRichiestaRaRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 19 June 2019 16:25" )
     */
    private static final long serialVersionUID = 1L;

    public static AroRichiestaRaTableDescriptor TABLE_DESCRIPTOR = new AroRichiestaRaTableDescriptor();

    public AroRichiestaRaRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdRichiestaRa() {
        return getBigDecimal("id_richiesta_ra");
    }

    public void setIdRichiestaRa(BigDecimal idRichiestaRa) {
        setObject("id_richiesta_ra", idRichiestaRa);
    }

    public Timestamp getTsInizio() {
        return getTimestamp("ts_inizio");
    }

    public void setTsInizio(Timestamp tsInizio) {
        setObject("ts_inizio", tsInizio);
    }

    public Timestamp getTsFine() {
        return getTimestamp("ts_fine");
    }

    public void setTsFine(Timestamp tsFine) {
        setObject("ts_fine", tsFine);
    }

    public BigDecimal getPriorita() {
        return getBigDecimal("priorita");
    }

    public void setPriorita(BigDecimal priorita) {
        setObject("priorita", priorita);
    }

    public String getTiStato() {
        return getString("ti_stato");
    }

    public void setTiStato(String tiStato) {
        setObject("ti_stato", tiStato);
    }

    public String getCdErrore() {
        return getString("cd_errore");
    }

    public void setCdErrore(String cdErrore) {
        setObject("cd_errore", cdErrore);
    }

    public String getNote() {
        return getString("note");
    }

    public void setNote(String note) {
        setObject("note", note);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal idStrut) {
        setObject("id_strut", idStrut);
    }

    public BigDecimal getIdUserIam() {
        return getBigDecimal("id_user_iam");
    }

    public void setIdUserIam(BigDecimal idUserIam) {
        setObject("id_user_iam", idUserIam);
    }

    @Override
    public void entityToRowBean(Object obj) {
        AroRichiestaRa entity = (AroRichiestaRa) obj;
        this.setIdRichiestaRa(entity.getIdRichiestaRa() == null ? null : BigDecimal.valueOf(entity.getIdRichiestaRa()));
        if (entity.getTsInizio() != null) {
            this.setTsInizio(new Timestamp(entity.getTsInizio().getTime()));
        }
        if (entity.getTsFine() != null) {
            this.setTsFine(new Timestamp(entity.getTsFine().getTime()));
        }
        this.setPriorita(entity.getPriorita());
        this.setTiStato(entity.getTiStato().name());
        this.setCdErrore(entity.getCdErrore());
        this.setNote(entity.getNote());

        if (entity.getOrgStrut() != null) {
            this.setIdStrut(new BigDecimal(entity.getOrgStrut().getIdStrut()));
        }

        if (entity.getIamUser() != null) {
            this.setIdUserIam(new BigDecimal(entity.getIamUser().getIdUserIam()));
        }

    }

    @Override
    public AroRichiestaRa rowBeanToEntity() {
        AroRichiestaRa entity = new AroRichiestaRa();
        if (this.getIdRichiestaRa() != null) {
            entity.setIdRichiestaRa(this.getIdRichiestaRa().longValue());
        }
        entity.setTsInizio(this.getTsInizio());
        entity.setTsFine(this.getTsFine());
        entity.setPriorita(this.getPriorita());
        entity.setTiStato(AroRichiestaTiStato.valueOf(this.getTiStato()));
        entity.setCdErrore(this.getCdErrore());
        entity.setNote(this.getNote());
        if (this.getIdStrut() != null) {
            if (entity.getOrgStrut() == null) {
                entity.setOrgStrut(new OrgStrut());
            }
            entity.getOrgStrut().setIdStrut(this.getIdStrut().longValue());
        }
        if (this.getIdUserIam() != null) {
            if (entity.getIamUser() == null) {
                entity.setIamUser(new IamUser());
            }
            entity.getIamUser().setIdUserIam(this.getIdUserIam().longValue());
        }
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
