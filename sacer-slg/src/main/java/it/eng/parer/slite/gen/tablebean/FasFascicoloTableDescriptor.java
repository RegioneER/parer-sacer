package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * @author Sloth
 *
 *         Bean per la tabella Fas_Fascicolo
 *
 */
public class FasFascicoloTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 13 December 2017 14:32" )
     */
    public static final String SELECT = "Select * from Fas_Fascicolo /**/";
    public static final String TABLE_NAME = "Fas_Fascicolo";
    public static final String COL_ID_FASCICOLO = "id_fascicolo";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_AA_FASCICOLO = "aa_fascicolo";
    public static final String COL_CD_KEY_FASCICOLO = "cd_key_fascicolo";
    public static final String COL_DT_ANNULL = "dt_annull";
    public static final String COL_TS_INI_SES = "ts_ini_ses";
    public static final String COL_TS_FINE_SES = "ts_fine_ses";
    public static final String COL_CD_IND_IP_CLIENT = "cd_ind_ip_client";
    public static final String COL_CD_IND_SERVER = "cd_ind_server";
    public static final String COL_ID_USER_IAM_VERS = "id_user_iam_vers";
    public static final String COL_ID_TIPO_FASCICOLO = "id_tipo_fascicolo";
    public static final String COL_TI_CONSERVAZIONE = "ti_conservazione";
    public static final String COL_ID_SISTEMA_MIGRAZ = "id_sistema_migraz";
    public static final String COL_FL_FORZA_CONTR_CLASSIF = "fl_forza_contr_classif";
    public static final String COL_FL_FORZA_CONTR_NUMERO = "fl_forza_contr_numero";
    public static final String COL_FL_FORZA_CONTR_COLLEG = "fl_forza_contr_colleg";
    public static final String COL_CD_INDICE_CLASSIF = "cd_indice_classif";
    public static final String COL_DS_INDICE_CLASSIF = "ds_indice_classif";
    public static final String COL_ID_VOCE_TITOL = "id_voce_titol";
    public static final String COL_DS_OGGETTO_FASCICOLO = "ds_oggetto_fascicolo";
    public static final String COL_DT_APE_FASCICOLO = "dt_ape_fascicolo";
    public static final String COL_DT_CHIU_FASCICOLO = "dt_chiu_fascicolo";
    public static final String COL_NI_AA_CONSERVAZIONE = "ni_aa_conservazione";
    public static final String COL_CD_LIVELLO_RISERV = "cd_livello_riserv";
    public static final String COL_CD_PROC_AMMIN = "cd_proc_ammin";
    public static final String COL_DS_PROC_AMMIN = "ds_proc_ammin";
    public static final String COL_DS_NOTA = "ds_nota";
    public static final String COL_CD_IPA_AMMIN_TITOL = "cd_ipa_ammin_titol";
    public static final String COL_DS_AMMIN_TITOL = "ds_ammin_titol";
    public static final String COL_AA_FASCICOLO_PADRE = "aa_fascicolo_padre";
    public static final String COL_CD_KEY_FASCICOLO_PADRE = "cd_key_fascicolo_padre";
    public static final String COL_DS_OGGETTO_FASCICOLO_PADRE = "ds_oggetto_fascicolo_padre";
    public static final String COL_ID_FASCICOLO_PADRE = "id_fascicolo_padre";
    public static final String COL_CD_KEY_ORD = "cd_key_ord";
    public static final String COL_NI_UNITA_DOC = "ni_unita_doc";
    public static final String COL_NI_SOTTO_FASCICOLI = "ni_sotto_fascicoli";
    public static final String COL_TI_STATO_FASC_ELENCO_VERS = "ti_stato_fasc_elenco_vers";
    public static final String COL_TI_STATO_CONSERVAZIONE = "ti_stato_conservazione";
    public static final String COL_FL_SES_FASCICOLO_KO = "fl_ses_fascicolo_ko";
    public static final String COL_ID_ELENCO_VERS_FASC = "id_elenco_vers_fasc";
    public static final String COL_ID_UNITA_DOC_FIRST = "id_unita_doc_first";
    public static final String COL_ID_UNITA_DOC_LAST = "id_unita_doc_last";
    public static final String COL_NT_ANNUL = "nt_annul";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_FASCICOLO, new ColumnDescriptor(COL_ID_FASCICOLO, Types.DECIMAL, 22, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, false));
        map.put(COL_AA_FASCICOLO, new ColumnDescriptor(COL_AA_FASCICOLO, Types.DECIMAL, 22, false));
        map.put(COL_CD_KEY_FASCICOLO, new ColumnDescriptor(COL_CD_KEY_FASCICOLO, Types.VARCHAR, 100, false));
        map.put(COL_DT_ANNULL, new ColumnDescriptor(COL_DT_ANNULL, Types.TIMESTAMP, 7, false));
        map.put(COL_TS_INI_SES, new ColumnDescriptor(COL_TS_INI_SES, Types.TIMESTAMP, 11, false));
        map.put(COL_TS_FINE_SES, new ColumnDescriptor(COL_TS_FINE_SES, Types.TIMESTAMP, 11, false));
        map.put(COL_CD_IND_IP_CLIENT, new ColumnDescriptor(COL_CD_IND_IP_CLIENT, Types.VARCHAR, 100, false));
        map.put(COL_CD_IND_SERVER, new ColumnDescriptor(COL_CD_IND_SERVER, Types.VARCHAR, 100, false));
        map.put(COL_ID_USER_IAM_VERS, new ColumnDescriptor(COL_ID_USER_IAM_VERS, Types.DECIMAL, 22, false));
        map.put(COL_ID_TIPO_FASCICOLO, new ColumnDescriptor(COL_ID_TIPO_FASCICOLO, Types.DECIMAL, 22, false));
        map.put(COL_TI_CONSERVAZIONE, new ColumnDescriptor(COL_TI_CONSERVAZIONE, Types.VARCHAR, 30, false));
        map.put(COL_ID_SISTEMA_MIGRAZ, new ColumnDescriptor(COL_ID_SISTEMA_MIGRAZ, Types.DECIMAL, 22, false));
        map.put(COL_FL_FORZA_CONTR_CLASSIF, new ColumnDescriptor(COL_FL_FORZA_CONTR_CLASSIF, Types.VARCHAR, 1, false));
        map.put(COL_FL_FORZA_CONTR_NUMERO, new ColumnDescriptor(COL_FL_FORZA_CONTR_NUMERO, Types.VARCHAR, 1, false));
        map.put(COL_FL_FORZA_CONTR_COLLEG, new ColumnDescriptor(COL_FL_FORZA_CONTR_COLLEG, Types.VARCHAR, 1, false));
        map.put(COL_CD_INDICE_CLASSIF, new ColumnDescriptor(COL_CD_INDICE_CLASSIF, Types.VARCHAR, 100, false));
        map.put(COL_DS_INDICE_CLASSIF, new ColumnDescriptor(COL_DS_INDICE_CLASSIF, Types.VARCHAR, 254, false));
        map.put(COL_ID_VOCE_TITOL, new ColumnDescriptor(COL_ID_VOCE_TITOL, Types.DECIMAL, 22, false));
        map.put(COL_DS_OGGETTO_FASCICOLO, new ColumnDescriptor(COL_DS_OGGETTO_FASCICOLO, Types.VARCHAR, 4000, false));
        map.put(COL_DT_APE_FASCICOLO, new ColumnDescriptor(COL_DT_APE_FASCICOLO, Types.TIMESTAMP, 7, false));
        map.put(COL_DT_CHIU_FASCICOLO, new ColumnDescriptor(COL_DT_CHIU_FASCICOLO, Types.TIMESTAMP, 7, false));
        map.put(COL_NI_AA_CONSERVAZIONE, new ColumnDescriptor(COL_NI_AA_CONSERVAZIONE, Types.DECIMAL, 22, false));
        map.put(COL_CD_LIVELLO_RISERV, new ColumnDescriptor(COL_CD_LIVELLO_RISERV, Types.VARCHAR, 100, false));
        map.put(COL_CD_PROC_AMMIN, new ColumnDescriptor(COL_CD_PROC_AMMIN, Types.VARCHAR, 100, false));
        map.put(COL_DS_PROC_AMMIN, new ColumnDescriptor(COL_DS_PROC_AMMIN, Types.VARCHAR, 100, false));
        map.put(COL_DS_NOTA, new ColumnDescriptor(COL_DS_NOTA, Types.VARCHAR, 4000, false));
        map.put(COL_CD_IPA_AMMIN_TITOL, new ColumnDescriptor(COL_CD_IPA_AMMIN_TITOL, Types.VARCHAR, 100, false));
        map.put(COL_DS_AMMIN_TITOL, new ColumnDescriptor(COL_DS_AMMIN_TITOL, Types.VARCHAR, 254, false));
        map.put(COL_AA_FASCICOLO_PADRE, new ColumnDescriptor(COL_AA_FASCICOLO_PADRE, Types.DECIMAL, 22, false));
        map.put(COL_CD_KEY_FASCICOLO_PADRE,
                new ColumnDescriptor(COL_CD_KEY_FASCICOLO_PADRE, Types.VARCHAR, 100, false));
        map.put(COL_DS_OGGETTO_FASCICOLO_PADRE,
                new ColumnDescriptor(COL_DS_OGGETTO_FASCICOLO_PADRE, Types.VARCHAR, 4000, false));
        map.put(COL_ID_FASCICOLO_PADRE, new ColumnDescriptor(COL_ID_FASCICOLO_PADRE, Types.DECIMAL, 22, false));
        map.put(COL_CD_KEY_ORD, new ColumnDescriptor(COL_CD_KEY_ORD, Types.VARCHAR, 100, false));
        map.put(COL_NI_UNITA_DOC, new ColumnDescriptor(COL_NI_UNITA_DOC, Types.DECIMAL, 22, false));
        map.put(COL_NI_SOTTO_FASCICOLI, new ColumnDescriptor(COL_NI_SOTTO_FASCICOLI, Types.DECIMAL, 22, false));
        map.put(COL_TI_STATO_FASC_ELENCO_VERS,
                new ColumnDescriptor(COL_TI_STATO_FASC_ELENCO_VERS, Types.VARCHAR, 50, false));
        map.put(COL_TI_STATO_CONSERVAZIONE, new ColumnDescriptor(COL_TI_STATO_CONSERVAZIONE, Types.VARCHAR, 30, false));
        map.put(COL_FL_SES_FASCICOLO_KO, new ColumnDescriptor(COL_FL_SES_FASCICOLO_KO, Types.VARCHAR, 1, false));
        map.put(COL_ID_ELENCO_VERS_FASC, new ColumnDescriptor(COL_ID_ELENCO_VERS_FASC, Types.DECIMAL, 22, false));
        map.put(COL_ID_UNITA_DOC_FIRST, new ColumnDescriptor(COL_ID_UNITA_DOC_FIRST, Types.DECIMAL, 22, false));
        map.put(COL_ID_UNITA_DOC_LAST, new ColumnDescriptor(COL_ID_UNITA_DOC_LAST, Types.DECIMAL, 22, false));
        map.put(COL_NT_ANNUL, new ColumnDescriptor(COL_NT_ANNUL, Types.VARCHAR, 2000, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }
}