/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * @author Sloth
 *
 *         Bean per la tabella Org_Ente
 *
 */
public class OrgEnteTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Friday, 11 October 2019 16:13" )
     */

    public static final String SELECT = "Select * from Org_Ente /**/";
    public static final String TABLE_NAME = "Org_Ente";
    public static final String COL_ID_ENTE = "id_ente";
    public static final String COL_ID_AMBIENTE = "id_ambiente";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_DS_ENTE = "ds_ente";
    public static final String COL_ID_AMBITO_TERRIT = "id_ambito_territ";
    public static final String COL_ID_CATEG_ENTE = "id_categ_ente";
    public static final String COL_TIPO_DEF_TEMPLATE_ENTE = "tipo_def_template_ente";
    public static final String COL_CD_ENTE_NORMALIZ = "cd_ente_normaliz";
    public static final String COL_DT_INI_VAL_APPART_AMBIENTE = "dt_ini_val_appart_ambiente";
    public static final String COL_DT_FIN_VAL_APPART_AMBIENTE = "dt_fin_val_appart_ambiente";
    public static final String COL_DT_FINE_VAL = "dt_fine_val";
    public static final String COL_DT_INI_VAL = "dt_ini_val";
    public static final String COL_FL_CESSATO = "fl_cessato";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
	map.put(COL_ID_ENTE, new ColumnDescriptor(COL_ID_ENTE, Types.DECIMAL, 22, true));
	map.put(COL_ID_AMBIENTE, new ColumnDescriptor(COL_ID_AMBIENTE, Types.DECIMAL, 22, false));
	map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, false));
	map.put(COL_DS_ENTE, new ColumnDescriptor(COL_DS_ENTE, Types.VARCHAR, 254, false));
	map.put(COL_ID_AMBITO_TERRIT,
		new ColumnDescriptor(COL_ID_AMBITO_TERRIT, Types.DECIMAL, 22, false));
	map.put(COL_ID_CATEG_ENTE,
		new ColumnDescriptor(COL_ID_CATEG_ENTE, Types.DECIMAL, 22, false));
	map.put(COL_TIPO_DEF_TEMPLATE_ENTE,
		new ColumnDescriptor(COL_TIPO_DEF_TEMPLATE_ENTE, Types.VARCHAR, 30, false));
	map.put(COL_CD_ENTE_NORMALIZ,
		new ColumnDescriptor(COL_CD_ENTE_NORMALIZ, Types.VARCHAR, 100, false));
	map.put(COL_DT_INI_VAL_APPART_AMBIENTE,
		new ColumnDescriptor(COL_DT_INI_VAL_APPART_AMBIENTE, Types.TIMESTAMP, 7, false));
	map.put(COL_DT_FIN_VAL_APPART_AMBIENTE,
		new ColumnDescriptor(COL_DT_FIN_VAL_APPART_AMBIENTE, Types.TIMESTAMP, 7, false));
	map.put(COL_DT_FINE_VAL, new ColumnDescriptor(COL_DT_FINE_VAL, Types.TIMESTAMP, 7, false));
	map.put(COL_DT_INI_VAL, new ColumnDescriptor(COL_DT_INI_VAL, Types.TIMESTAMP, 7, false));
	map.put(COL_FL_CESSATO, new ColumnDescriptor(COL_FL_CESSATO, Types.VARCHAR, 1, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
	return map;
    }

    public String getTableName() {
	return TABLE_NAME;
    }

    public String getStatement() {
	return SELECT;
    }

}
