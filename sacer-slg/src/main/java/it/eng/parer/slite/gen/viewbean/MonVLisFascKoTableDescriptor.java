package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Mon_V_Lis_Fasc_Ko
 *
 */
public class MonVLisFascKoTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 21 December 2017 08:24" )
     */

    public static final String COL_ID_USER_IAM = "id_user_iam";
    public static final String COL_ID_AMBIENTE = "id_ambiente";
    public static final String COL_NM_AMBIENTE = "nm_ambiente";
    public static final String COL_ID_ENTE = "id_ente";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_NM_STRUT = "nm_strut";
    public static final String COL_ID_FASCICOLO_KO = "id_fascicolo_ko";
    public static final String COL_AA_FASCICOLO = "aa_fascicolo";
    public static final String COL_CD_KEY_FASCICOLO = "cd_key_fascicolo";
    public static final String COL_TS_INI_FIRST_SES = "ts_ini_first_ses";
    public static final String COL_TS_INI_LAST_SES = "ts_ini_last_ses";
    public static final String COL_ID_ERR_SACER_PRINC = "id_err_sacer_princ";
    public static final String COL_CD_ERR_PRINC = "cd_err_princ";
    public static final String COL_DS_ERR_PRINC = "ds_err_princ";
    public static final String COL_ID_TIPO_FASCICOLO = "id_tipo_fascicolo";
    public static final String COL_NM_TIPO_FASCICOLO = "nm_tipo_fascicolo";
    public static final String COL_TI_STATO_FASCICOLO_KO = "ti_stato_fascicolo_ko";
    public static final String COL_ID_SES_FASCICOLO_KO_FIRST = "id_ses_fascicolo_ko_first";
    public static final String COL_ID_SES_FASCICOLO_KO_LAST = "id_ses_fascicolo_ko_last";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_USER_IAM, new ColumnDescriptor(COL_ID_USER_IAM, Types.DECIMAL, 22, true));
        map.put(COL_ID_AMBIENTE, new ColumnDescriptor(COL_ID_AMBIENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_AMBIENTE, new ColumnDescriptor(COL_NM_AMBIENTE, Types.VARCHAR, 100, true));
        map.put(COL_ID_ENTE, new ColumnDescriptor(COL_ID_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
        map.put(COL_NM_STRUT, new ColumnDescriptor(COL_NM_STRUT, Types.VARCHAR, 100, true));
        map.put(COL_ID_FASCICOLO_KO, new ColumnDescriptor(COL_ID_FASCICOLO_KO, Types.DECIMAL, 22, true));
        map.put(COL_AA_FASCICOLO, new ColumnDescriptor(COL_AA_FASCICOLO, Types.DECIMAL, 22, true));
        map.put(COL_CD_KEY_FASCICOLO, new ColumnDescriptor(COL_CD_KEY_FASCICOLO, Types.VARCHAR, 100, true));
        map.put(COL_TS_INI_FIRST_SES, new ColumnDescriptor(COL_TS_INI_FIRST_SES, Types.TIMESTAMP, 11, true));
        map.put(COL_TS_INI_LAST_SES, new ColumnDescriptor(COL_TS_INI_LAST_SES, Types.TIMESTAMP, 11, true));
        map.put(COL_ID_ERR_SACER_PRINC, new ColumnDescriptor(COL_ID_ERR_SACER_PRINC, Types.DECIMAL, 22, true));
        map.put(COL_CD_ERR_PRINC, new ColumnDescriptor(COL_CD_ERR_PRINC, Types.VARCHAR, 100, true));
        map.put(COL_DS_ERR_PRINC, new ColumnDescriptor(COL_DS_ERR_PRINC, Types.VARCHAR, 1024, true));
        map.put(COL_ID_TIPO_FASCICOLO, new ColumnDescriptor(COL_ID_TIPO_FASCICOLO, Types.DECIMAL, 22, true));
        map.put(COL_NM_TIPO_FASCICOLO, new ColumnDescriptor(COL_NM_TIPO_FASCICOLO, Types.VARCHAR, 100, true));
        map.put(COL_TI_STATO_FASCICOLO_KO, new ColumnDescriptor(COL_TI_STATO_FASCICOLO_KO, Types.VARCHAR, 20, true));
        map.put(COL_ID_SES_FASCICOLO_KO_FIRST,
                new ColumnDescriptor(COL_ID_SES_FASCICOLO_KO_FIRST, Types.DECIMAL, 22, true));
        map.put(COL_ID_SES_FASCICOLO_KO_LAST,
                new ColumnDescriptor(COL_ID_SES_FASCICOLO_KO_LAST, Types.DECIMAL, 22, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return null;
    }

    public String getStatement() {
        return null;
    }

}
