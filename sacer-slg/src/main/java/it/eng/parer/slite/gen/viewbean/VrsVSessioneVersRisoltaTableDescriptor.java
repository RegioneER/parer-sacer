package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Vrs_V_Sessione_Vers_Risolta
 *
 */
public class VrsVSessioneVersRisoltaTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 20 December 2012 16:14" )
     */

    public static final String SELECT = "Select * from Vrs_V_Sessione_Vers_Risolta /**/";
    public static final String TABLE_NAME = "Vrs_V_Sessione_Vers_Risolta";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_TI_SESSIONE_VERS = "ti_sessione_vers";
    public static final String COL_TI_STATO_SESSIONE_VERS = "ti_stato_sessione_vers";
    public static final String COL_DT_CHIUSURA = "dt_chiusura";
    public static final String COL_FL_SES_RISOLTA = "fl_ses_risolta";
    public static final String COL_FL_SES_NON_RISOLUB = "fl_ses_non_risolub";
    public static final String COL_TI_DT_CREAZIONE = "ti_dt_creazione";
    public static final String COL_FL_VERIF = "fl_verif";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
        map.put(COL_TI_SESSIONE_VERS, new ColumnDescriptor(COL_TI_SESSIONE_VERS, Types.VARCHAR, 20, true));
        map.put(COL_TI_STATO_SESSIONE_VERS, new ColumnDescriptor(COL_TI_STATO_SESSIONE_VERS, Types.VARCHAR, 20, true));
        map.put(COL_DT_CHIUSURA, new ColumnDescriptor(COL_DT_CHIUSURA, Types.TIMESTAMP, 7, true));
        map.put(COL_FL_SES_RISOLTA, new ColumnDescriptor(COL_FL_SES_RISOLTA, Types.VARCHAR, 1, true));
        map.put(COL_FL_SES_NON_RISOLUB, new ColumnDescriptor(COL_FL_SES_NON_RISOLUB, Types.VARCHAR, 1, true));
        map.put(COL_TI_DT_CREAZIONE, new ColumnDescriptor(COL_TI_DT_CREAZIONE, Types.VARCHAR, 19, true));
        map.put(COL_FL_VERIF, new ColumnDescriptor(COL_FL_VERIF, Types.VARCHAR, 1, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
