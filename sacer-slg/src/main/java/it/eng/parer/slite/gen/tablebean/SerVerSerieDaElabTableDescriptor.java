package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Ser_Ver_Serie_Da_Elab
 *
 */
public class SerVerSerieDaElabTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Friday, 30 October 2015 16:33" )
     */

    public static final String SELECT = "Select * from Ser_Ver_Serie_Da_Elab /**/";
    public static final String TABLE_NAME = "Ser_Ver_Serie_Da_Elab";
    public static final String COL_ID_VER_SERIE_DA_ELAB = "id_ver_serie_da_elab";
    public static final String COL_ID_VER_SERIE = "id_ver_serie";
    public static final String COL_TI_STATO_VER_SERIE = "ti_stato_ver_serie";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_DT_REG_STATO_VER_SERIE = "dt_reg_stato_ver_serie";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_VER_SERIE_DA_ELAB, new ColumnDescriptor(COL_ID_VER_SERIE_DA_ELAB, Types.DECIMAL, 22, true));
        map.put(COL_ID_VER_SERIE, new ColumnDescriptor(COL_ID_VER_SERIE, Types.DECIMAL, 22, false));
        map.put(COL_TI_STATO_VER_SERIE, new ColumnDescriptor(COL_TI_STATO_VER_SERIE, Types.VARCHAR, 20, false));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, false));
        map.put(COL_DT_REG_STATO_VER_SERIE,
                new ColumnDescriptor(COL_DT_REG_STATO_VER_SERIE, Types.TIMESTAMP, 7, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
