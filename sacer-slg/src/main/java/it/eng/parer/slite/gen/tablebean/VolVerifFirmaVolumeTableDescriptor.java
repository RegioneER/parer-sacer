package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Vol_Verif_Firma_Volume
 *
 */
public class VolVerifFirmaVolumeTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static final String SELECT = "Select * from Vol_Verif_Firma_Volume /**/";
    public static final String TABLE_NAME = "Vol_Verif_Firma_Volume";
    public static final String COL_ID_VERIF_FIRMA_VOLUME = "id_verif_firma_volume";
    public static final String COL_ID_APPART_FIRMA_VOLUME = "id_appart_firma_volume";
    public static final String COL_TI_VERIF = "ti_verif";
    public static final String COL_TI_ESITO_VERIF_FIRMA = "ti_esito_verif_firma";
    public static final String COL_DS_MSG_ESITO_VERIF_FIRMA = "ds_msg_esito_verif_firma";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_VERIF_FIRMA_VOLUME, new ColumnDescriptor(COL_ID_VERIF_FIRMA_VOLUME, Types.DECIMAL, 22, true));
        map.put(COL_ID_APPART_FIRMA_VOLUME, new ColumnDescriptor(COL_ID_APPART_FIRMA_VOLUME, Types.DECIMAL, 22, false));
        map.put(COL_TI_VERIF, new ColumnDescriptor(COL_TI_VERIF, Types.VARCHAR, 20, false));
        map.put(COL_TI_ESITO_VERIF_FIRMA, new ColumnDescriptor(COL_TI_ESITO_VERIF_FIRMA, Types.VARCHAR, 20, false));
        map.put(COL_DS_MSG_ESITO_VERIF_FIRMA,
                new ColumnDescriptor(COL_DS_MSG_ESITO_VERIF_FIRMA, Types.VARCHAR, 254, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
