/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.IamAbilOrganiz;
import it.eng.parer.entity.IamUser;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Iam_Abil_Organiz
 *
 */
public class IamAbilOrganizRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Wednesday, 12 February 2014 10:13"
     * )
     */
    private static final long serialVersionUID = 1L;

    public static IamAbilOrganizTableDescriptor TABLE_DESCRIPTOR = new IamAbilOrganizTableDescriptor();

    public IamAbilOrganizRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAbilOrganiz() {
	return getBigDecimal("id_abil_organiz");
    }

    public void setIdAbilOrganiz(BigDecimal idAbilOrganiz) {
	setObject("id_abil_organiz", idAbilOrganiz);
    }

    public BigDecimal getIdUserIam() {
	return getBigDecimal("id_user_iam");
    }

    public void setIdUserIam(BigDecimal idUserIam) {
	setObject("id_user_iam", idUserIam);
    }

    public BigDecimal getIdOrganizApplic() {
	return getBigDecimal("id_organiz_applic");
    }

    public void setIdOrganizApplic(BigDecimal idOrganizApplic) {
	setObject("id_organiz_applic", idOrganizApplic);
    }

    public String getFlOrganizDefault() {
	return getString("fl_organiz_default");
    }

    public void setFlOrganizDefault(String flOrganizDefault) {
	setObject("fl_organiz_default", flOrganizDefault);
    }

    @Override
    public void entityToRowBean(Object obj) {
	IamAbilOrganiz entity = (IamAbilOrganiz) obj;

	this.setIdAbilOrganiz(entity.getIdAbilOrganiz() == null ? null
		: BigDecimal.valueOf(entity.getIdAbilOrganiz()));
	if (entity.getIamUser() != null) {
	    this.setIdUserIam(new BigDecimal(entity.getIamUser().getIdUserIam()));
	}
	this.setIdOrganizApplic(entity.getIdOrganizApplic());
	this.setFlOrganizDefault(entity.getFlOrganizDefault());
    }

    @Override
    public IamAbilOrganiz rowBeanToEntity() {
	IamAbilOrganiz entity = new IamAbilOrganiz();
	if (this.getIdAbilOrganiz() != null) {
	    entity.setIdAbilOrganiz(this.getIdAbilOrganiz().longValue());
	}
	if (this.getIdUserIam() != null) {
	    if (entity.getIamUser() == null) {
		entity.setIamUser(new IamUser());
	    }
	    entity.getIamUser().setIdUserIam(this.getIdUserIam().longValue());
	}
	entity.setIdOrganizApplic(this.getIdOrganizApplic());
	entity.setFlOrganizDefault(this.getFlOrganizDefault());
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
