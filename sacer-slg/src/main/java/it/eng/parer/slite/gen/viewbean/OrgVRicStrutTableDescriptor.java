package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Org_V_Ric_Strut
 *
 */
public class OrgVRicStrutTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 6 June 2017 10:56" )
     */

    public static final String SELECT = "Select * from Org_V_Ric_Strut /**/";
    public static final String TABLE_NAME = "Org_V_Ric_Strut";
    public static final String COL_ID_USER_IAM_COR = "id_user_iam_cor";
    public static final String COL_ID_AMBIENTE = "id_ambiente";
    public static final String COL_NM_AMBIENTE = "nm_ambiente";
    public static final String COL_ID_ENTE = "id_ente";
    public static final String COL_NM_ENTE = "nm_ente";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_NM_STRUT = "nm_strut";
    public static final String COL_DS_STRUT = "ds_strut";
    public static final String COL_FL_TEMPLATE = "fl_template";
    public static final String COL_FL_PART_OK = "fl_part_ok";
    public static final String COL_ID_AMBITO_TERRIT = "id_ambito_territ";
    public static final String COL_TI_AMBITO_TERRIT = "ti_ambito_territ";
    public static final String COL_DS_TREE_CD_AMBITO_TERRIT = "ds_tree_cd_ambito_territ";
    public static final String COL_DS_TREE_ID_AMBITO_TERRIT = "ds_tree_id_ambito_territ";
    public static final String COL_ID_CATEG_ENTE = "id_categ_ente";
    public static final String COL_CD_CATEG_ENTE = "cd_categ_ente";
    public static final String COL_ID_SISTEMA_VERSANTE = "id_sistema_versante";
    public static final String COL_NM_SISTEMA_VERSANTE = "nm_sistema_versante";
    public static final String COL_NM_ENTE_CONVENZ = "nm_ente_convenz";
    public static final String COL_ID_ENTE_CONVENZ = "id_ente_convenz";
    public static final String COL_NM_AMBIENTE_ENTE_CONVENZ = "nm_ambiente_ente_convenz";
    public static final String COL_ID_AMBIENTE_ENTE_CONVENZ = "id_ambiente_ente_convenz";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_USER_IAM_COR, new ColumnDescriptor(COL_ID_USER_IAM_COR, Types.DECIMAL, 22, true));
        map.put(COL_ID_AMBIENTE, new ColumnDescriptor(COL_ID_AMBIENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_AMBIENTE, new ColumnDescriptor(COL_NM_AMBIENTE, Types.VARCHAR, 100, true));
        map.put(COL_ID_ENTE, new ColumnDescriptor(COL_ID_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_ENTE, new ColumnDescriptor(COL_NM_ENTE, Types.VARCHAR, 100, true));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, true));
        map.put(COL_NM_STRUT, new ColumnDescriptor(COL_NM_STRUT, Types.VARCHAR, 100, true));
        map.put(COL_DS_STRUT, new ColumnDescriptor(COL_DS_STRUT, Types.VARCHAR, 254, true));
        map.put(COL_FL_TEMPLATE, new ColumnDescriptor(COL_FL_TEMPLATE, Types.VARCHAR, 1, true));
        map.put(COL_FL_PART_OK, new ColumnDescriptor(COL_FL_PART_OK, Types.VARCHAR, 1, true));
        map.put(COL_ID_AMBITO_TERRIT, new ColumnDescriptor(COL_ID_AMBITO_TERRIT, Types.DECIMAL, 22, true));
        map.put(COL_TI_AMBITO_TERRIT, new ColumnDescriptor(COL_TI_AMBITO_TERRIT, Types.VARCHAR, 20, true));
        map.put(COL_DS_TREE_CD_AMBITO_TERRIT,
                new ColumnDescriptor(COL_DS_TREE_CD_AMBITO_TERRIT, Types.VARCHAR, 4000, true));
        map.put(COL_DS_TREE_ID_AMBITO_TERRIT,
                new ColumnDescriptor(COL_DS_TREE_ID_AMBITO_TERRIT, Types.VARCHAR, 4000, true));
        map.put(COL_ID_CATEG_ENTE, new ColumnDescriptor(COL_ID_CATEG_ENTE, Types.DECIMAL, 22, true));
        map.put(COL_CD_CATEG_ENTE, new ColumnDescriptor(COL_CD_CATEG_ENTE, Types.VARCHAR, 100, true));
        map.put(COL_ID_SISTEMA_VERSANTE, new ColumnDescriptor(COL_ID_SISTEMA_VERSANTE, Types.DECIMAL, 22, true));
        map.put(COL_NM_SISTEMA_VERSANTE, new ColumnDescriptor(COL_NM_SISTEMA_VERSANTE, Types.VARCHAR, 100, true));
        map.put(COL_NM_ENTE_CONVENZ, new ColumnDescriptor(COL_NM_ENTE_CONVENZ, Types.VARCHAR, 254, true));
        map.put(COL_ID_ENTE_CONVENZ, new ColumnDescriptor(COL_ID_ENTE_CONVENZ, Types.DECIMAL, 22, true));
        map.put(COL_NM_AMBIENTE_ENTE_CONVENZ,
                new ColumnDescriptor(COL_NM_AMBIENTE_ENTE_CONVENZ, Types.VARCHAR, 100, true));
        map.put(COL_ID_AMBIENTE_ENTE_CONVENZ,
                new ColumnDescriptor(COL_ID_AMBIENTE_ENTE_CONVENZ, Types.DECIMAL, 22, true));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
