package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.VolAppartDocVolume;
import it.eng.parer.entity.VolAppartUnitaDocVolume;
import it.eng.parer.entity.AroDoc;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Vol_Appart_Doc_Volume
 *
 */
public class VolAppartDocVolumeRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static VolAppartDocVolumeTableDescriptor TABLE_DESCRIPTOR = new VolAppartDocVolumeTableDescriptor();

    public VolAppartDocVolumeRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAppartDocVolume() {
        return getBigDecimal("id_appart_doc_volume");
    }

    public void setIdAppartDocVolume(BigDecimal id_appart_doc_volume) {
        setObject("id_appart_doc_volume", id_appart_doc_volume);
    }

    public BigDecimal getIdAppartUnitaDocVolume() {
        return getBigDecimal("id_appart_unita_doc_volume");
    }

    public void setIdAppartUnitaDocVolume(BigDecimal id_appart_unita_doc_volume) {
        setObject("id_appart_unita_doc_volume", id_appart_unita_doc_volume);
    }

    public BigDecimal getIdDoc() {
        return getBigDecimal("id_doc");
    }

    public void setIdDoc(BigDecimal id_doc) {
        setObject("id_doc", id_doc);
    }

    public String getFlValida() {
        return getString("fl_valida");
    }

    public void setFlValida(String fl_valida) {
        setObject("fl_valida", fl_valida);
    }

    public String getNtGenericheDoc() {
        return getString("nt_generiche_doc");
    }

    public void setNtGenericheDoc(String nt_generiche_doc) {
        setObject("nt_generiche_doc", nt_generiche_doc);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal id_strut) {
        setObject("id_strut", id_strut);
    }

    @Override
    public void entityToRowBean(Object obj) {
        VolAppartDocVolume entity = (VolAppartDocVolume) obj;
        AbstractRecord ar;
        this.setIdAppartDocVolume(new BigDecimal(entity.getIdAppartDocVolume()));
        if (entity._persistence_get_volAppartUnitaDocVolume_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_volAppartUnitaDocVolume_vh()).getRow()) != null) {
                this.setIdAppartUnitaDocVolume(
                        new BigDecimal((Long) ar.get("VOL_APPART_DOC_VOLUME.ID_APPART_UNITA_DOC_VOLUME")));
            }
        } else {
            if (entity.getVolAppartUnitaDocVolume() != null) {
                this.setIdAppartUnitaDocVolume(
                        new BigDecimal(entity.getVolAppartUnitaDocVolume().getIdAppartUnitaDocVolume()));
            }
        }
        if (entity._persistence_get_aroDoc_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_aroDoc_vh()).getRow()) != null) {
                this.setIdDoc(new BigDecimal((Long) ar.get("VOL_APPART_DOC_VOLUME.ID_DOC")));
            }
        } else {
            if (entity.getAroDoc() != null) {
                this.setIdDoc(new BigDecimal(entity.getAroDoc().getIdDoc()));
            }
        }
        this.setFlValida(entity.getFlValida());
        this.setNtGenericheDoc(entity.getNtGenericheDoc());
        this.setIdStrut(entity.getIdStrut());
    }

    @Override
    public VolAppartDocVolume rowBeanToEntity() {
        VolAppartDocVolume entity = new VolAppartDocVolume();
        if (this.getIdAppartDocVolume() != null) {
            entity.setIdAppartDocVolume(this.getIdAppartDocVolume().longValue());
        }
        if (this.getIdAppartUnitaDocVolume() != null) {
            if (entity.getVolAppartUnitaDocVolume() == null) {
                entity.setVolAppartUnitaDocVolume(new VolAppartUnitaDocVolume());
            }
            entity.getVolAppartUnitaDocVolume().setIdAppartUnitaDocVolume(this.getIdAppartUnitaDocVolume().longValue());
        }
        if (this.getIdDoc() != null) {
            if (entity.getAroDoc() == null) {
                entity.setAroDoc(new AroDoc());
            }
            entity.getAroDoc().setIdDoc(this.getIdDoc().longValue());
        }
        entity.setFlValida(this.getFlValida());
        entity.setNtGenericheDoc(this.getNtGenericheDoc());
        entity.setIdStrut(this.getIdStrut());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
