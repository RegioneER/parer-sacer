/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.parer.entity.AroDoc;
import it.eng.parer.entity.VolAppartDocVolume;
import it.eng.parer.entity.VolAppartUnitaDocVolume;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Vol_Appart_Doc_Volume
 *
 */
public class VolAppartDocVolumeRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */
    private static final long serialVersionUID = 1L;

    public static VolAppartDocVolumeTableDescriptor TABLE_DESCRIPTOR = new VolAppartDocVolumeTableDescriptor();

    public VolAppartDocVolumeRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAppartDocVolume() {
	return getBigDecimal("id_appart_doc_volume");
    }

    public void setIdAppartDocVolume(BigDecimal idAppartDocVolume) {
	setObject("id_appart_doc_volume", idAppartDocVolume);
    }

    public BigDecimal getIdAppartUnitaDocVolume() {
	return getBigDecimal("id_appart_unita_doc_volume");
    }

    public void setIdAppartUnitaDocVolume(BigDecimal idAppartUnitaDocVolume) {
	setObject("id_appart_unita_doc_volume", idAppartUnitaDocVolume);
    }

    public BigDecimal getIdDoc() {
	return getBigDecimal("id_doc");
    }

    public void setIdDoc(BigDecimal idDoc) {
	setObject("id_doc", idDoc);
    }

    public String getFlValida() {
	return getString("fl_valida");
    }

    public void setFlValida(String flValida) {
	setObject("fl_valida", flValida);
    }

    public String getNtGenericheDoc() {
	return getString("nt_generiche_doc");
    }

    public void setNtGenericheDoc(String ntGenericheDoc) {
	setObject("nt_generiche_doc", ntGenericheDoc);
    }

    public BigDecimal getIdStrut() {
	return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal idStrut) {
	setObject("id_strut", idStrut);
    }

    @Override
    public void entityToRowBean(Object obj) {
	VolAppartDocVolume entity = (VolAppartDocVolume) obj;

	this.setIdAppartDocVolume(entity.getIdAppartDocVolume() == null ? null
		: BigDecimal.valueOf(entity.getIdAppartDocVolume()));

	if (entity.getVolAppartUnitaDocVolume() != null) {
	    this.setIdAppartUnitaDocVolume(new BigDecimal(
		    entity.getVolAppartUnitaDocVolume().getIdAppartUnitaDocVolume()));
	}

	if (entity.getAroDoc() != null) {
	    this.setIdDoc(new BigDecimal(entity.getAroDoc().getIdDoc()));
	}

	this.setFlValida(entity.getFlValida());
	this.setNtGenericheDoc(entity.getNtGenericheDoc());
	this.setIdStrut(entity.getIdStrut());
    }

    @Override
    public VolAppartDocVolume rowBeanToEntity() {
	VolAppartDocVolume entity = new VolAppartDocVolume();
	if (this.getIdAppartDocVolume() != null) {
	    entity.setIdAppartDocVolume(this.getIdAppartDocVolume().longValue());
	}
	if (this.getIdAppartUnitaDocVolume() != null) {
	    if (entity.getVolAppartUnitaDocVolume() == null) {
		entity.setVolAppartUnitaDocVolume(new VolAppartUnitaDocVolume());
	    }
	    entity.getVolAppartUnitaDocVolume()
		    .setIdAppartUnitaDocVolume(this.getIdAppartUnitaDocVolume().longValue());
	}
	if (this.getIdDoc() != null) {
	    if (entity.getAroDoc() == null) {
		entity.setAroDoc(new AroDoc());
	    }
	    entity.getAroDoc().setIdDoc(this.getIdDoc().longValue());
	}
	entity.setFlValida(this.getFlValida());
	entity.setNtGenericheDoc(this.getNtGenericheDoc());
	entity.setIdStrut(this.getIdStrut());
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
