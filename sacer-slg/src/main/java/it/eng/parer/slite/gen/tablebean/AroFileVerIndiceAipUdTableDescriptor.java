package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.oracle.bean.column.ColumnDescriptor;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

import java.sql.Types;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.annotation.Generated;

/**
 * @author Sloth
 *
 *         Bean per la tabella Aro_File_Ver_Indice_Aip_Ud
 *
 */
public class AroFileVerIndiceAipUdTableDescriptor extends TableDescriptor {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 24 September 2014 15:00" )
     */

    public static final String SELECT = "Select * from Aro_File_Ver_Indice_Aip_Ud /**/";
    public static final String TABLE_NAME = "Aro_File_Ver_Indice_Aip_Ud";
    public static final String COL_ID_FILE_VER_INDICE_AIP = "id_file_ver_indice_aip";
    public static final String COL_ID_VER_INDICE_AIP = "id_ver_indice_aip";
    public static final String COL_BL_FILE_VER_INDICE_AIP = "bl_file_ver_indice_aip";
    public static final String COL_ID_STRUT = "id_strut";
    public static final String COL_MM_CREAZIONE = "mm_creazione";

    private static Map<String, ColumnDescriptor> map = new LinkedHashMap<String, ColumnDescriptor>();

    static {
        map.put(COL_ID_FILE_VER_INDICE_AIP, new ColumnDescriptor(COL_ID_FILE_VER_INDICE_AIP, Types.DECIMAL, 22, true));
        map.put(COL_ID_VER_INDICE_AIP, new ColumnDescriptor(COL_ID_VER_INDICE_AIP, Types.DECIMAL, 22, false));
        map.put(COL_BL_FILE_VER_INDICE_AIP, new ColumnDescriptor(COL_BL_FILE_VER_INDICE_AIP, Types.CLOB, 4000, false));
        map.put(COL_ID_STRUT, new ColumnDescriptor(COL_ID_STRUT, Types.DECIMAL, 22, false));
        map.put(COL_MM_CREAZIONE, new ColumnDescriptor(COL_MM_CREAZIONE, Types.DECIMAL, 22, false));
    }

    public Map<String, ColumnDescriptor> getColumnMap() {
        return map;
    }

    public String getTableName() {
        return TABLE_NAME;
    }

    public String getStatement() {
        return SELECT;
    }

}
