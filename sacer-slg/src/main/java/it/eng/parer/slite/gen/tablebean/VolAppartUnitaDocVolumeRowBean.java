/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna <p/> This program is free software: you can
 * redistribute it and/or modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version. <p/> This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. <p/> You should
 * have received a copy of the GNU Affero General Public License along with this program. If not,
 * see <https://www.gnu.org/licenses/>.
 */

package it.eng.parer.slite.gen.tablebean;

import java.math.BigDecimal;
import java.sql.Timestamp;

import it.eng.parer.entity.AroUnitaDoc;
import it.eng.parer.entity.VolAppartUnitaDocVolume;
import it.eng.parer.entity.VolVolumeConserv;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Vol_Appart_Unita_Doc_Volume
 *
 */
public class VolAppartUnitaDocVolumeRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter",
     * comments = "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */
    private static final long serialVersionUID = 1L;

    public static VolAppartUnitaDocVolumeTableDescriptor TABLE_DESCRIPTOR = new VolAppartUnitaDocVolumeTableDescriptor();

    public VolAppartUnitaDocVolumeRowBean() {
	super();
    }

    public TableDescriptor getTableDescriptor() {
	return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAppartUnitaDocVolume() {
	return getBigDecimal("id_appart_unita_doc_volume");
    }

    public void setIdAppartUnitaDocVolume(BigDecimal idAppartUnitaDocVolume) {
	setObject("id_appart_unita_doc_volume", idAppartUnitaDocVolume);
    }

    public BigDecimal getIdVolumeConserv() {
	return getBigDecimal("id_volume_conserv");
    }

    public void setIdVolumeConserv(BigDecimal idVolumeConserv) {
	setObject("id_volume_conserv", idVolumeConserv);
    }

    public BigDecimal getIdUnitaDoc() {
	return getBigDecimal("id_unita_doc");
    }

    public void setIdUnitaDoc(BigDecimal idUnitaDoc) {
	setObject("id_unita_doc", idUnitaDoc);
    }

    public BigDecimal getIdStrut() {
	return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal idStrut) {
	setObject("id_strut", idStrut);
    }

    public Timestamp getDtCreazione() {
	return getTimestamp("dt_creazione");
    }

    public void setDtCreazione(Timestamp dtCreazione) {
	setObject("dt_creazione", dtCreazione);
    }

    @Override
    public void entityToRowBean(Object obj) {
	VolAppartUnitaDocVolume entity = (VolAppartUnitaDocVolume) obj;

	this.setIdAppartUnitaDocVolume(entity.getIdAppartUnitaDocVolume() == null ? null
		: BigDecimal.valueOf(entity.getIdAppartUnitaDocVolume()));

	if (entity.getVolVolumeConserv() != null) {
	    this.setIdVolumeConserv(
		    new BigDecimal(entity.getVolVolumeConserv().getIdVolumeConserv()));
	}

	if (entity.getAroUnitaDoc() != null) {
	    this.setIdUnitaDoc(new BigDecimal(entity.getAroUnitaDoc().getIdUnitaDoc()));
	}

	this.setIdStrut(entity.getIdStrut());
	if (entity.getDtCreazione() != null) {
	    this.setDtCreazione(new Timestamp(entity.getDtCreazione().getTime()));
	}
    }

    @Override
    public VolAppartUnitaDocVolume rowBeanToEntity() {
	VolAppartUnitaDocVolume entity = new VolAppartUnitaDocVolume();
	if (this.getIdAppartUnitaDocVolume() != null) {
	    entity.setIdAppartUnitaDocVolume(this.getIdAppartUnitaDocVolume().longValue());
	}
	if (this.getIdVolumeConserv() != null) {
	    if (entity.getVolVolumeConserv() == null) {
		entity.setVolVolumeConserv(new VolVolumeConserv());
	    }
	    entity.getVolVolumeConserv().setIdVolumeConserv(this.getIdVolumeConserv().longValue());
	}
	if (this.getIdUnitaDoc() != null) {
	    if (entity.getAroUnitaDoc() == null) {
		entity.setAroUnitaDoc(new AroUnitaDoc());
	    }
	    entity.getAroUnitaDoc().setIdUnitaDoc(this.getIdUnitaDoc().longValue());
	}
	entity.setIdStrut(this.getIdStrut());
	entity.setDtCreazione(this.getDtCreazione());
	return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
	setObject("rownum", rownum);
    }

    public Integer getRownum() {
	return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
	setObject("rnum", rnum);
    }

    public Integer getRnum() {
	return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
	setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
	return Integer.parseInt(getObject("numrecords").toString());
    }

}
