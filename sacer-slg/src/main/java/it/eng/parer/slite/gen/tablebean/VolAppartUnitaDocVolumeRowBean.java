package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.VolAppartUnitaDocVolume;
import it.eng.parer.entity.AroUnitaDoc;
import it.eng.parer.entity.VolVolumeConserv;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Vol_Appart_Unita_Doc_Volume
 *
 */
public class VolAppartUnitaDocVolumeRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static VolAppartUnitaDocVolumeTableDescriptor TABLE_DESCRIPTOR = new VolAppartUnitaDocVolumeTableDescriptor();

    public VolAppartUnitaDocVolumeRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdAppartUnitaDocVolume() {
        return getBigDecimal("id_appart_unita_doc_volume");
    }

    public void setIdAppartUnitaDocVolume(BigDecimal id_appart_unita_doc_volume) {
        setObject("id_appart_unita_doc_volume", id_appart_unita_doc_volume);
    }

    public BigDecimal getIdVolumeConserv() {
        return getBigDecimal("id_volume_conserv");
    }

    public void setIdVolumeConserv(BigDecimal id_volume_conserv) {
        setObject("id_volume_conserv", id_volume_conserv);
    }

    public BigDecimal getIdUnitaDoc() {
        return getBigDecimal("id_unita_doc");
    }

    public void setIdUnitaDoc(BigDecimal id_unita_doc) {
        setObject("id_unita_doc", id_unita_doc);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal id_strut) {
        setObject("id_strut", id_strut);
    }

    public Timestamp getDtCreazione() {
        return getTimestamp("dt_creazione");
    }

    public void setDtCreazione(Timestamp dt_creazione) {
        setObject("dt_creazione", dt_creazione);
    }

    @Override
    public void entityToRowBean(Object obj) {
        VolAppartUnitaDocVolume entity = (VolAppartUnitaDocVolume) obj;
        AbstractRecord ar;
        this.setIdAppartUnitaDocVolume(new BigDecimal(entity.getIdAppartUnitaDocVolume()));
        if (entity._persistence_get_volVolumeConserv_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_volVolumeConserv_vh()).getRow()) != null) {
                this.setIdVolumeConserv(new BigDecimal((Long) ar.get("VOL_APPART_UNITA_DOC_VOLUME.ID_VOLUME_CONSERV")));
            }
        } else {
            if (entity.getVolVolumeConserv() != null) {
                this.setIdVolumeConserv(new BigDecimal(entity.getVolVolumeConserv().getIdVolumeConserv()));
            }
        }
        if (entity._persistence_get_aroUnitaDoc_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_aroUnitaDoc_vh()).getRow()) != null) {
                this.setIdUnitaDoc(new BigDecimal((Long) ar.get("VOL_APPART_UNITA_DOC_VOLUME.ID_UNITA_DOC")));
            }
        } else {
            if (entity.getAroUnitaDoc() != null) {
                this.setIdUnitaDoc(new BigDecimal(entity.getAroUnitaDoc().getIdUnitaDoc()));
            }
        }
        this.setIdStrut(entity.getIdStrut());
        if (entity.getDtCreazione() != null) {
            this.setDtCreazione(new Timestamp(entity.getDtCreazione().getTime()));
        }
    }

    @Override
    public VolAppartUnitaDocVolume rowBeanToEntity() {
        VolAppartUnitaDocVolume entity = new VolAppartUnitaDocVolume();
        if (this.getIdAppartUnitaDocVolume() != null) {
            entity.setIdAppartUnitaDocVolume(this.getIdAppartUnitaDocVolume().longValue());
        }
        if (this.getIdVolumeConserv() != null) {
            if (entity.getVolVolumeConserv() == null) {
                entity.setVolVolumeConserv(new VolVolumeConserv());
            }
            entity.getVolVolumeConserv().setIdVolumeConserv(this.getIdVolumeConserv().longValue());
        }
        if (this.getIdUnitaDoc() != null) {
            if (entity.getAroUnitaDoc() == null) {
                entity.setAroUnitaDoc(new AroUnitaDoc());
            }
            entity.getAroUnitaDoc().setIdUnitaDoc(this.getIdUnitaDoc().longValue());
        }
        entity.setIdStrut(this.getIdStrut());
        entity.setDtCreazione(this.getDtCreazione());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
