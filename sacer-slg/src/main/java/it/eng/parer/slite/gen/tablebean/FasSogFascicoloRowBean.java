package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.FasSogFascicolo;
import it.eng.parer.entity.FasFascicolo;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Fas_Sog_Fascicolo
 *
 */
public class FasSogFascicoloRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 14 December 2017 11:56" )
     */

    public static FasSogFascicoloTableDescriptor TABLE_DESCRIPTOR = new FasSogFascicoloTableDescriptor();

    public FasSogFascicoloRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdSogFascicolo() {
        return getBigDecimal("id_sog_fascicolo");
    }

    public void setIdSogFascicolo(BigDecimal id_sog_fascicolo) {
        setObject("id_sog_fascicolo", id_sog_fascicolo);
    }

    public BigDecimal getIdFascicolo() {
        return getBigDecimal("id_fascicolo");
    }

    public void setIdFascicolo(BigDecimal id_fascicolo) {
        setObject("id_fascicolo", id_fascicolo);
    }

    public String getTiRapp() {
        return getString("ti_rapp");
    }

    public void setTiRapp(String ti_rapp) {
        setObject("ti_rapp", ti_rapp);
    }

    public String getNmNomeSog() {
        return getString("nm_nome_sog");
    }

    public void setNmNomeSog(String nm_nome_sog) {
        setObject("nm_nome_sog", nm_nome_sog);
    }

    public String getNmCognSog() {
        return getString("nm_cogn_sog");
    }

    public void setNmCognSog(String nm_cogn_sog) {
        setObject("nm_cogn_sog", nm_cogn_sog);
    }

    public String getDsDenomSog() {
        return getString("ds_denom_sog");
    }

    public void setDsDenomSog(String ds_denom_sog) {
        setObject("ds_denom_sog", ds_denom_sog);
    }

    public String getCdSog() {
        return getString("cd_sog");
    }

    public void setCdSog(String cd_sog) {
        setObject("cd_sog", cd_sog);
    }

    public String getTiCdSog() {
        return getString("ti_cd_sog");
    }

    public void setTiCdSog(String ti_cd_sog) {
        setObject("ti_cd_sog", ti_cd_sog);
    }

    @Override
    public void entityToRowBean(Object obj) {
        FasSogFascicolo entity = (FasSogFascicolo) obj;
        AbstractRecord ar;
        this.setIdSogFascicolo(new BigDecimal(entity.getIdSogFascicolo()));
        if (entity._persistence_get_fasFascicolo_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_fasFascicolo_vh()).getRow()) != null) {
                this.setIdFascicolo(new BigDecimal((Long) ar.get("FAS_SOG_FASCICOLO.ID_FASCICOLO")));
            }
        } else {
            if (entity.getFasFascicolo() != null) {
                this.setIdFascicolo(new BigDecimal(entity.getFasFascicolo().getIdFascicolo()));
            }
        }
        this.setTiRapp(entity.getTiRapp());
        this.setNmNomeSog(entity.getNmNomeSog());
        this.setNmCognSog(entity.getNmCognSog());
        this.setDsDenomSog(entity.getDsDenomSog());
        this.setCdSog(entity.getCdSog());
        this.setTiCdSog(entity.getTiCdSog());
    }

    @Override
    public FasSogFascicolo rowBeanToEntity() {
        FasSogFascicolo entity = new FasSogFascicolo();
        if (this.getIdSogFascicolo() != null) {
            entity.setIdSogFascicolo(this.getIdSogFascicolo().longValue());
        }
        if (this.getIdFascicolo() != null) {
            if (entity.getFasFascicolo() == null) {
                entity.setFasFascicolo(new FasFascicolo());
            }
            entity.getFasFascicolo().setIdFascicolo(this.getIdFascicolo().longValue());
        }
        entity.setTiRapp(this.getTiRapp());
        entity.setNmNomeSog(this.getNmNomeSog());
        entity.setNmCognSog(this.getNmCognSog());
        entity.setDsDenomSog(this.getDsDenomSog());
        entity.setCdSog(this.getCdSog());
        entity.setTiCdSog(this.getTiCdSog());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
