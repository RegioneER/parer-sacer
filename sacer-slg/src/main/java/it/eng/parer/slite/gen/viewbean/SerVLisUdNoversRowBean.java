package it.eng.parer.slite.gen.viewbean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import it.eng.parer.viewEntity.SerVLisUdNovers;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Types;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Ser_V_Lis_Ud_Novers
 *
 */
public class SerVLisUdNoversRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 4 August 2015 11:30" )
     */

    public static SerVLisUdNoversTableDescriptor TABLE_DESCRIPTOR = new SerVLisUdNoversTableDescriptor();

    public SerVLisUdNoversRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    public BigDecimal getIdUdNonVersErr() {
        return getBigDecimal("id_ud_non_vers_err");
    }

    public void setIdUdNonVersErr(BigDecimal id_ud_non_vers_err) {
        setObject("id_ud_non_vers_err", id_ud_non_vers_err);
    }

    public BigDecimal getIdErrContenutoVerSerie() {
        return getBigDecimal("id_err_contenuto_ver_serie");
    }

    public void setIdErrContenutoVerSerie(BigDecimal id_err_contenuto_ver_serie) {
        setObject("id_err_contenuto_ver_serie", id_err_contenuto_ver_serie);
    }

    public BigDecimal getIdUnitaDocNonVers() {
        return getBigDecimal("id_unita_doc_non_vers");
    }

    public void setIdUnitaDocNonVers(BigDecimal id_unita_doc_non_vers) {
        setObject("id_unita_doc_non_vers", id_unita_doc_non_vers);
    }

    public String getCdUnitaDoc() {
        return getString("cd_unita_doc");
    }

    public void setCdUnitaDoc(String cd_unita_doc) {
        setObject("cd_unita_doc", cd_unita_doc);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal id_strut) {
        setObject("id_strut", id_strut);
    }

    public String getCdRegistroKeyUnitaDoc() {
        return getString("cd_registro_key_unita_doc");
    }

    public void setCdRegistroKeyUnitaDoc(String cd_registro_key_unita_doc) {
        setObject("cd_registro_key_unita_doc", cd_registro_key_unita_doc);
    }

    public BigDecimal getAaKeyUnitaDoc() {
        return getBigDecimal("aa_key_unita_doc");
    }

    public void setAaKeyUnitaDoc(BigDecimal aa_key_unita_doc) {
        setObject("aa_key_unita_doc", aa_key_unita_doc);
    }

    public String getCdKeyUnitaDoc() {
        return getString("cd_key_unita_doc");
    }

    public void setCdKeyUnitaDoc(String cd_key_unita_doc) {
        setObject("cd_key_unita_doc", cd_key_unita_doc);
    }

    public Timestamp getDtFirstSesErr() {
        return getTimestamp("dt_first_ses_err");
    }

    public void setDtFirstSesErr(Timestamp dt_first_ses_err) {
        setObject("dt_first_ses_err", dt_first_ses_err);
    }

    public Timestamp getDtLastSesErr() {
        return getTimestamp("dt_last_ses_err");
    }

    public void setDtLastSesErr(Timestamp dt_last_ses_err) {
        setObject("dt_last_ses_err", dt_last_ses_err);
    }

    public String getCdErrPrinc() {
        return getString("cd_err_princ");
    }

    public void setCdErrPrinc(String cd_err_princ) {
        setObject("cd_err_princ", cd_err_princ);
    }

    public String getDsErrPrinc() {
        return getString("ds_err_princ");
    }

    public void setDsErrPrinc(String ds_err_princ) {
        setObject("ds_err_princ", ds_err_princ);
    }

    @Override
    public void entityToRowBean(Object obj) {
        SerVLisUdNovers entity = (SerVLisUdNovers) obj;
        this.setIdUdNonVersErr(entity.getIdUdNonVersErr());
        this.setIdErrContenutoVerSerie(entity.getIdErrContenutoVerSerie());
        this.setIdUnitaDocNonVers(entity.getIdUnitaDocNonVers());
        this.setCdUnitaDoc(entity.getCdUnitaDoc());
        this.setIdStrut(entity.getIdStrut());
        this.setCdRegistroKeyUnitaDoc(entity.getCdRegistroKeyUnitaDoc());
        this.setAaKeyUnitaDoc(entity.getAaKeyUnitaDoc());
        this.setCdKeyUnitaDoc(entity.getCdKeyUnitaDoc());
        if (entity.getDtFirstSesErr() != null) {
            this.setDtFirstSesErr(new Timestamp(entity.getDtFirstSesErr().getTime()));
        }
        if (entity.getDtLastSesErr() != null) {
            this.setDtLastSesErr(new Timestamp(entity.getDtLastSesErr().getTime()));
        }
        this.setCdErrPrinc(entity.getCdErrPrinc());
        this.setDsErrPrinc(entity.getDsErrPrinc());
    }

    @Override
    public SerVLisUdNovers rowBeanToEntity() {
        SerVLisUdNovers entity = new SerVLisUdNovers();
        entity.setIdUdNonVersErr(this.getIdUdNonVersErr());
        entity.setIdErrContenutoVerSerie(this.getIdErrContenutoVerSerie());
        entity.setIdUnitaDocNonVers(this.getIdUnitaDocNonVers());
        entity.setCdUnitaDoc(this.getCdUnitaDoc());
        entity.setIdStrut(this.getIdStrut());
        entity.setCdRegistroKeyUnitaDoc(this.getCdRegistroKeyUnitaDoc());
        entity.setAaKeyUnitaDoc(this.getAaKeyUnitaDoc());
        entity.setCdKeyUnitaDoc(this.getCdKeyUnitaDoc());
        entity.setDtFirstSesErr(this.getDtFirstSesErr());
        entity.setDtLastSesErr(this.getDtLastSesErr());
        entity.setCdErrPrinc(this.getCdErrPrinc());
        entity.setDsErrPrinc(this.getDsErrPrinc());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
