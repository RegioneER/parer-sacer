package it.eng.parer.slite.gen.tablebean;

import it.eng.spagoLite.db.base.BaseRowInterface;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;
import org.eclipse.persistence.internal.indirection.DatabaseValueHolder;
import org.eclipse.persistence.internal.sessions.AbstractRecord;
import it.eng.parer.entity.LogOper;
import it.eng.parer.entity.OrgStrut;
import it.eng.parer.entity.LogJob;
import it.eng.parer.entity.IamUser;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.sql.Clob;
import java.sql.Types;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * RowBean per la tabella Log_Oper
 *
 */
public class LogOperRowBean extends BaseRow implements BaseRowInterface, JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Tuesday, 11 March 2014 18:25" )
     */

    public static LogOperTableDescriptor TABLE_DESCRIPTOR = new LogOperTableDescriptor();

    public LogOperRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdLogOper() {
        return getBigDecimal("id_log_oper");
    }

    public void setIdLogOper(BigDecimal id_log_oper) {
        setObject("id_log_oper", id_log_oper);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal id_strut) {
        setObject("id_strut", id_strut);
    }

    public BigDecimal getIdUser() {
        return getBigDecimal("id_user");
    }

    public void setIdUser(BigDecimal id_user) {
        setObject("id_user", id_user);
    }

    public Timestamp getDtOper() {
        return getTimestamp("dt_oper");
    }

    public void setDtOper(Timestamp dt_oper) {
        setObject("dt_oper", dt_oper);
    }

    public String getTiOper() {
        return getString("ti_oper");
    }

    public void setTiOper(String ti_oper) {
        setObject("ti_oper", ti_oper);
    }

    public BigDecimal getIdVolumeConserv() {
        return getBigDecimal("id_volume_conserv");
    }

    public void setIdVolumeConserv(BigDecimal id_volume_conserv) {
        setObject("id_volume_conserv", id_volume_conserv);
    }

    public String getNmVolumeConserv() {
        return getString("nm_volume_conserv");
    }

    public void setNmVolumeConserv(String nm_volume_conserv) {
        setObject("nm_volume_conserv", nm_volume_conserv);
    }

    public BigDecimal getIdDoc() {
        return getBigDecimal("id_doc");
    }

    public void setIdDoc(BigDecimal id_doc) {
        setObject("id_doc", id_doc);
    }

    public String getCdRegistroKeyUnitaDoc() {
        return getString("cd_registro_key_unita_doc");
    }

    public void setCdRegistroKeyUnitaDoc(String cd_registro_key_unita_doc) {
        setObject("cd_registro_key_unita_doc", cd_registro_key_unita_doc);
    }

    public BigDecimal getAaKeyUnitaDoc() {
        return getBigDecimal("aa_key_unita_doc");
    }

    public void setAaKeyUnitaDoc(BigDecimal aa_key_unita_doc) {
        setObject("aa_key_unita_doc", aa_key_unita_doc);
    }

    public String getCdKeyUnitaDoc() {
        return getString("cd_key_unita_doc");
    }

    public void setCdKeyUnitaDoc(String cd_key_unita_doc) {
        setObject("cd_key_unita_doc", cd_key_unita_doc);
    }

    public String getTiDoc() {
        return getString("ti_doc");
    }

    public void setTiDoc(String ti_doc) {
        setObject("ti_doc", ti_doc);
    }

    public BigDecimal getPgDoc() {
        return getBigDecimal("pg_doc");
    }

    public void setPgDoc(BigDecimal pg_doc) {
        setObject("pg_doc", pg_doc);
    }

    public BigDecimal getIdLogJob() {
        return getBigDecimal("id_log_job");
    }

    public void setIdLogJob(BigDecimal id_log_job) {
        setObject("id_log_job", id_log_job);
    }

    @Override
    public void entityToRowBean(Object obj) {
        LogOper entity = (LogOper) obj;
        AbstractRecord ar;
        this.setIdLogOper(new BigDecimal(entity.getIdLogOper()));
        if (entity._persistence_get_orgStrut_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_orgStrut_vh()).getRow()) != null) {
                this.setIdStrut(new BigDecimal((Long) ar.get("LOG_OPER.ID_STRUT")));
            }
        } else {
            if (entity.getOrgStrut() != null) {
                this.setIdStrut(new BigDecimal(entity.getOrgStrut().getIdStrut()));
            }
        }
        if (entity._persistence_get_iamUser_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_iamUser_vh()).getRow()) != null) {
                this.setIdUser(new BigDecimal((Long) ar.get("LOG_OPER.ID_USER")));
            }
        } else {
            if (entity.getIamUser() != null) {
                this.setIdUser(new BigDecimal(entity.getIamUser().getIdUserIam()));
            }
        }
        if (entity.getDtOper() != null) {
            this.setDtOper(new Timestamp(entity.getDtOper().getTime()));
        }
        this.setTiOper(entity.getTiOper());
        this.setIdVolumeConserv(entity.getIdVolumeConserv());
        this.setNmVolumeConserv(entity.getNmVolumeConserv());
        this.setIdDoc(entity.getIdDoc());
        this.setCdRegistroKeyUnitaDoc(entity.getCdRegistroKeyUnitaDoc());
        this.setAaKeyUnitaDoc(entity.getAaKeyUnitaDoc());
        this.setCdKeyUnitaDoc(entity.getCdKeyUnitaDoc());
        this.setTiDoc(entity.getTiDoc());
        this.setPgDoc(entity.getPgDoc());
        if (entity._persistence_get_logJob_vh() instanceof DatabaseValueHolder) {
            if ((ar = ((DatabaseValueHolder) entity._persistence_get_logJob_vh()).getRow()) != null) {
                this.setIdLogJob(new BigDecimal((Long) ar.get("LOG_OPER.ID_LOG_JOB")));
            }
        } else {
            if (entity.getLogJob() != null) {
                this.setIdLogJob(new BigDecimal(entity.getLogJob().getIdLogJob()));
            }
        }
    }

    @Override
    public LogOper rowBeanToEntity() {
        LogOper entity = new LogOper();
        if (this.getIdLogOper() != null) {
            entity.setIdLogOper(this.getIdLogOper().longValue());
        }
        if (this.getIdStrut() != null) {
            if (entity.getOrgStrut() == null) {
                entity.setOrgStrut(new OrgStrut());
            }
            entity.getOrgStrut().setIdStrut(this.getIdStrut().longValue());
        }
        if (this.getIdUser() != null) {
            if (entity.getIamUser() == null) {
                entity.setIamUser(new IamUser());
            }
            entity.getIamUser().setIdUserIam(this.getIdUser().longValue());
        }
        entity.setDtOper(this.getDtOper());
        entity.setTiOper(this.getTiOper());
        entity.setIdVolumeConserv(this.getIdVolumeConserv());
        entity.setNmVolumeConserv(this.getNmVolumeConserv());
        entity.setIdDoc(this.getIdDoc());
        entity.setCdRegistroKeyUnitaDoc(this.getCdRegistroKeyUnitaDoc());
        entity.setAaKeyUnitaDoc(this.getAaKeyUnitaDoc());
        entity.setCdKeyUnitaDoc(this.getCdKeyUnitaDoc());
        entity.setTiDoc(this.getTiDoc());
        entity.setPgDoc(this.getPgDoc());
        if (this.getIdLogJob() != null) {
            if (entity.getLogJob() == null) {
                entity.setLogJob(new LogJob());
            }
            entity.getLogJob().setIdLogJob(this.getIdLogJob().longValue());
        }
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
